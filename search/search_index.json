{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"5\u00e8me Technique de Transition Informatique","text":"<p>Bienvenue en section informatique ! Voici 2 courtes video mettant en avant l'importance de l'apprentissage de la proggrammation.</p> <ul> <li> <p>Prends connaissance et signe le r\u00e8glement du local informatique.</p> </li> <li> <p>Prends connaissance et signe le Document d'Intentions P\u00e9dagoqiues du cours de python (UAA11).</p> </li> <li> <p>Prends connaissance et signe le  Document d'Intentions P\u00e9dagoqiues du cours de web dynamique (UAA7, UAA8, UAA12)*.</p> </li> <li> <p>Si tu es un nouvel arriv\u00e9 en TT Informatique, fais le plus vite possible la rem\u00e9diation en ligne autonome Python d\u00e9crite dans le chapitre 1 de ce pdf.</p> </li> <li> <p>Les autres UAAs Web ne n\u00e9cessitent pas de rem\u00e9diation.</p> </li> </ul>"},{"location":"uaa11_python/intro/intro/","title":"UAA11 Python","text":"<ul> <li> <p>Tu peux consulater le manuel de r\u00e9f\u00e9rence est Apprendre \u00e0 programmer en python 3 (pdf) de G\u00e9rad Swinnen </p> </li> <li> <p>Les r\u00e9sum\u00e9s de cours en d\u00e9but de chapitre proviennent du site d'Apprentissage de python au lyc\u00e9e en classe de premi\u00e8re NSI en France.</p> </li> <li> <p>Les exercies ont \u00e9t\u00e9 \u00e9cris \u00e0 partir de ces 2 sites mais aussi du site des olympiades d'informatique france ioi.</p> </li> <li> <p>Cette introduction \u00e0 l'UUA11 de python (pdf) synth\u00e9tise des r\u00e9f\u00e9rences de cours, d'exercices ainsi qu'une aide \u00e0 l'installation d'outils python.</p> <p>Elle fait \u00e9galement une introduction sur le fonctionnement d'un ordinateur.</p> </li> <li> <p>Au fur et \u00e0 mesure de ton avancement dans la mati\u00e8re, prends exemple sur ce memo python pour \u00e9crire le tien.</p> </li> </ul>"},{"location":"uaa11_python/tp1_var/tp1_var/","title":"UAA11 TP1 - Les variables, instructions d\u2019affectation, d\u2019affichage et de lecture","text":"<p>Notions abord\u00e9es : </p> <ul> <li> <p>variables,</p> </li> <li> <p>instruction d'affectation simples / augment\u00e9es ( <code>=</code>, <code>+=</code>, <code>-=</code>), </p> </li> <li> <p>instructions d'affichage et de lecture (<code>print</code>,<code>input</code>,)</p> </li> <li> <p>types de donn\u00e9es (<code>int</code>, <code>float</code>, <code>str</code>, <code>bool</code>, <code>list</code>, <code>tuple</code>)</p> </li> <li> <p>fonctions math\u00e9matiques (<code>round</code>,<code>cos</code>,<code>sin</code>,<code>randint</code>,<code>sqrt</code>)</p> </li> </ul> <p>Consignes</p> <ul> <li> <p>Prends connaissance du cours sur les variables, fais les activit\u00e9s ci-dessous puis r\u00e9ponds aux questions QCM du pdf.</p> </li> <li> <p>Si tu \u00e9prouves encore des difficult\u00e9s, fais les exercices propos\u00e9s en rem\u00e9diation au chapitre 6.</p> </li> <li> <p>Tu peux tester ton code avec l'IDE du chapitre \"7. Bac \u00e0 sable\"</p> </li> <li> <p>Cr\u00e9e un fichier \"memo.txt\" que tu compl\u00e8teras avec ce que tu as appris au fur et \u00e0 mesure de ton avancement dans le cours.</p> </li> </ul>"},{"location":"uaa11_python/tp1_var/tp1_var/#1-variables-et-affectations","title":"1. Variables et affectations","text":"<p>Variales</p> <p>Certains langages n\u00e9cessitent de d\u00e9clarer le type de chaque variable avant son utilisation.</p> <p>En python, ce n\u2019est pas n\u00e9cessaire, le type est d\u00e9fini de fa\u00e7on dynamique lors de la 1\u00e8re affectation de la variable. </p> Test 1 : Que valent tutu et tiri ? <pre><code>toto \u2190 24\ntutu \u2190 toto + 4\ntutu \u2190 tutu + 1\ntiri \u2190 \"hello\"+\"loulou\"\n</code></pre> Solution <p>tutu vaut 29 tiri vaut \"helloloulou\"</p> <p>Op\u00e9rateurs et expressions</p> <p>Dans une instruction d\u2019affectation, on trouve :</p> <ul> <li> <p>\u00e0 gauche de la fl\u00e8che <code>\u2190</code>, un nom de variable, et uniquement cela.</p> </li> <li> <p>\u00e0 droite de la fl\u00e8che, ce qu\u2019on appelle une expression qui doit pouvoir prendre une valeur. Les valeurs peuvent \u00eatre reli\u00e9es entre elles par des op\u00e9rateurs (<code>+</code>, <code>-</code>, <code>x</code>, <code>/</code> ...).</p> </li> <li> <p>l\u2019expression situ\u00e9e \u00e0 droite de la fl\u00e8che doit \u00eatre du m\u00eame type que la variable situ\u00e9e \u00e0 gauche. </p> <p>Variables  = Valeurs (avec op\u00e9rateurs \u00e9ventuels)</p> </li> </ul> <p>Remarques importantes</p> <ul> <li> <p>Attention la similitude de vocabulaire entre les math\u00e9matiques et l\u2019informatique est trompeuse !</p> <p>En math\u00e9matiques, une \u00ab variable \u00bb est g\u00e9n\u00e9ralement une inconnue, qui recouvre un nombre non pr\u00e9cis\u00e9 de valeurs. Lorsque l\u2019on \u00e9crit :</p> <pre><code>    y = 3 x + 2\n</code></pre> <p>les variables <code>x</code> et <code>y</code> satisfaisant \u00e0 l\u2019\u00e9quation existent en nombre infini (graphiquement, l\u2019ensemble des solutions \u00e0 cette \u00e9quation dessine une droite).</p> <p>Lorsque l\u2019on \u00e9crit :</p> <pre><code>    ax\u00b2 + bx + c = 0\n</code></pre> <p>la variable <code>x</code> d\u00e9signe les solutions \u00e0 cette \u00e9quation, c\u2019est-\u00e0-dire z\u00e9ro, une ou deux valeurs \u00e0 la fois \u2026</p> <p>En informatique, une variable poss\u00e8de \u00e0 un moment donn\u00e9 une valeur et une seule.</p> <p>A la rigueur, elle peut ne pas avoir de valeur du tout (une fois qu\u2019elle a \u00e9t\u00e9 d\u00e9clar\u00e9e, et tant qu\u2019on ne l\u2019a pas affect\u00e9e - \u00e0 signaler que dans certains langages, les variables non encore affect\u00e9es sont consid\u00e9r\u00e9es comme valant automatiquement z\u00e9ro). Mais ce qui est important, c\u2019est que cette valeur justement, ne \u00ab varie \u00bb pas \u00e0 proprement parler. Du moins elle ne varie que lorsqu\u2019elle est l\u2019objet d\u2019une instruction d\u2019affectation.</p> </li> <li> <p>La deuxi\u00e8me remarque concerne le signe de l\u2019affectation.</p> <p>En algorithmique, c\u2019est le signe <code>\u2190</code>. Mais en pratique, la quasi-totalit\u00e9 des langages emploient le signe <code>=</code>. Et l\u00e0, la confusion avec les maths est \u00e9galement facile. </p> <p>En maths, <code>A = B</code> et <code>B = A</code> sont deux propositions strictement \u00e9quivalentes.</p> <p>En informatique, absolument pas, puisque cela revient \u00e0 \u00e9crire <code>A \u2190 B</code> et <code>B \u2190 A</code>, deux choses bien diff\u00e9rentes.</p> <p>De m\u00eame, <code>A = A + 1</code>, qui en math\u00e9matiques, constitue une \u00e9quation sans solution, repr\u00e9sente en programmation une action tout \u00e0 fait licite (et de surcro\u00eet extr\u00eamement courante). Donc, attention   ! ! ! La meilleure des vaccinations contre cette confusion consiste \u00e0 bien employer le signe <code>\u2190</code> en pseudocode, signe qui a le m\u00e9rite de ne pas laisser place \u00e0 l\u2019ambigu\u00eft\u00e9. Une fois acquis les bons r\u00e9flexes avec ce signe, vous n\u2019aurez plus aucune difficult\u00e9 \u00e0 passer au <code>=</code> des langages de programmation.</p> </li> </ul> <p>Instructions de dialogue entre la machine et l\u2019utilisateur</p> <ul> <li> <p>L'instruction <code>print()</code> est une op\u00e9ration d'\u00e9criture: elle permet au programme d'afficher \u00e0 l\u2019\u00e9cran le contenu d'une variable ou du texte. </p> <p>Par exemple:</p> <pre><code>    &gt;&gt;&gt; a = 5\n    &gt;&gt;&gt; print( a )\n    5\n</code></pre> </li> <li> <p>L'instruction <code>input()</code> est une op\u00e9ration de lecture: elle permet de demander \u00e0 l'utilisateur de saisir des donn\u00e9es au clavier. </p> <p>Par exemple: <pre><code>    &gt;&gt;&gt; lettre = input(\"Entre une lettre : \")\n    Entre une lettre: A\n    &gt;&gt;&gt; print(lettre)\n    A\n</code></pre></p> <pre><code>    &gt;&gt;&gt; nb = int(input(\"Entre un nombre entier : \")\n    Entre une lettre: 3\n    &gt;&gt;&gt; print(nb)\n    3\n</code></pre> </li> <li> <p>Si besoin, tu peux tester ces codes dans le terminal :</p> <p> Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papier</p> </li> </ul> <p>Remarques importantes</p> <ul> <li> <p>La fonction <code>input()</code> renvoie la saisie de l'utilisateur sous la forme d'une cha\u00eene de caract\u00e8re (c'est \u00e0 dire du texte), et la fonction <code>int</code> permet de l'interpr\u00e9ter comme un nombre entier. </p> </li> <li> <p>Lecture et \u00e9criture sont donc des termes qui comme toujours en programmation, doivent \u00eatre compris du point de vue de la machine qui sera charg\u00e9e de les ex\u00e9cuter, et non de l'utilisateur qui se servira du programme. </p> </li> </ul> Test 2 : fonction input() <p>Compl\u00e8te sur une feuille le code suivant pour afficher le contenu de la variable y qui prend la valeur du quotient \\((2x-3)/(x-3)\\)</p> <pre><code>    x = int(input(\"Entre un entier : \"))\n    y = ...\n    ...\n</code></pre> Test 3 : S\u00e9quence d'instructions <p>Re-\u00e9cris le code sur une feuille et compl\u00e8te pour chaque ligne le contenu des 3 variables a, b, c : <pre><code>    a = 5\n    b = a+1\n    b = 2*b\n    b = b-a\n    b = b-2\n    print( a, B )\n</code></pre> Tu peux v\u00e9rifier ton code en l'ex\u00e9cutant pas \u00e0 pas avec l'application en ligne pythontutor</p> Test 4 : S\u00e9quence d'instructions <p>Que produit le code suivant ? <pre><code>    a = 5\n    b = 4\n    a = a-b\n    b = a+b\n    a = b-a\n    print( a, b )\n</code></pre></p> Solution <p>4 5</p> Test 5 : S\u00e9quence d'instructions <p>Que produit le code suivant ? <pre><code>    a = 7\n    b = 6*a\n    c = a+b\n    d = b-c\n    print( a, b, c, d )\n</code></pre></p> Solution <p>7 42 49 -7</p> Test 6 : Op\u00e9rations <p>Compl\u00e8te sur une feuille les deux lignes du code ci-dessous ( au niveau des \"...\") afin d'afficher le contenu de la variable <code>y</code> qui prend la valeur \\(3x^2 + 5x -7\\) <pre><code>    x = 3\n    y = ...\n    ...\n</code></pre> Vois-tu l'int\u00e9r\u00eat d'\u00e9crire la variables y en fonction de la variable x et non d'\u00e9crire directement la valeur voulue par y ?</p>"},{"location":"uaa11_python/tp1_var/tp1_var/#2-qcm-variables-et-affectation","title":"2. QCM Variables et affectation","text":"<pre><code>R\u00e9ponds aux questions du QCM 1.10 p3 du cours sur les variables.\n</code></pre> Solutions du QCM 1.10 p3 du pdf <ol> <li>a, c</li> <li>b, c, d</li> <li>c</li> <li>a, b, c</li> <li>c, d </li> </ol>"},{"location":"uaa11_python/tp1_var/tp1_var/#3-types-de-donnees","title":"3. Types de donn\u00e9es","text":"Test 7 : Comment calculer \\(y = \\sqrt{3x+5}\\) ? <p>Compl\u00e8te le code suivant sur une feuille ou utilise l'IDE du bac \u00e0 sable si tu veux le v\u00e9rifier.</p> <pre><code>    from math import sqrt\n    x = ...\n    y = sqrt( ... )\n    ...\n</code></pre> Test 8 : Que renvoie la fonction type ? <p><pre><code>    type(5)\n    type(5.0)\n    type(True)\n    type('Bonjour')\n</code></pre> Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papier</p> Test 9 : Transtipage <p>Corrige le code : <pre><code>    annee_naissance = input(\"Saisir votre ann\u00e9e de naissance : \")\n    age = 2023 - annee_naissance\n    print(\"Votre \u00e2ge :\",age)\n</code></pre> Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papier</p> <p>Transtipage</p> <p>Il existe de nombreuses fonctions de transtypage (changement). En g\u00e9n\u00e9ral, elles portent le nom du nouveau type que l'on veut obtenir. On utilisera essentiellement les fonctions suivantes :</p> <ul> <li><code>int</code> : permet de transtyper une donn\u00e9e en un entier</li> <li><code>float</code> : permet de transtyper une donn\u00e9e en un r\u00e9el</li> <li><code>str</code> : permet de transtyper une donn\u00e9e en uns cha\u00eene de caract\u00e8res</li> <li><code>list</code> : permet de transtyper une donn\u00e9e en une liste</li> </ul> Test 10 : Test d'\u00e9galit\u00e9 <code>==</code> <p>Teste dans le terminal les codes suivants:</p> <p><pre><code>    0.25**2 == 1/16\n\n    0.7**2 == 0.49\n\n    2*0.1 == 0.2\n\n    3*0.1 == 0.3\n</code></pre> Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papier</p> <p>Info</p> <p>L'instruction <code>==</code> permet de r\u00e9aliser un test d'\u00e9galit\u00e9. Elle renvoie donc le bool\u00e9en <code>True</code> si les deux membres sont \u00e9gaux et le bool\u00e9en <code>False</code> sinon (\u00e0 ne pas faire entre 2 r\u00e9els !!!).</p> Test 11 : Concat\u00e9nation <p>Que produit le code suivant ? <pre><code>    a = \"423\"\n    b = \"12\"\n    c = a + b\n    print(c)\n</code></pre></p> Test 12 : Concat\u00e9nation <p>Compl\u00e8te le code : <pre><code>    &gt;&gt;&gt; a = 'Bon'\n    &gt;&gt;&gt; b = 'jour'\n    &gt;&gt;&gt; salutation = ...\n    &gt;&gt;&gt; print(salutation)\n    Bonjour\n</code></pre></p> Test 13 : Print de variables <p>Compl\u00e8te le code : <pre><code>    &gt;&gt;&gt; prix = 1.1 * 2\n    &gt;&gt;&gt; phrase = ...\n    &gt;&gt;&gt; print(phrase)\n    Les baguettes coutent 2.2 euros\n</code></pre></p>"},{"location":"uaa11_python/tp1_var/tp1_var/#4-qcm-types-de-donnees","title":"4. QCM Types de donn\u00e9es","text":"<p>R\u00e9ponds aux questions du QCM 2.11 p6 du cours sur les variables.</p> Solutions du QCM 2.11 p6  du pdf <ol> <li>b</li> <li>d</li> <li>c</li> <li>d</li> <li>a, d</li> </ol>"},{"location":"uaa11_python/tp1_var/tp1_var/#5-exercices","title":"5. Exercices","text":"Exo 1 : D\u00e9composition d\u2019un montant en euros <ul> <li> <p>\u00c9cris un programme permettant de d\u00e9composer un montant entr\u00e9 au clavier en billets de 20, 10, 5 euros en utilisant les op\u00e9rateurs de la division euclidienne.</p> </li> <li> <p>Modifie ton programme pour ne pas utiliser l\u2019op\u00e9rateur modulo.</p> </li> </ul> <p>Info</p> <p>// : division enti\u00e8re</p> <p>% : modulo ou reste de la division</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur</p> Exo 2 : Somme de deux fractions (Maison) <p>Ecris un programme permettant de calculer le num\u00e9rateur et le d\u00e9nominateur d\u2019une somme de deux fractions enti\u00e8res (on ne demande pas de trouver la fraction r\u00e9sultat sous forme irr\u00e9ductible).</p> Exo 3 : Conversion prix HT en TTC (Maison) <p>Ecris un programme qui lit le prix HT d\u2019un article, le nombre d\u2019articles et le taux de TVA, et qui fournit le prix total TTC correspondant. Fais en sorte que des libell\u00e9s apparaissent clairement.</p>"},{"location":"uaa11_python/tp1_var/tp1_var/#6-remediation","title":"6. Rem\u00e9diation","text":"Exo 4 : Surface d\u2019un champ (Rem\u00e9diation) <p>\u00c9crire un programme qui demande \u00e0 l\u2019utilisateur de taper la largeur et la longueur d\u2019un champ et qui en affiche la surface.</p> Exo 5 : Bonjour (Rem\u00e9diation) <p>\u00c9crire un algorithme qui demande \u00e0 l\u2019utilisateur de saisir son pr\u00e9nom et qui affiche le message \"Bonjour pr\u00e9nom\" en rempla\u00e7ant pr\u00e9nom par le texte saisi.</p> Exo 6 : Prix des pommes (Rem\u00e9diation) <p>\u00c9crire un algorithme qui demande \u00e0 l\u2019utilisateur de taper le prix au kg de pommes, la masse achet\u00e9e et qui affiche le prix \u00e0 payer.</p> Exo 7 : France IOI (Rem\u00e9diation) <p>Vas sur le site de France IOI et fais dans les chapitres suivants :</p> <ul> <li> <p>Niveau 1, chap 1 - Affichage de texte \u2013 Suite d\u2019instructions : tous les exerices des rubriques d\u00e9couverte / cours / validation (tu peux passer les rubriques entrainements et challenge)</p> </li> <li> <p>Niveau 1, Chap 3 - Calculs et d\u00e9couverte des variables : exercices de 1) \u00e0 5)</p> </li> <li> <p>Niveau 1, Chap 4 \u2013 Lecture de l\u2019entr\u00e9e : exercices de 1) \u00e0 3)</p> </li> </ul>"},{"location":"uaa11_python/tp1_var/tp1_var/#7-bac-a-sable","title":"7. Bac \u00e0 sable","text":"<ul> <li> <p>Python Tutor en ligne (pour le debug pas \u00e0 pas)</p> </li> <li> <p>IDE dans le navigateur:</p> </li> </ul> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur <ul> <li>[Baston IDE en ligne] (https://console.basthon.fr/)</li> </ul>"},{"location":"uaa11_python/tp2_fonctions/tp2_fonc/","title":"UAA11 TP2 - Les fonctions","text":"<p>Notions abord\u00e9es : </p> <ul> <li> <p>d\u00e9finition d'une fonction ( <code>def</code> )</p> </li> <li> <p>param\u00e8tres lors de l'appel ( entr\u00e9es ), renvoi du r\u00e9sultat ( sorties ) ( <code>return</code> )</p> </li> <li> <p>variables locales, variables globales ( <code>global</code> )</p> </li> </ul> <p>Consignes</p> <ul> <li> <p>Prends connaissance du cours sur les fonctions, fais les activit\u00e9s ci-dessous puis r\u00e9ponds aux questions QCM du pdf.</p> </li> <li> <p>Si tu \u00e9prouves encore des difficult\u00e9s, fais les exercices propos\u00e9s en rem\u00e9diation au chapitre 5.</p> </li> <li> <p>Tu peux tester ton code avec l'IDE du chapitre \"6. Bac \u00e0 sable\"</p> </li> <li> <p>Compl\u00e8te ton fichier \"memo\" que tu compl\u00e8teras avec ce que tu as appris au fur et \u00e0 mesure de ton avancement dans le cours.</p> </li> </ul>"},{"location":"uaa11_python/tp2_fonctions/tp2_fonc/#1-introduction-avec-un-exemple","title":"1. Introduction avec un exemple","text":"Test 1: Appel de la fonction rectange <p>On consid\u00e8re la fonction ci-dessous. </p> <p>Ex\u00e9cute le code. Il ne se passe rien de visible : la fonction a juste \u00e9t\u00e9 mise en m\u00e9moire.</p> <p>Pour pouvoir l'utiliser, il faut l'appeler. </p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 8/8</p> <p>Ecris dans le terminal ci-dessus les codes suivants et observe les sorties obtenues :</p> <pre><code>    &gt;&gt;&gt; perimetre_rectangle\n</code></pre> <pre><code>    &gt;&gt;&gt; perimetre_rectangle()\n</code></pre> <pre><code>    &gt;&gt;&gt; perimetre_rectangle\n</code></pre> <pre><code>    &gt;&gt;&gt; perimetre_rectangle(long,larg)\n</code></pre> <pre><code>    &gt;&gt;&gt; perimetre_rectangle(3)\n</code></pre> <p><pre><code>    &gt;&gt;&gt; perimetre_rectangle(3,4)\n</code></pre> Lorsque l'on passe des valeurs aux param\u00e8tres d'une fonction, celles-ci peuvent \u00eatre d\u00e9finies directement au moment de l'appel comme dans la cellule pr\u00e9c\u00e9dente, mais \u00e9galement \u00e0 l'aide de variables pr\u00e9alablement d\u00e9finies.</p> <p>Ex\u00e9cute la cellule suivante :</p> <p><pre><code>    &gt;&gt;&gt; a = 2\n    &gt;&gt;&gt; b = 5\n    &gt;&gt;&gt; perimetre_rectangle(a,b)\n</code></pre> Observons \u00e0 pr\u00e9sent avec Python Tutor ce qu'il se passe au niveau des variables lors de l'ex\u00e9cution de la cellule ci-dessus.</p> <p>Pour cela, ex\u00e9cute le code  et visualise pas \u00e0 pas son ex\u00e9cution avec Python Tutor en ligne. Regarde en particulier les blocs \u00e0 droite qui sont cr\u00e9\u00e9s et d\u00e9truits.</p> <p>A retenir</p> <p>Les variables situ\u00e9es \u00e0 l'ext\u00e9rieur d'une fonction sont appel\u00e9es variables globales et les variables situ\u00e9es \u00e0 l'int\u00e9rieur d'une fonction (y compris les param\u00e8tres) sont appel\u00e9es variables locales. A la fin de l'ex\u00e9cution d'une fonction, les variables locales sont d\u00e9truites.</p> <p>Remarque :</p> <p>les variables globales et locales peuvent avoir le m\u00eame nom. Mais, sauf type particulier comme les listes ou manipulations particuli\u00e8res que nous n'aborderons pas dans ce cours, elles n'ont pas de lien entre elles comme le montre l'ex\u00e9cution de la cellule suivante avec les variables globale et locale <code>perimetre</code> (on remarquera \u00e9galement sur cet exemple que si la fonction admet 2 param\u00e8tres avec des noms diff\u00e9rents afin de les diff\u00e9rencier, l'appel peut se faire avec les m\u00eames variables, c'est-\u00e0-dire les m\u00eames valeurs).</p> <pre><code>    def perimetre_rectangle(long, larg):\n    perimetre = 2*(long + larg)\n    return perimetre\n\n    &gt;&gt;&gt; perimetre = 2\n    &gt;&gt;&gt; perimetre_rectangle(perimetre,perimetre)\n</code></pre> <p>Dans les exemples ci-dessus, nous avons vu que la valeur qui est affich\u00e9e en sortie est la valeur renvoy\u00e9e par la fonction.  Souvent, il est utile de stocker cette valeur dans une variable afin de pouvoir la r\u00e9utiliser ult\u00e9rieurement.</p> <p>Ex\u00e9cute le code suivant avec Python Tutor en ligne et observe pr\u00e9cis\u00e9ment ce qu'il se passe \u00e0 l'\u00e9tape 8 lorsque la fonction renvoie sa valeur et que son bloc est d\u00e9truit.</p> <pre><code>    def perimetre_rectangle(long, larg):\n        perimetre = 2*(long + larg)\n        return perimetre\n\n    &gt;&gt; a = 2\n    &gt;&gt;&gt; b = 5\n    &gt;&gt;&gt; valeur_perimetre = perimetre_rectangle(a,b)\n</code></pre> <p>Remarque :</p> <p>Lorsqu'une fonction renvoie plusieurs valeurs simultan\u00e9ment, on peut les affecter s\u00e9par\u00e9ment \u00e0 diff\u00e9rentes variables. Ceci sera abord\u00e9 dans l'activit\u00e9 pratique qui suit ce point de cours.</p>"},{"location":"uaa11_python/tp2_fonctions/tp2_fonc/#2-comprendre-et-manipuler-les-fonctions","title":"2. Comprendre et manipuler les fonctions","text":"<p>Rappel sur les fonctions</p> <p>Les fonctions sont une brique de base en programmation :</p> <ol> <li>on leur donne des informations en entr\u00e9e, </li> <li>elles ex\u00e9cutent des calculs en utilisant ces informations,</li> <li>elles renvoient un r\u00e9sultat en sortie.</li> </ol> <p>Un point important \u00e0 comprendre est que lorsqu'on utilise des fonctions, on proc\u00e8de en 2 temps :</p> <ul> <li>dans un 1er temps, on les d\u00e9finit,</li> <li>dans un 2nd temps, on effectue des appels de fonction.</li> </ul> <p>Dans cette activit\u00e9, toutes les fonctions que l'on va manipuler sont d\u00e9j\u00e0 enti\u00e8rement \u00e9crites. Le but est de comprendre, d'une part, ce qu'elles calculent et ce qu'elles renvoient, et, d'autre part, de savoir quel type d'appel il faut effectuer pour r\u00e9pondre \u00e0 tel ou tel probl\u00e8me.</p> Test 2 : Fonction carre <pre><code>    def carre(x):\n    return x**2\n</code></pre> <ol> <li>Quel est le mot-cl\u00e9 qui permet de d\u00e9finir une fonction ?</li> <li>Comment se nomme la fonction ?</li> <li>Que renvoie cette fonction ?</li> <li>Quelle instruction doit-on \u00e9crire pour calculer le carr\u00e9 de \\(42\\) ?</li> <li>Quelle instruction doit-on \u00e9crire pour calculer le carr\u00e9 de \\(-12\\) ?</li> </ol> Solution <ol> <li>def</li> <li>carre</li> <li>le nombre pass\u00e9 en param\u00e8tre \u00e9lev\u00e9 au carr\u00e9</li> <li>carre(42)</li> <li>carre(-12)</li> </ol> Test 3 : Utilisation de la fonction carre <p>On souhaite affecter \u00e0 la variable <code>ab</code> la valeur \\(8^2+(-3)^2\\)</p> <p>Quelle instruction \u00e9crire en utilisant la fonction carre du test2 ?</p> Solution <pre><code>carre(8) + carre(-3)\n</code></pre> Test 4 : Comparaison <p>Info</p> <p>On rappelle que l'instruction <code>a == b</code> renvoie <code>True</code> si les contenus des variables <code>a</code> et <code>b</code> sont \u00e9gales, et <code>False</code> sinon.</p> <p>Ecrire une instruction permettant de comparer la valeur \\(8^{2} + (-3)^{2}\\) et la valeur \\(8^{2} + 3^{2}\\) en utilisant la fonction de carre du test2.</p> Solution <pre><code>carre(8) + carre(-3) == carre(8) + carre(3)\n</code></pre> Test 5 : Parit\u00e9 <pre><code>    def est_pair(x):\n    return x % 2 == 0\n</code></pre> <ol> <li>Comment se nomme la fonction ?</li> <li>Que renvoie cette fonction ?</li> <li>Quel est l'int\u00e9r\u00eat de cette fonction ?</li> <li>Quelle instruction doit-on \u00e9crire pour savoir si le nombre \\((-31)^{2}\\) est pair ?</li> <li>Quelle instruction doit-on \u00e9crire pour savoir si le nombre est \\(12^2\\) impair  ?</li> </ol> Solution <ol> <li>est_pair </li> <li>renvoie <code>True</code> si le reste de la division par 2 du nombre pass\u00e9 est nul, <code>False</code> s'il ne l'est pas</li> <li>d\u00e9terminer si un nombre est pair ou impair</li> <li>est_pair(carre(-32))</li> <li>est_pair(carre(12))</li> </ol> Test 6 : Op\u00e9ration <pre><code>    def somme_produit (a,b):\n    return ( a+b,a*b )\n</code></pre> <ol> <li>Comment se nomme la fonction ?</li> <li>Que renvoie cette fonction ?</li> <li>Combien y a-t-il de param\u00e8tres ?</li> <li>Quelle instruction doit-on \u00e9crire pour calculer la somme et la produit des nombres \\(2,3\\) et \\(-3,5\\) ?</li> <li>Quelle instruction doit-on \u00e9crire pour affecter aux variables <code>somme</code> et <code>produit</code> la somme et le produit des nombres \\(6,8\\) et \\(-7,5\\) ?</li> </ol> <p>A retenir</p> <p>Lorsque une fonction renvoie plusieurs r\u00e9sultats, on peut les affecter s\u00e9par\u00e9ment dans des variables.</p> <p>Par exemple, si la fonction <code>ma_fonction</code> renvoie \\(n\\) r\u00e9sultats, on peut affecter ces \\(n\\) r\u00e9sultats dans \\(n\\) variables <code>x1</code>, <code>x2</code>, ..., <code>xn</code> \u00e0 l'aide de l'instruction</p> <pre><code>    x1, x2, ..., xn = ma_fonction(...)\n</code></pre> Solution <ol> <li>somme_produit </li> <li>renvoie la somme et le produit de 2 nombres pass\u00e9s en param\u00e8tre</li> <li>2 param\u00e8tres</li> <li> <p><code>somme_produit(2,3)</code></p> <p><code>somme_produit(-3,5)</code></p> </li> <li> <p>somme, produit = somme_produit(6,8) et somme, produit = somme_produit(-7,5)</p> </li> </ol> Test 7 : Evolution des prix <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> <ol> <li> <p>Que renvoie l'instruction <code>evolution_prix(5,2)</code> ? </p> <p>Donne une interpr\u00e9tation concr\u00e8te de ce r\u00e9sultat.</p> </li> <li> <p>Que renvoie l'instruction <code>evolution_prix(5,-3)</code> ? </p> <p>Donne une interpr\u00e9tation concr\u00e8te de ce r\u00e9sultat.</p> </li> <li> <p>Ecrirs dans la cellule ci-desous une s\u00e9quence d'instructions utilisant cette fonction pour conna\u00eetre le prix d'un article valant initialement \\(50\\) euros et subissant successivement une hausse de \\(5\\%\\) puis une baisse de \\(2\\%\\). </p> </li> </ol>"},{"location":"uaa11_python/tp2_fonctions/tp2_fonc/#3-creer-ses-propres-fonctions","title":"3. Cr\u00e9er ses propres fonctions","text":"<p>Rappel sur les fonctions</p> <p>Les fonctions sont une brique de base en programmation :</p> <ol> <li>on leur donne des informations en entr\u00e9e, </li> <li>elles ex\u00e9cutent des calculs en utilisant ces informations,</li> <li>elles renvoient un r\u00e9sultat en sortie.</li> </ol> <p>Un point important \u00e0 comprendre est que lorsqu'on utilise des fonctions, on proc\u00e8de en 2 temps :</p> <ul> <li>dans un 1er temps, on les d\u00e9finit,</li> <li>dans un 2nd temps, on effectue des appels de fonction.</li> </ul> <p>Exemple</p> <p>On d\u00e9finit, dans un 1er temps, une fonction appel\u00e9e <code>aire_rectangle</code> :</p> <ol> <li>qui a 2 param\u00e8tres (c'est \u00e0 dire 2 entr\u00e9es) : <code>longueur</code> et <code>largeur</code>,</li> <li>qui effectue le calcul de l'aire du rectangle de longueur <code>longueur</code> et de largeur <code>largeur</code></li> <li>et renvoie (c'est \u00e0 dire produit en sortie) le r\u00e9sultat obtenu.</li> </ol> <pre><code>    def aire_rectangle(longueur, largeur):\n        aire = longueur * largeur\n        return aire\n</code></pre> <p>On peut, dans un 2nd temps, appeler cette fonction autant de fois que l'on veut gr\u00e2ce \u00e0 son nom pour calculer des aires de rectangles :</p> <pre><code>    aire = aire_rectangle(3, 5)\n</code></pre> <p>Le but de cette activit\u00e9 est de cr\u00e9er ses propres fonctions pour r\u00e9pondre \u00e0 des probl\u00e8mes simples.</p> Test 8 : P\u00e9rim\u00e8tre d'un rectangle <ol> <li> <p>Compl\u00e9te la fonction <code>perimetre_rectangle</code> suivante pour qu'elle renvoie le p\u00e9rim\u00e8tre d'un rectangle \u00e0 partir de sa longueur <code>longueur</code> et de sa largeur <code>largeur</code> :</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> <p>Effectue dans l'IDE ci-dessus des appels de fonctions pour calculer le p\u00e9rim\u00e8tre des rectangles suivants :</p> <ul> <li> <p>rectangle 1 : longueur \\(5\\) et largeur \\(4\\)</p> </li> <li> <p>rectangle 2 : largeur \\(3,5\\) et longueur \\(10\\)</p> </li> <li> <p>rectangle 3 : largeur \\(7\\) et longueur \\(12,4\\)</p> </li> <li> <p>carr\u00e9 de c\u00f4t\u00e9 \\(2\\)</p> </li> </ul> </li> </ol> Test 9 :  Visite d'un parc d'attraction <p>Un parc d'attractions affiche les tarifs suivants : \\(8,50\\) euros par enfant et \\(12\\) euros par adulte.</p> <ol> <li> <p>Compl\u00e9te la fonction <code>prix</code> suivante pour qu'elle renvoie le prix total \u00e0 payer \u00e0 partir du nombre <code>nb_enfants</code> d'enfants et du nombre <code>nb_adultes</code> d'adultes.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> <p>Modifie le code de la fonction pr\u00e9c\u00e9dente pour qu'elle ne soit \u00e9crite que sur 2 lignes.</p> </li> <li> <p>Quelle instruction faut-il \u00e9crire pour conna\u00eetre le prix \u00e0 payer par une famille de deux adultes et trois enfants ?</p> </li> </ol> Test 10 :  Prix HT et TTC <ol> <li> <p>Compl\u00e9te la fonction <code>prix_TTC</code> pour qu'elle renvoie le prix TTC d'un article \u00e0 partir de son prix HT. On prendra un taux de TVA de \\(20\\%\\).</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> <p>Modifie la fonction pr\u00e9c\u00e9dente pour qu'elle puisse fonctionner avec n'importe quel taux de TVA.</p> </li> <li> <p>Ecris une fonction <code>prix_HT</code> qui renvoie le prix HT d'un article \u00e0 partir de son prix TTC et d'un taux de TVA donn\u00e9.</p> </li> </ol> Test 11 :  Aire d'un disque <p>Compl\u00e8te la fonction <code>aire_disque</code> suivante pour qu'elle renvoie l'aire d'un disque \u00e0 partir de son rayon <code>r</code>.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> <p>Fonction <code>assert</code></p> <p>L instruction <code>assert</code> permet d'afficher un message d'erreur quand la proposition qui suit est fausse. Dans l'exemple dans l'IDE ci-dessus, le r\u00e9sultat renvoy\u00e9 par la fonction <code>test11_aire_disque</code> est compar\u00e9 avec l'aire attendue. S'il est faux <code>assert False</code> g\u00e9n\u00e8re une erreur du type <code>AssertionError</code> et le programme est arr\u00eat\u00e9, si'il est vrai, <code>assert True</code> ne fait rien et le programme continue de se d\u00e9rouler normalement.</p> Test 12 :  Delta <p>Compl\u00e8te la fonction <code>delta</code> suivante pour qu'elle renvoie le discriminant delta d'une fonction polyn\u00f4me \\(x\\longmapsto ax^2+bx+c\\)`.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp2_fonctions/tp2_fonc/#4-qcm-fonctions","title":"4. QCM Fonctions","text":"<p>R\u00e9ponds aux questions du QCM 6.2 p3 du cours sur les fonctions.</p> Solutions du QCM 6.2 p3 du pdf <ol> <li>b, c</li> <li>b, d</li> <li>d</li> <li>b, d</li> <li>a </li> </ol>"},{"location":"uaa11_python/tp2_fonctions/tp2_fonc/#5-remediation","title":"5. Rem\u00e9diation","text":"Test 13 : Algorea (Rem\u00e9diation) <p>Vas sur le site d'Algorea Serious Game et dans le chapitre 8 - \"Cr\u00e9er ses propres fonctions\", fais les exercices:</p> <ol> <li> <p>Construire une machine</p> </li> <li> <p>Rejoindre la fus\u00e9e</p> </li> </ol>"},{"location":"uaa11_python/tp2_fonctions/tp2_fonc/#6-bac-a-sable","title":"6. Bac \u00e0 sable","text":"<ul> <li> <p>Python Tutor en ligne (pour le debug pas \u00e0 pas)</p> </li> <li> <p>IDE dans le navigateur:</p> </li> </ul> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur <ul> <li>[Baston IDE en ligne] (https://console.basthon.fr/)</li> </ul>"},{"location":"uaa11_python/tp3_tests/tp3_tests/","title":"UAA11 TP3 - Les Tests","text":"<p>Notions abord\u00e9es : </p> <ul> <li> <p>condition de type logique ou bool\u00e9en (True, False)</p> </li> <li> <p>tests et op\u00e9rateurs de comparaison ( <code>==</code>, <code>!=</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>in</code> )</p> </li> <li> <p>op\u00e9rateurs logiques ( <code>not</code>, <code>or</code>, <code>and</code> )</p> </li> <li> <p>embranchements simples ( <code>if</code> <code>else</code>  ), multiples ( <code>if</code> <code>elif</code> <code>else</code>  )</p> </li> </ul> <p>Consignes</p> <ul> <li> <p>Prends connaissance du cours sur les tests e, fais les activit\u00e9s ci-dessous puis r\u00e9ponds aux questions QCM du pdf.</p> </li> <li> <p>Si tu \u00e9prouves encore des difficult\u00e9s, fais les exercices propos\u00e9s en rem\u00e9diation au chapitre 7.</p> </li> <li> <p>Une fois le chapitre termin\u00e9, les solutions des exercices seront disponibles au chapitre 8.</p> </li> <li> <p>Tu peux tester ton code avec l'IDE du chapitre \"9. Bac \u00e0 sable\"</p> </li> <li> <p>Compl\u00e8te ton fichier \"memo\" que tu compl\u00e8teras avec ce que tu as appris au fur et \u00e0 mesure de ton avancement dans le cours.SS</p> </li> </ul>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#1-conditions-et-tests","title":"1. Conditions et Tests","text":"<p>Le but de cette activit\u00e9 est de manipuler les conditions et les tests.</p> Test 1 : Op\u00e9rateurs de comparaisons et op\u00e9rateurs logiques <p>D\u00e9termine les r\u00e9sultats de chacun des tests suivants puis v\u00e9rifie en ex\u00e9cutant les cellules dans le terminal :</p> <p><pre><code>    7 &gt;= 0\n    5 == 3\n    3 != 3\n    7 &lt; 3.8\n    4 &lt; 4\n    4 &lt;= 4\n    4 &gt; -2\n    5 != 5.1\n    -3.2 &gt;= 4.3\n    4 == 4.0\n    2*0.1 == 0.2\n    3*0.1 == 0.3\n    0.7**2 != 0.49\n</code></pre> Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papier</p> <p>A retenir</p> <p>Les calculs alg\u00e9briques et les tests avec les nombres entiers (type <code>int</code>) sont tous exacts.</p> <p>En revanche, il n'en est pas de m\u00eame avec les nombres flottants (type <code>float</code>) : certains calculs sont exacts et d'autres non, de m\u00eame pour les tests. Enfin, c'est ce que semble montrer les exemples ci-dessus. Ces \"erreurs\" sont dues \u00e0 la fa\u00e7on dont les nombres flottants sont repr\u00e9sent\u00e9s en binaire dans l'ordinateur. En fait, ces erreurs peuvent \u00eatre contr\u00f4l\u00e9es et les calculs avec les flottants sont assur\u00e9s \u00eatre exacts avec 16 d\u00e9cimales.</p> <p>D\u00e9termine les r\u00e9sultats de chacune des conditions suivantes puis v\u00e9rifie en ex\u00e9cutant les cellules :</p> <p><pre><code>    a = 3\n    a &gt;= 0 and a &lt; 5\n\n    a = 3\n    0 &lt;= a &lt; 5    \n    # Python autorise le test en double in\u00e9galit\u00e9. Cette cellule est \u00e9quivalente \u00e0 la cellule pr\u00e9c\u00e9dente\n\n    not(4 &gt; 3)\n\n    a = 3\n    b = 5\n    a &gt; b and a &gt; 0\n\n    a = 3\n    b = 5\n    a &gt; b or a &gt; 0\n\n    a = 4\n    b = a + 1\n    b - a == 1\n\n    a = 4\n    b = a + 1\n    not(a - b &gt; 0)\n\n    a = 3.7\n    b = 2.1\n    a*b &gt;= 4 and a - b &gt;= 1\n\n    a = 3.7\n    b = 2.1\n    not(a*(b-2) - 3 &lt; 0)\n</code></pre> Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papier</p> <p>D\u00e9termine les r\u00e9sultats des deux conditions suivantes puis v\u00e9rifier en ex\u00e9cutant les cellules. </p> <p>Que peut-on en conclure ?</p> <pre><code>    a = 3\n    b = 4.5\n    c = -5\n    a &gt; 0 or (b &gt; 0 and c &gt;= 0)\n\n    a = 3\n    b = 4.5\n    c = -5\n    (a &gt; 0 or b &gt; 0) and c &gt;= 0\n</code></pre>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#2-qcm-conditions-et-tests","title":"2. QCM Conditions et Tests","text":"<p>R\u00e9ponds aux questions du QCM 2.7 p2 questions 1 \u00e0 4 du cours sur les tests.</p> Solutions du QCM 2.7 p2 questions 1 \u00e0 4 du pdf <ol> <li>b, d</li> <li>b</li> <li>a, d</li> <li>a, b, c, d</li> </ol>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#3-embranchements-simples","title":"3. Embranchements simples","text":"Test 2 : Jeu de r\u00f4le <ol> <li> <p>Dans un jeu, un joueur dispose de <code>100</code> points de vie et d'une d\u00e9fense de <code>40</code>.</p> <p>Il subit une attaque de valeur <code>attaque</code>.</p> <p>Compl\u00e8te la fonction suivante <code>attaque_defense</code> renvoyant le nouveau nombre de points de vie du joueur sachant que :</p> <ul> <li> <p>si la valeur de l'attaque est strictement sup\u00e9rieure \u00e0 celle de la d\u00e9fense, le joueur perd <code>attaque - 40</code> points de vie,</p> </li> <li> <p>si la valeur de l'attaque est inf\u00e9rieure ou \u00e9gale \u00e0 celle de la d\u00e9fense, le joueur ne perd aucun point de vie.</p> </li> </ul> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> <p>On modifie la fonction pr\u00e9c\u00e9dente en une fonction <code>points_vie_attaque_d\u00e9fense</code> pour qu'elle fonctionne avec n'importe quel nombre de points de vie, n'importe quelle d\u00e9fense et n'importe quelle attaque en respectant la r\u00e8gle :</p> <ul> <li> <p>si la valeur de l'attaque est strictement sup\u00e9rieure \u00e0 celle de la d\u00e9fense, le joueur perd <code>attaque - d\u00e9fense</code> points de vie,</p> </li> <li> <p>si la valeur de l'attaque est inf\u00e9rieure ou \u00e9gale \u00e0 celle de la d\u00e9fense, le joueur ne perd aucun point de vie,</p> </li> <li> <p>si le nouveau nombre de points de vie est strictement n\u00e9gatif, on le ram\u00e8ne \u00e0 0.</p> </li> </ul> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> </ol> Test 3 : Tirage photos <p>Un photographe propose le tirage de photos num\u00e9riques au tarif de \\(0,16\\) euro l'unit\u00e9. Le tarif devient de \\(0,12\\) euro l'unit\u00e9 pour une commande d'au moins \\(75\\) photos.</p> <p>Compl\u00e8te le code de la fonction suivante <code>prix_developpement</code>  afin qu'elle renvoie le montant \u00e0 payer en fonction du nombre de photos que l'on souhaite tirer.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 4 : Reprographie <code>MAISON</code> <p>Un commerce de reprographie facture \\(0,20\\) euro l'unit\u00e9 les \\(20\\) premi\u00e8res photocopies et \\(0,10\\) euro l'unit\u00e9 les suivantes.</p> <p>En s'aidant de la fonction \u00e9cris au test3, \u00e9cris une fonction <code>prix_reprographie</code> prenant en param\u00e8tre les nombres de photocopies \u00e0 r\u00e9aliser et renvoyant le prix \u00e0 payer.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 5 : Pile ou face <p>Compl\u00e8te la fonction suivante <code>pile_ou_face</code> afin de simuler le jeu du Pile ou Face avec une pi\u00e8ce \u00e9quilibr\u00e9e.</p> <p>(<code>for loop in range(50)</code> permet de r\u00e9p\u00e9ter 50 fois une instruction - voir le chapitre suivant)</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 6 : Suite de Syracuse <code>MAISON</code> <p>On consid\u00e8re une fonction <code>syracuse</code> qui prend en param\u00e8tre un entier \\(n\\) sup\u00e9rieur ou \u00e9gal \u00e0 \\(1\\) et qui renvoie un nombre entier \u00e9gal \u00e0 la valeur de \\(n/2\\) si \\(n\\) est pair et \u00e0 la valeur de \\(3n+1\\) si \\(n\\) est impair.</p> <ol> <li>Compl\u00e8te le code de cette fonction ainsi que les 2 lignes de test.     Que renvoient les instructions <code>syracuse(0)</code>, <code>syracuse(-5)</code> et <code>syracuse('A')</code> ? Est-ce coh\u00e9rent avec l'\u00e9nonc\u00e9 ?</li> </ol> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> <ol> <li>Compl\u00e8te le code de la fonction ci-dessous afin qu'elle v\u00e9rifie \u00e0 la premi\u00e8re ligne gr\u00e2ce \u00e0 un test d'assertion que les donn\u00e9es pass\u00e9es en param\u00e8tre sont bien des entiers sup\u00e9rieurs ou \u00e9gaux \u00e0 \\(1\\).</li> </ol> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 7 : Intervention d'un technicien <p>Dans le cadre d'un contrat de d\u00e9pannage, un technicien applique le tarif suivant :</p> <ul> <li> <p>s'il travaille moins de 2h, il applique un forfait de \\(150\\) euros,</p> </li> <li> <p>s'il travaille plus de 2h, il ajoute \u00e0 ce forfait la somme de \\(40\\) euros par heure suppl\u00e9mentaire.</p> </li> </ul> <p>Compl\u00e8te le code de la fonction suivante <code>facture_intervention</code> afin qu'elle renvoie la facture du technicien suivant son nombre d'heures travaill\u00e9es.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#4-embranchements-multiples","title":"4. Embranchements multiples","text":"Test 8 : Envoi de courrier <p>La fonction ci-dessous <code>affranchissement</code> renvoie le prix \u00e0 payer en euros suivant le poids en grammes de la lettre que l'on veut envoyer.</p> <ol> <li> <p>Que renvoient les instructions <code>affranchissement(15)</code>, <code>affranchissement(53)</code> et <code>affranchissement(250)</code> ?</p> </li> <li> <p>On d\u00e9sire envoyer une lettre pesant 365 grammes. Quelle instruction doit-on saisir pour conna\u00eetre le prix \u00e0 payer ? Quel est ce prix ?</p> </li> <li> <p>En fait, la somme de \\(6,5\\) euros n'est valable que pour un poids inf\u00e9rieur ou \u00e9gal \u00e0 \\(500\\) grammes. Au del\u00e0, il faut payer \\(8\\) euros. </p> </li> </ol> <p>Modifie la fonction  pour qu'elle prenne en compte cette contrainte et v\u00e9rifie son fonctionnement avec les tests propos\u00e9s.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 9 : Jeu de r\u00f4le <p>Dans un jeu de r\u00f4le, les joueurs ont un grade d\u00e9pendant des points d'exp\u00e9rience qu'ils ont acquis.</p> Points d'exp\u00e9rience entre 0 et 99 entre 100 et 399 entre 400 et 1499 sup\u00e9rieur ou \u00e9gal \u00e0 1500 Grade padawan chevalier ma\u00eetre grand ma\u00eetre <p>Compl\u00e8te la fonction suivante <code>grade</code> de telle sorte qu'elle renvoie le grade d'un joueur en fonction de ses points d'exp\u00e9rience <code>points_exp</code> et \u00e9cris les tests pour v\u00e9rifier tout le bon fonctionnement de la fonction.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#5-qcm-embranchements","title":"5. QCM Embranchements","text":"<p>R\u00e9ponds aux questions du QCM 4.3 p5 du cours sur les tests.</p> Solutions du QCM 4.3 p5 du pdf <ol> <li>a, d</li> <li>a, d</li> <li>c, d</li> <li>a, b</li> <li>a, b, d</li> </ol>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#6-exercices","title":"6. Exercices","text":"Exo 1 : Etats de l'eau <p>Ecris les tests permettant de v\u00e9rifier le code suivant et corrige les erreurs ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 2 : Valeur absolue <p>Ecris une fonction <code>val_abs</code> qui renvoie la valeur absolue d\u2019un entier relatif entr\u00e9 au clavier. ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 3 : Signe du produit de 2 nombres <p>Ecris une fonction <code>signe_produit</code> qui renvoie  si le produit de 2 nombres est strictement n\u00e9gatif, positif ou nul. Attention toutefois, on ne doit pas calculer le produit !       ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 4 : Minimum de 3 nombres <p>Ecris une fonction <code>min_3nb</code> qui renvoie le plus petit de 3 nombres (les 3 nombres sont fournis \u00e0 la fonction). Teste ton programme avec toutes les combinaisons possibles. ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 5 : Maximum de 4 nombres <code>MAISON</code> <p>Ecris une fonction <code>max_4nb</code> qui renvoie le plus grand  de quatre nombres. Teste ton programme avec toutes les combinaisons possibles. ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 6 : 3 nombres par ordre croissants <p>Ecris une fonction <code>nbs_croissants</code> qui renvoie 3 nombres par ordre croissant. Teste ton programme avec toutes les combinaisons possibles. ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo6bis : 4 nombres par ordre croissants <code>MAISON</code> <p>Ecris une fonction <code>nbs4_croissants</code> qui renvoie 4 nombres par ordre croissant. Teste ton programme avec toutes les combinaisons possibles. ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 7 : Equation du 1er degr\u00e9 <p>Ecris une fonction <code>eq_1er_deg</code> renvoie la solution d'une \u00e9quation \u00e0 coefficients r\u00e9els de la forme ax + b = 0 (a et b ssont fournis \u00e0 la fonction). ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 8 : Equation du 2e degr\u00e9 <code>MAISON</code> <p>Ecris une fonction <code>eq_2e_deg</code> affiche les solutions d'une \u00e9quation \u00e0 coefficients r\u00e9els de la forme ax2 + bx + c =0 (a, b, c sont fournis \u00e0 la fonction). On pourra utiliser la fonction <code>sqrt(x)</code> de la librairie <code>math</code> qui retourne la racine carr\u00e9e de x. ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 9 : Intersection de cercles <code>MAISON</code> <p>Ecris une fonction <code>inter_cercles</code> qui renvoie True si deux cercles ont une intersection non vide, False sinon (leur rayon et les coordonn\u00e9es de leur centre sont fournis \u00e0 la fonction). ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 10 : Elections <p>Les \u00e9lections l\u00e9gislatives, en Guignolerie Septentrionale, ob\u00e9issent \u00e0 la r\u00e8gle suivante :</p> <ul> <li> <p>Lorsque l'un des candidats obtient plus de 50% des suffrages, il est \u00e9lu d\u00e8s le premier tour.</p> </li> <li> <p>En cas de deuxi\u00e8me tour, peuvent participer uniquement les candidats ayant obtenu au moins 12,5% des voix au premier tour.</p> </li> </ul> <p>Ecris une fonction <code>elections</code>qui en fonction des scores de 4 candidats au premier tour pass\u00e9s en param\u00e8tre, traitera le candidat num\u00e9ro 1 (et uniquement lui) et renverra une message pr\u00e9cisant s'il est \u00e9lu, battu, s'il se trouve en ballottage favorable (il participe au second tour en \u00e9tant arriv\u00e9 en t\u00eate \u00e0 l'issue du premier tour) ou ballotage d\u00e9favorable (il participe au second tour sans avoir \u00e9t\u00e9 en t\u00eate au premier tour). ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Exo 11 : Compagnie d'assurance <code>MAISON</code> <p>Une compagnie d'assurance automobile propose \u00e0 ses clients quatre familles de tarifs identifiables par une couleur, du moins au plus on\u00e9reux : tarifs bleu, vert, orange et rouge. Le tarif d\u00e9pend de la situation du conducteur :</p> <ul> <li> <p>un conducteur de moins de 25 ans et titulaire du permis depuis moins de deux ans, se voit attribuer le tarif rouge, si toutefois il n'a jamais \u00e9t\u00e9 responsable d'accident. Sinon, la compagnie refuse de l'assurer.</p> </li> <li> <p>un conducteur de moins de 25 ans et titulaire du permis depuis plus de deux ans, ou de plus de 25 ans mais titulaire du permis depuis moins de deux ans a le droit au tarif orange s'il n'a jamais provoqu\u00e9 d'accident, au tarif rouge pour un accident, sinon il est refus\u00e9.</p> </li> <li> <p>un conducteur de plus de 25 ans titulaire du permis depuis plus de deux ans b\u00e9n\u00e9ficie du tarif vert s'il n'est \u00e0 l'origine d'aucun accident et du tarif orange pour un accident, du tarif rouge pour deux accidents, et refus\u00e9 au-del\u00e0</p> </li> <li> <p>De plus, pour encourager la fid\u00e9lit\u00e9 des clients accept\u00e9s, la compagnie propose un contrat de la couleur imm\u00e9diatement la plus avantageuse s'il est entr\u00e9 dans la maison depuis plus de cinq ans. Ainsi, s'il satisfait \u00e0 cette exigence, un client normalement \"vert\" devient \"bleu\", un client normalement \"orange\" devient \"vert\", et le \"rouge\" devient orange.</p> </li> </ul> <p>Ecris une fonction <code>assurance</code> qui prend en param\u00e8tre les donn\u00e9es n\u00e9cessaires pour traiter ce probl\u00e8me et renvoie le r\u00e9sultat du traitement. </p> <p>Avant de se lancer \u00e0 corps perdu dans cet exercice, on pourra r\u00e9fl\u00e9chir un peu et s'apercevoir qu'il est plus simple qu'il n'en a l'air (cela s'appelle faire une analyse !) ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#7-remediation","title":"7. Rem\u00e9diation","text":"France IOI <code>REMDIATION</code> <p>Vas sur le site de France IOI et fais dans le chapitre Niveau 1, chap 5 - Tests et conditions : exercices de 1) \u00e0 5)</p>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#8-solutions-des-exercices","title":"8. Solutions des exercices","text":"<pre><code>Les solutions seront visibles une fois le chapitre termin\u00e9.\n</code></pre>"},{"location":"uaa11_python/tp3_tests/tp3_tests/#9-bac-a-sable","title":"9. Bac \u00e0 sable","text":"<ul> <li> <p>Python Tutor en ligne (pour le debug pas \u00e0 pas)</p> </li> <li> <p>IDE dans le navigateur:</p> </li> </ul> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur <ul> <li>[Baston IDE en ligne] (https://console.basthon.fr/)</li> </ul>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_cond/","title":"1. Boucles conditionnelles","text":"<p>Notions abord\u00e9es : </p> <ul> <li> <p>boucles condionnelles non born\u00e9es ( <code>for</code> <code>in range</code> )</p> </li> <li> <p>boucles it\u00e9ratives born\u00e9es (<code>while</code> )</p> </li> <li> <p>arr\u00eat et sortie d'une boucle ( <code>break</code> )</p> </li> </ul>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_cond/#uaa11-tp4-1-les-boucles-conditionnelles","title":"UAA11 TP4-1 : Les Boucles conditionnelles","text":"<p>M\u00e9mo</p> <ul> <li> <p>Prends connaissance du cours sur les tests , fais les activit\u00e9s ci-dessous puis r\u00e9ponds aux questions QCM du pdf.</p> </li> <li> <p>Tu peux tester ton code avec l'IDE du chapitre \"TBD. Bac \u00e0 sable\"</p> </li> <li> <p>Compl\u00e8te ton fichier \"memo\" que tu compl\u00e8teras avec ce que tu as appris au fur et \u00e0 mesure de ton avancement dans le cours.</p> </li> </ul>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_cond/#1-decouverte-des-boucles-conditionnelles-while","title":"1. D\u00e9couverte des boucles conditionnelles <code>while ...</code>","text":"Test 1 : Myst\u00e8re <p>On consid\u00e8re le code suivant : <pre><code>    def mystere() :\n        somme = 2000\n        nb_annees = 0\n        while somme &lt; 3000:\n            somme = somme * 1.02\n            nb_annees = nb_annees + 1 \n        return nb_annees, somme\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> <p>Que renvoie la fonction <code>mystere</code> ? Donnes-une interpr\u00e9tation concr\u00e8te.</p> Test 2 : Placement bancaire <p>On d\u00e9pose une somme d'argent sur un compte r\u00e9mun\u00e9r\u00e9 et on d\u00e9sire savoir combien d'ann\u00e9es on doit attendre avant que la somme disponible sur ce compte ait atteint une valeur particuli\u00e8re. On veut aussi conna\u00eetre la somme disponible r\u00e9ellement \u00e0 cet instant, au centime d'euro pr\u00e8s.</p> <p>En t'aidant de la fonction \u00e9crite \u00e0 l'exercice pr\u00e9c\u00e9dent, compl\u00e8te la fonction <code>placement_bancaire_seuil</code> pour qu'elle renvoie la r\u00e9ponse \u00e0 ce probl\u00e8me.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 3 : Culture de bact\u00e9ries <p>A l'instant \\(t=0\\), on met en culture une population de bact\u00e9ries qui augmente de \\(10,5\\%\\) toutes les heures.</p> <p>En t'aidant des fonctions \u00e9crites aux tests 1 et 2, \u00e9cris une fonction <code>attente_seuil_bacteries</code> prenant en param\u00e8tres deux entiers <code>pop_initiale</code> et <code>pop_finale</code> correspondant respectivement \u00e0 la taille initiale de la population mise en culture et \u00e0 la taille de la population que l'on veut atteindre, et renvoyant le nombre d'heures \u00e0 attendre pour atteindre cette taille.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 4 : Jeu de r\u00f4le <p>Dans un jeu, un joueur dispose de <code>250</code> points de vie. Il subit des attaques successives dont les valeurs sont des nombres entiers al\u00e9atoires entre <code>10</code> et <code>40</code>.</p> <p>Lorsque le nombre de points de vie du joueur devient n\u00e9gatif ou nul, on dit que le joueur s'\u00e9vanouit.</p> <ol> <li> <p>compl\u00e8te le code de la fonction ci-dessous afin qu'elle renvoie le nombre d'attaques que le joueur peut subir jusqu'\u00e0 ce qu'il s'\u00e9vanouisse.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> Le joueur dispose \u00e0 pr\u00e9sent d'une d\u00e9fense de <code>25</code>. Lorsqu'il subit une attaque de valeur <code>attaque</code>, on applique la r\u00e8gle suivante : <p>si la valeur de l'attaque est strictement sup\u00e9rieure \u00e0 celle de la d\u00e9fense, le joueur perd <code>attaque : 25</code> points de vie ;</p> <p>si la valeur de l'attaque est inf\u00e9rieure ou \u00e9gale \u00e0 celle de la d\u00e9fense, le joueur ne perd aucun point de vie.</p> <p>compl\u00e8te la fonction suivante afin qu'elle renvoie le nombre d'attaques que le joueur peut subir dans ces conditions jusqu'\u00e0 ce qu'il s'\u00e9vanouisse.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> On modifie la fonction pr\u00e9c\u00e9dente en une fonction <code>nb_attaques_al\u00e9atoires_points_vie_d\u00e9fense</code> pour qu'elle fonctionne avec n'importe quel nombre de points de vie, n'importe quelle d\u00e9fense et des attaques successives prenant des valeurs enti\u00e8res al\u00e9atoires entre deux nombres entiers pr\u00e9d\u00e9finis en respectant la r\u00e8gle suivante : <p>si la valeur de l'attaque est strictement sup\u00e9rieure \u00e0 celle de la d\u00e9fense, le joueur perd <code>attaque : d\u00e9fense</code> points de vie ;</p> <p>si la valeur de l'attaque est inf\u00e9rieure ou \u00e9gale \u00e0 celle de la d\u00e9fense, le joueur ne perd aucun point de vie.</p> Ecris ci-dessous le code de cette fonction o\u00f9 les param\u00e8tres sont d\u00e9finis de la fa\u00e7on suivante : <p><code>points_vie</code> est le nombre de points de vie initial du joueur ;</p> <p><code>d\u00e9fense</code> est la d\u00e9fense du joueur ;</p> <p><code>val_min_attaque</code> est la valeur minimale que peut prendre une attaque ;</p> <p><code>val_max_attaque</code> est la valeur maximale que peut prendre une attaque.</p> <p>Tous les param\u00e8tres de la fonction sont des nombres entiers strictement positifs.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> </ol> Test 5 : lancers d'un d\u00e9 <p>On lance plusieurs fois un d\u00e9 \u00e9quilibr\u00e9 \u00e0 six faces num\u00e9rot\u00e9es de \\(1\\) \u00e0 \\(6\\) et on regarde le nombre de lancers qu'il a fallu effectuer pour obtenir le \\(6\\) pour la premi\u00e8re fois.</p> <p>Compl\u00e8te la fonction suivante afin de simuler cette exp\u00e9rience.</p> <p>A quoi sert l'instruction <code>face = 0</code> avant la boucle <code>while</code> ?</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 6 : Lancers de 2 d\u00e9s (partie 1) <p>On lance plusieurs fois deux d\u00e9s \u00e9quilibr\u00e9s \u00e0 six faces num\u00e9rot\u00e9es de \\(1\\) \u00e0 \\(6\\) et on regarde le nombre de lancers qu'il a fallu effectuer pour obtenir deux faces identiques pour la premi\u00e8re fois.</p> <p>En t'aidant de la fonction \u00e9crite \u00e0 l'exercice pr\u00e9c\u00e9dent, \u00e9cris une fonction <code>nb_lancers_deux_des_faces_identiques</code> permettant de simuler cette exp\u00e9rience.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_cond/#2-pour-aller-plus-loin-dans-la-decouverte","title":"2. Pour aller plus loin dans la d\u00e9couverte ...","text":"Test 7 : Lancers de 2 d\u00e9s (partie 2) <p>On lance plusieurs fois deux d\u00e9s \u00e9quilibr\u00e9s \u00e0 six faces num\u00e9rot\u00e9es de \\(1\\) \u00e0 \\(6\\) et on regarde le nombre de lancers qu'il a fallu effectuer pour obtenir :</p> <ol> <li> <p>un double-six pour la premi\u00e8re fois (exp\u00e9rience 1);</p> </li> <li> <p>un double-quatre pour la premi\u00e8re fois (exp\u00e9rience 2).</p> </li> </ol> <p>En t'aidant de la fonction \u00e9crite \u00e0 l'exercice pr\u00e9c\u00e9dent, \u00e9cris deux fonctions <code>nb_lancers_deux_des_double_six</code> et <code>nb_lancers_deux_des_double_quatre</code> permettant de simuler ces deux exp\u00e9riences.</p> <p>Comment peux-tu optimiser ton code en n'\u00e9crivant une seule fonction <code>nb_lancers_deux_des_double(face)</code>, face \u00e9tant pass\u00e9 en param\u00e8tre lors de l'appel de la fonction.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 8 : Lancers de 2 d\u00e9s (partie 3) <p>On lance plusieurs fois deux d\u00e9s \u00e9quilibr\u00e9s \u00e0 six faces num\u00e9rot\u00e9es de \\(1\\) \u00e0 \\(6\\) et on regarde le nombre de lancers qu'il a fallu effectuer pour obtenir un double-six pour la seconde fois.</p> <p>En t'aidant de la fonction \u00e9crite \u00e0 l'exercice pr\u00e9c\u00e9dent, compl\u00e8te la fonction <code>nb_lancers_deux_d\u00e9s_double_six_deux_fois</code> ci-dessous permettant de simuler cette exp\u00e9rience.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_cond/#3-qcm-boucles-conditionnelles","title":"3. QCM Boucles conditionnelles","text":"Solutions du QCM 3.6 p47 du pdf <ol> <li>a, d</li> <li>c</li> <li>b, d</li> <li>d</li> <li>a</li> </ol>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_cond/#4-exercices","title":"4. Exercices","text":"Test 1 : Somme des entiers jusqu'\u00e0 n <p>Ecris une fonction <code>somme_int(n)</code> qui renvoie la somme des n 1ers entiers naturels.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Astuce <p>Dans une boucle, d\u00e9finis une variable <code>c</code> pour le compteur de 1 \u00e0 10 par exemple, et une variable <code>s</code> pour la somme cumul\u00e9e de <code>c</code>.</p> <p>Pour bien comprendre le m\u00e9canisme, prends l'habitude pendant l'\u00e9criture du code d'afficher toutes les variables que tu utilises dans la boucle (ici <code>c</code> et <code>s</code>) et v\u00e9rifie les calculs pour les 1ers et derniers passages dans la boucle.</p> <pre><code>    &gt;&gt;&gt; somme_int(10)\n    c           s\n    1           1\n    2           3\n    3           6\n    4           10\n    5           15\n    6           21\n    7           28\n    8           36\n    9           45\n    10          55\n</code></pre> Test 2 : R\u00e9ponse correcte <p>Ecris une fonction <code>rep_correcte</code> qui demande un nombre de d\u00e9part compris entre 10 et 20 jusqu\u2019\u00e0 ce que la r\u00e9ponde soit correcte.</p> <p><pre><code>    &gt;&gt;&gt; rep_correcte()\n    Entre un nombre entre 10 et 20\n    5\n    Nombre pas corect.\n    Entre un nombre entre 10 et 20\n    24\n    Nombre pas corect.\n    Entre un nombre entre 10 et 20\n    16\n    Nombre correct\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 3 : Nombre myst\u00e8re <p>L\u2019ordinateur tire un nombre inf\u00e9rieur \u00e0 100 au hasard.</p> <p>L\u2019utilisateur doit d\u00e9couvrir le nombre tir\u00e9 en un minimum d\u2019essais sachant que l\u2019ordinateur lui r\u00e9pond pour chaque essai si le nombre tir\u00e9 est plus grand ou plus petit que celui que l'utilisateur propose.</p> <p>Ecris une fonction <code>nb_mystere</code> qui renvoie le nombre d\u2019essais n\u00e9cessaires pour trouver le nombre tir\u00e9 par l'ordinateur.</p> <p><pre><code>    &gt;&gt;&gt; nb_essais = nb_mystere()\n    Choisis un nombre\n    50\n    c'est moins !\n    Choisis un nombre\n    25\n    C'est plus !\n    Choisis un nombre\n    37\n    C'est plus !\n    Choisis un nombre\n    43\n    &gt;&gt;&gt; print(\"Bravo, t'as trouv\u00e9 le nombre myst\u00e8re! en \", nb_essais, \"coups\")\n    \"Bravo, t'as trouv\u00e9 le nombre myst\u00e8re! en 3 coups\"\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 4 : 10 nombres cons\u00e9cutifs ( Maison ) <p>Ecris une fonction <code>nbs_consecutifs(nb)</code> qui \u00e0 partir d'un nombre de d\u00e9part <code>nb</code> compris entre 10 et 20, affiche les dix nombres suivants.</p> <p><pre><code>    &gt;&gt;&gt; nb =int(input(\"Entre un nombre\"))\n    17\n    &gt;&gt;&gt; print(\"Les 10 nombres suivants sont: \", nbs_consecutifs(nb))\n    Les 10 nombres suivants sont:\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 5 : Temp\u00e9ratures <p>Ecris une fonction <code>temp(t1, t2)</code> qui affiche toutes les temp\u00e9ratures comprises entre 2 temp\u00e9ratures <code>t1, t2</code>, (bornes incluses).</p> <p><pre><code>    &gt;&gt;&gt; temp(9, 14)\n    9\n    10\n    11\n    12\n    13\n    14\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 6 : Table de multiplication ( Maison ) <p>Ecris une fonction <code>table_multi(nb)</code> qui affiche la table de multiplication du nombre <code>nb</code>. <pre><code>    &gt;&gt;&gt; table_multi(7)\n    Table de 7 :\n    7 x 1 = 7\n    7 x 2 = 14\n    7 x 3 = 21\n    \u2026\n    7 x 10 = 70\n</code></pre> Teste-l\u00e0 en entrant le nombre au clavier (voir le test-ci-dessous)</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 7 : Conv en euros, dollars ([1-AppPy] 4.3 p31) <p>\u00c9cris une fonction <code>conv_euro_dollars</code> qui affiche une table de conversion de sommes d\u2019argent exprim\u00e9es en euros, en dollars canadiens. </p> <p>La progression des sommes de la table sera \"g\u00e9om\u00e9trique\".</p> <p><pre><code>    &gt;&gt;&gt; conv_euro_dollars()\n    1 euro(s) = 1.65 dollar(s)\n    2 euro(s) = 3.30 dollar(s)\n    4 euro(s) = 6.60 dollar(s)\n    8 euro(s) = 13.20 dollar(s)\n    etc. (s\u2019arr\u00eater \u00e0 16384 euros.)\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 8 : Nombres triples ( [1-AppPy] 4.4 p31 ) <p>Ecris une fonction <code>nb_triple(nb)</code> qui affiche \u00e0 partir de <code>nb</code>, une suite de 12 nombres dont chaque terme est \u00e9gal au triple du terme pr\u00e9c\u00e9dent.</p> <p><pre><code>    &gt;&gt;&gt; nb_triple(1)\n    1 3 9 27 81 243 729 2187 6561 19683 59049 177147\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 9 : Table de 7  ([1-AppPy] 4.7 p35 ) ( Maison ) <p>A partir de la fonction <code>table_multi(nb)</code>, \u00e9cris une fonction <code>table7</code> qui affiche les 20 premiers termes de la table de multiplication par 7, en signalant au passage (\u00e0 l\u2019aide d\u2019une ast\u00e9risque) ceux qui sont des multiples de 3.</p> <p><pre><code>    &gt;&gt;&gt; table7()\n    7 14 21 * 28 35 42 * 49 56 63 * 70 77 84 * 91 98 105 * 112 119 126 * 133 140\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 10 : Table de 13 ( [1-AppPy] 4.8 p35 ) ( Maison ) <p>\u00c9cris une fonction <code>table13</code> qui calcule les 50 premiers termes de la table de multiplication par 13, mais n\u2019affiche que ceux qui sont des multiples de 7.</p> <p><pre><code>    &gt;&gt;&gt; table13()\n    91 182 273 364 455 546 637 \n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 11 : Pyramide d\u2019ast\u00e9rix * ( [1-AppPy] 4.9 p35) <p>\u00c9cris une fonction  <code>pyramide(nb)</code> qui affiche <code>nb</code> lignes de symboles suivants :</p> <p><pre><code>    &gt;&gt;&gt; pyramide(7)\n    *\n    **\n    ***\n    ****\n    *****\n    ******\n    *******\n</code></pre> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 12 : Somme d'entiers ( Maison ) <p>Ecris une fonction <code>somme(nb)</code> qui \u00e0 partir d'un nombre de d\u00e9part nb, renvoie la somme des entiers jusqu\u2019\u00e0 ce nombre.</p> <p>RY    assert somme(5) == 15</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 13 : Multiplications par additions successives <p>Ecris une fonction  <code>multiplication(a, b)</code> qui renvoie le produit de deux entiers naturels a, b  en effectuant des additions successives mais sans utiliser la multiplication :</p> <p>\\(a * b = a + a + \u2026 + a\\)  (b fois)</p> <p>Par exemple \\(3 * 5\\) sera calcul\u00e9 en additionnant 3 5 fois : \\(3 * 5 = 3 + 3 + 3 + 3 + 3\\)</p> Conseil <p>\"\"\" Si tu ajoutes un <code>print</code> dans la boucle, tu peux observer le calcul \u00e9tape par \u00e9tape: <pre><code>    3\n    6\n    9\n    12\n    15\n</code></pre></p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 14 :  Puissances par multiplications successives <p>Ecris une fonction  <code>puissance(a, b)</code>   qui renvoie la puissance de deux entiers naturels <code>a, b</code>en effectuant des multiplications successives sans utiliser la puissance :</p> <p>\\(a^b\\) = a * a * \u2026 * a (b fois)</p> <p>Par exemple \\(3^5\\) sera calcul\u00e9 en multipliant 3 5 fois; \\(3^{5} = 3*3*3*3*3\\)</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 15 : Factorielle <p>Ecris une fonction  <code>factorielle(n)</code>  permettant de calculer la factorielle d'un entier naturel <code>n</code>.</p> <p>Par exemple, la factorielle de 8, not\u00e9e \\(8 !\\), vaut \\(8 * 7 * 6 * 5 * 4 *3 * 2 * 1\\)</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 16 : Diviseurs d'un entier <p>Ecris une fonction  <code>diviseurs(n)</code>  qui affiche les diviseurs d\u2019un entier naturel <code>n</code> par ordre croissant: </p> <p>RY <pre><code>    &gt;&gt;&gt; diviseurs(24)\n    1 2 3 4 6 8 12 24\n</code></pre></p> D\u00e9marche <ul> <li> <p>pars d'un exemple concret : n = 24</p> </li> <li> <p>affiche un compteur <code>c</code> de 1 jusqu'\u00e0 24</p> </li> <li> <p>quel test peux-tu effectuer pour v\u00e9rifier si <code>c</code> est un diviseur de 24 ?</p> </li> <li> <p>n'affiche que les valeurs de <code>c</code> qui sont des diviseurs de 24</p> </li> <li> <p>ton code marche, est-ce qu'il pas possible de faire moins d'it\u00e9rations ?</p> </li> </ul> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 17: Nombre parfait <p>Un nombre est parfait s\u2019il est \u00e9gal \u00e0 la somme de ses diviseurs stricts (diff\u00e9rents de lui-m\u00eame). </p> <p>Ainsi par exemple, l\u2019entier 6 est parfait car \\(6 = 1 + 2 + 3\\). </p> <p>Ecris une fonction  <code>nb_parfait(n)</code>  qui renvoie <code>True</code> si un entier naturel <code>n</code> est un nombre parfait, <code>False</code> dans le cas contraire.</p> D\u00e9marche <ul> <li> <p>pars du code de la fonction pr\u00e9c\u00e9dente <code>diviseurs(24)</code></p> </li> <li> <p>affiche un compteur <code>s</code> qui additionne les diviseurs de 24</p> </li> <li> <p>quel test peux-tu effectuer entre ce <code>s</code> et 24 ?</p> </li> </ul> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 18 : Nombre le plus grand <pre><code>1. Ecris une fonction  **`maximum()`**  qui demande successivement 5 nombres positifs \u00e0 l\u2019utilisateur, et qui renvoie le plus grand nombres parmi les 5.\n\nRY\n```python\n    &gt;&gt;&gt; print(maximum())\n    12\n    14\n    8\n    13\n    6\n\n    14\n```\n\n2. Modifie la fonction pour qu'elle renvoie en quelle position ce nombre a \u00e9t\u00e9 saisi.\nRY\n```python\n    &gt;&gt;&gt; print(maximum())\n    12\n    14\n    8\n    13\n    6\n\n    14\n    1\n```\n\n3. Cette fois-ci on ne conna\u00eet pas en avance combien l\u2019utilisateur souhaite saisir de nombres.\n\n    Modifie la fonction pour que la saisie des nombres s\u2019arr\u00eate lorsque l\u2019utilisateur entre un nombre n\u00e9gatif.\n</code></pre> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 19: pgcd, ppcm ( !!! CHALLENGE !!! ) <p>Ecris une fonction  <code>pgcd_ppcm(n)</code>  qui renvoie les pgcd et ppcm (plus grand commum diviseur et plus petit commun multiple) d'un entier naturel <code>n</code>.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 20: Nombre premier <p>Un nombre premier est un nombre divisible que par 1 et lui m\u00eame.</p> <p>Ecris une fonction  <code>nb_1er(n)</code>  qui renvoie <code>True</code> si un entier naturel <code>n</code> est un nombre premier, <code>False</code> dans le cas contraire.</p> D\u00e9marche <p>Si tu \u00e9cris un compteur de 2 \u00e0 28,  combien de fois 29 est-il divisible par c ?</p> <p>Comment peux-tu optimiser ton code pour \u00e9crire une fonction <code>nb_parfait_1er(n)</code> qui renvoie 2 bool\u00e9ens, le 1er renvoie le le nombre est parfait, le 2\u00e8me s'il est premier ?</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 21: nbs 1ers inf\u00e9rieurs \u00e0 n ( Maison ) <p>Ecris une fonction  <code>nbs_1er_inf(n)</code>  qui affiche tous les nombres premiers inf\u00e9rieurs \u00e0 <code>n</code>.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 22 : nombres jumeaux inf\u00e9rieurs \u00e0 n ( !!! CHALLENGE !!! ) <p>2 nombres premiers sont jumeaux si leur diff\u00e9rence vaut 2 (par exemple, 5 et 7 sont deux nombres premiers jumeaux). </p> <p>Ecris une fonction  <code>nbs_jumeaux(n)</code>  qui affiche tous les couples de nombres premiers jumeaux inf\u00e9rieurs \u00e0 <code>n</code>.</p> <p><code>python     &gt;&gt;&gt; nbs_jumeaux(50)         7 5         13 11         19 17         31 29         43 41</code></p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 23 : Socle statue ( Maison ) <p>Le socle d'une statue est constitu\u00e9 d'\u00e9tages, chaque \u00e9tage ayant une base carr\u00e9e et une hauteur \u00e9gale \u00e0 une unit\u00e9. Le c\u00f4t\u00e9 des carr\u00e9s diminue d\u2019une unit\u00e9 \u00e0 chaque \u00e9tage.</p> <p>Ecris une fonction  <code>vol_socle_statue(lgrsol, lgrsup)</code>  qui, \u00e0 partir de la largeur du socle au niveau du sol <code>lgrsol</code> et de la largeur au niveau de la face sup\u00e9rieure <code>lgrsup</code> pas, renvoie le volume du socle.</p> <p> </p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 24 : Pyramide ( Maison ) <p>Ecris une fonction  <code>cubes_pyramide(nbcote)</code>  qui, \u00e0 partir du nombre de cubes sur un c\u00f4t\u00e9 de la grande base au sol <code>nbcote</code> renvoie le nombre de cubes n\u00e9cessaires \u00e0 la construction de la pyramide ci-contre.</p> <p> </p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 25 : Calcul du \\(n^{i\u00e8me}\\) terme d\u2019une suite <ol> <li> <p>Ecris une fonction  <code>u(n, a, b, c)</code>  qui, \u00e0 partir de 3 entiers a, b, c, renvoie le \\(n^{i\u00e8me}\\) terme de la suite</p> <p>\\(u_{1} = a\\)</p> <p>\\(u_{n} = b.u_{n-1} + c\\) pour \\(n &gt; 1\\)</p> <ul> <li> <p>Avec quels param\u00e8tres appellerais-tu la fonction pour calculer \\(u_{8}\\) pour une suite g\u00e9om\u00e9trique avec \\(u_{1} = 1\\) et \\(q = 2\\) ?</p> </li> <li> <p>Avec quels param\u00e8tres appellerais-tu la fonction pour calculer \\(u_{8}\\) pour une suite arithm\u00e9tique avec \\(u_{1} = 1\\) et \\(r = 2\\) ?</p> </li> <li> <p>Avec quels param\u00e8tres appellerais-tu la fonction pour calculer \\(u_{6}\\) pour la suite :</p> <p>\\(u_{1} = 2\\)</p> <p>\\(u_{n} = 3.u_{n-1} + 4\\) pour \\(n &gt; 1\\)</p> </li> </ul> </li> <li> <p>Ecris une fonction  <code>v(n)</code>  qui renvoie le \\(n^{i\u00e8me}\\) terme de la suite</p> <p>\\(101\\) \\(-303\\) \\(909\\) \\(\u2026\\)</p> </li> <li> <p>Ecris une fonction  <code>w(n)</code> qui renvoie le \\(n^{i\u00e8me}\\) terme de la suite</p> <p>\\(w_{n} =  \\dfrac{n .  (-1)^n}{n+1}\\)</p> </li> </ol> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test 26 : Suite de Fibonnaci <p>Ecris une fonction  <code>F(n)</code>  qui renvoie le \\(n^{i\u00e8me}\\) terme de la suite de Fibonacci d\u00e9finie par:</p> <pre><code>F(n) : F(0) = 0, F(1) = 1\n\nF(n) =F(n-1) + F(n-2)\n</code></pre> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_cond/#5-remediation","title":"5. Rem\u00e9diation","text":"France IOI (Rem\u00e9diation) <p>Vas sur le site de France IOI et fais dans les chapitres suivants :</p> <ul> <li> <p>Niveau 1, 2 \u2013 R\u00e9p\u00e9titions d\u2019instructions 1) \u00e0 10)</p> </li> <li> <p>Niveau 1, 3 \u2013 Calculs et d\u00e9couverte des variables 6) \u00e0 12)</p> </li> <li> <p>Niveau 1, 4 \u2013 Lecture d\u2019entr\u00e9es 4) \u00e0 10)</p> </li> </ul>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_iter/","title":"UAA11 TP4-2 : Les Boucles it\u00e9ratives","text":"<p>M\u00e9mo</p> <ul> <li> <p>Prends connaissance du cours sur les tests , fais les activit\u00e9s ci-dessous puis r\u00e9ponds aux questions QCM du pdf.</p> </li> <li> <p>Tu peux tester ton code avec l'IDE du chapitre \"TBD. Bac \u00e0 sable\"</p> </li> <li> <p>Compl\u00e8te ton fichier \"memo\" que tu compl\u00e8teras avec ce que tu as appris au fur et \u00e0 mesure de ton avancement dans le cours.</p> </li> </ul>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_iter/#1-decouverte-des-boucles-iteratives-for-in-range","title":"1. D\u00e9couverte des boucles it\u00e9ratives <code>for ... in range(...) :</code>","text":"Test1: Placement bancaire <ol> <li> <p>On place une somme de \\(2000\\) euros sur un compte remun\u00e9r\u00e9 au taux annuel de 2%.     Compl\u00e8te la fonction suivante de telle sorte qu'elle renvoie la somme disponible sur le compte au bout de \\(20\\) ans. On arrondira le r\u00e9sultat au centime d'euro pr\u00e8s.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> <p>Modifie la fonction pr\u00e9c\u00e9dente en une fonction <code>placement_bancaire</code> de telle sorte qu'elle puisse fonctionner avec n'importe quel placement initial, n'importe quel taux et sur n'importe quelle dur\u00e9e.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> </ol> Test2: Jeu de r\u00f4le <p>Dans un jeu, un joueur dispose de <code>250</code> points de vie. Il subit <code>5</code> attaques successives dont les valeurs sont des nombres entiers al\u00e9atoires entre <code>10</code> et <code>40</code>.</p> <ol> <li> <p>Compl\u00e8te le code de la fonction ci-dessous afin qu'elle renvoie le nombre de points de vie du joueur \u00e0 l'issue de ces cinq attaques.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> <p>Le joueur dispose \u00e0 pr\u00e9sent d'une d\u00e9fense de <code>25</code>. Lorsqu'il subit une attaque de valeur <code>attaque</code>, on applique la r\u00e8gle suivante :</p> <ul> <li> <p>si la valeur de l'attaque est strictement sup\u00e9rieure \u00e0 celle de la d\u00e9fense, le joueur perd <code>attaque - 25</code> points de vie ;</p> </li> <li> <p>si la valeur de l'attaque est inf\u00e9rieure ou \u00e9gale \u00e0 celle de la d\u00e9fense, le joueur ne perd aucun point de vie.</p> </li> </ul> <p>Compl\u00e8te la fonction suivante afin qu'elle renvoie le nombre de points de vie du joueur \u00e0 l'issue des cinq attaques pr\u00e9c\u00e9dentes.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> <li> <p>On modifie la fonction pr\u00e9c\u00e9dente en une fonction <code>points_vie_attaques_al\u00e9atoires_multiples_d\u00e9fense</code> pour qu'elle fonctionne avec n'importe quel nombre de points de vie, n'importe quelle d\u00e9fense et n'importe quel nombre d'attaques successives prenant des valeurs enti\u00e8res al\u00e9atoires entre deux nombres entiers pr\u00e9d\u00e9finis en respectant la r\u00e8gle suivante :</p> <ul> <li> <p>si la valeur de l'attaque est strictement sup\u00e9rieure \u00e0 celle de la d\u00e9fense, le joueur perd <code>attaque - d\u00e9fense</code> points de vie ;</p> </li> <li> <p>si la valeur de l'attaque est inf\u00e9rieure ou \u00e9gale \u00e0 celle de la d\u00e9fense, le joueur ne perd aucun point de vie.</p> </li> <li> <p>si le nombre de points de vie \u00e0 l'issue de toutes les attaques est strictement n\u00e9gatif, on le ram\u00e8ne \u00e0 0.</p> </li> </ul> <p>Ecris ci-dessous le code de cette fonction o\u00f9 les param\u00e8tres sont d\u00e9finis de la fa\u00e7on suivante :</p> <ul> <li> <p><code>points_vie</code> est le nombre de points de vie initial du joueur,</p> </li> <li> <p><code>d\u00e9fense</code> est la d\u00e9fense du joueur,</p> </li> <li> <p><code>nb_attaques</code> est le nombre d'attaques successives subies par le joueur,</p> </li> <li> <p><code>val_min_attaque</code> est la valeur minimale que peut prendre une attaque,</p> </li> <li> <p><code>val_max_attaque</code> est la valeur maximale que peut prendre une attaque.</p> </li> </ul> <p>Tous les param\u00e8tres de la fonction sont des nombres entiers strictement positifs.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> </li> </ol> Test3: Lancer d'un d\u00e9 <p>On lance \\(50\\) fois un d\u00e9 \u00e9quilibr\u00e9 \u00e0 six faces num\u00e9rot\u00e9es de \\(1\\) \u00e0 \\(6\\) et on regarde le nombre de fois o\u00f9 on a obtenu \\(6\\).</p> <p>Compl\u00e8te la fonction suivante afin de simuler cette exp\u00e9rience.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test4: Pile ou face <p>Compl\u00e8te la fonction suivante simulant le jeu du Pile ou Face avec une pi\u00e8ce \u00e9quilibr\u00e9e et renvoyant pour un nombre de lancers <code>nb_lancers</code> donn\u00e9 la fr\u00e9quence d'apparition du Pile.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_iter/#2-pour-aller-plus-loin-sur-la-decouverte","title":"2. Pour aller plus loin sur la d\u00e9couverte ...","text":"Test5: Flux de populations  <code>MAISON</code> <p>On consid\u00e8re un flux de populations entre 3 zones g\u00e9ographiques \\(A\\), \\(B\\) et \\(C\\) sous les conditions suivantes :</p> <ul> <li> <p>La population totale des 3 zones reste constante au cours du temps.</p> </li> <li> <p>Chaque ann\u00e9e, la zone \\(A\\) perd \\(20\\%\\) de sa population au profit de la zone \\(B\\) et \\(10\\%\\) de sa population au profit de la zone \\(C\\).</p> </li> <li> <p>Chaque ann\u00e9e, la zone \\(B\\) perd \\(15\\%\\) de sa population au profit de la zone \\(A\\) et \\(5\\%\\) de sa population au profit de la zone \\(C\\).</p> </li> <li> <p>Chaque ann\u00e9e, la zone \\(C\\) perd \\(25\\%\\) de sa population au profit de la zone \\(A\\) et \\(10\\%\\) de sa population au profit de la zone \\(B\\).</p> </li> </ul> <p>Le tableau suivant donne les populations initiales des 3 zones :</p> Zone A Zone B Zone C 100 000 80 000 120 000 <p>Compl\u00e8te la fonction ci-dessous de telle sorte qu'elle renvoie les populations des 3 zones \\(A\\), \\(B\\) et \\(C\\) dans cet ordre au bout de <code>nb_ann\u00e9es</code> ann\u00e9es.</p> <p>def \u00e9volution_pop(nb_ann\u00e9es):     assert ... # test d'assertion sur nb_ann\u00e9es     popA = ... # population initiale de la zone A     popB = ... # population initiale de la zone B     popC = ... # population initiale de la zone C     for annee in ...:         popA_temp = ... # calcul de la nouvelle population de la zone A         popB_temp = ...         popC_temp = ...         popA = ...         popB = ...         popC = ...     return ...</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test6: Lancer de deux d\u00e9s (bis) <p>On lance \\(25\\) fois deux d\u00e9s \u00e9quilibr\u00e9s \u00e0 six faces num\u00e9rot\u00e9es de \\(1\\) \u00e0 \\(6\\) et on regarde le nombre de fois o\u00f9 on a obtenu deux faces identiques.</p> <p>En t'aidant de la fonction \u00e9crite \u00e0 l'exercice pr\u00e9c\u00e9dent, \u00e9cris une fonction <code>lancers_25_2des_faces_identiques</code> permettant de simuler cette exp\u00e9rience.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_iter/#2-qcm-boucles-iteratives","title":"2. QCM Boucles it\u00e9ratives","text":"Solutions du QCM 2.6  p2 du pdf <ol> <li>d</li> <li>a, c, d</li> <li>d</li> <li>a, b, d</li> <li>b, c, d</li> </ol>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_iter/#3-exercices","title":"3. Exercices","text":""},{"location":"uaa11_python/tp4_boucles/tp4_boucles_iter/#4-solutions-des-exercices","title":"4. Solutions des exercices","text":"<pre><code>Les solutions seront visibles une fois le chapitre termin\u00e9.\n</code></pre>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_iter/#5-bac-a-sable","title":"5. Bac \u00e0 sable","text":"<ul> <li> <p>Python Tutor en ligne (pour le debug pas \u00e0 pas)</p> </li> <li> <p>IDE dans le navigateur:</p> </li> </ul> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur <ul> <li>[Baston IDE en ligne] (https://console.basthon.fr/)</li> </ul>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_mini_prj/","title":"UAA11 TP4-3 : Les Boucles Mini projets !!! CHALLENGE !!!","text":""},{"location":"uaa11_python/tp4_boucles/tp4_boucles_mini_prj/#1-theoreme-de-bolzano","title":"1. Th\u00e9or\u00e8me de Bolzano","text":"<p>Sujet propos\u00e9 par Mme Lambert pour les Math6 sur le th\u00e9or\u00e8me de Bolzano et la recherche de racines d\u2019une fonction.</p> Rappel th\u00e9orique <p>Soit une fonction f(x) continue sur l\u2019intervalle [a ; b]</p> <p>Si f(a) . f(b) &lt; 0</p> <pre><code>alors il existe un nombre r\u00e9el c \u2208 ] a ; b [ tel que f(c) = 0\n\n( autrement dit : c est une racine de la fonction f(x) sur l\u2019intervalle [a ; b] )\n</code></pre> Consignes <p>Ecris une fonction <code>dico(a, b)</code>  qui renvoient la racine \u00e0 5 d\u00e9cimales pr\u00e8s de la fonction suivante :</p> <p>\\(f(x)=3x^{3} - 2x^{2} + 6x - 4\\) sur l\u2019intervalle [-5 ; 2]</p> <pre><code>&gt;&gt;&gt; dico(-5, 2)\nc: 0.66667\n</code></pre> Aide \u00e0 l\u2019\u00e9criture du programme <ul> <li> <p>Une solution consiste \u00e0 trouver la racine par dichotomie : on r\u00e9duit la taille de l\u2019intervalle en prenant le milieu de m de [a,b]</p> <p>L\u2019intervalle devient alors :</p> <ul> <li> <p>si f(a) et f(m) sont de signe contraire : b=m (la racine appartient \u00e0 [a,m])</p> </li> <li> <p>si f(b) et f(m) sont de signe contraire : a=m (la racine appartient \u00e0 [m,b])</p> </li> </ul> </li> <li> <p>Cette recherche dichtomique s\u2019effectue tant que |f(a) \u2013 f(b)| &gt; 10-5</p> <p>On estime que le dernier milieu m calcul\u00e9 est assez pr\u00e9cis pour \u00eatre consid\u00e9r\u00e9 comme la racine c recherch\u00e9</p> </li> </ul> Consignes <p>Modifie ta fonction pour passer les coefficient du polyn\u00f4me en param\u00e8tre ainsi que la pr\u00e9cision de calcul de:</p> <p>\\(f(x)=8x^{3}-x^{2}+16x-2\\) sur l\u2019intervalle [-3 ; 4]             Sol : c=1/8=0,12500</p> <p>\\(f(x)=6x^{3}+2x^{2}+24x+8\\) sur l\u2019intervalle [-3 ; 5]                Sol : c=-1/3=-0,33333</p> <ul> <li> <p>V\u00e9rifie qu\u2019il y a bien une racine quand l\u2019utilisateur entre les bornes a,b au clavier</p> </li> <li> <p>V\u00e9rifie que dans ton programme, que les bornes a, b ne sont pas des racines.</p> </li> <li> <p>Affiche \u00e0 l\u2019\u00e9cran le nombre d\u2019it\u00e9rations</p> </li> </ul>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_mini_prj/#2-jeu-de-pierre-papier-ciseaux","title":"2. Jeu de pierre, papier, ciseaux","text":"Consignes <p>Suis les consignes du jeu de pierre, papier, ciseaux</p>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_mini_prj/#3-jeu-de-nim-fort-boyard","title":"3. Jeu de nim - Fort Boyard","text":"Consignes <p>Suis les consignes du jeu de nim (Fort Boyard)</p>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_mini_prj/#4-jeu-de-de-le-zanazibar","title":"4. Jeu de d\u00e9 - le Zanazibar\"","text":"Consignes <p>Suis les consignes du jeu de d\u00e9 le zanzibar </p>"},{"location":"uaa11_python/tp4_boucles/tp4_boucles_mini_prj/#5-bac-a-sable","title":"5. Bac \u00e0 sable","text":"<ul> <li> <p>Python Tutor en ligne (pour le debug pas \u00e0 pas)</p> </li> <li> <p>IDE dans le navigateur:</p> </li> </ul> ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur <ul> <li>[Baston IDE en ligne] (https://console.basthon.fr/)</li> </ul>"},{"location":"uaa11_python/tp5_listes_string/tp5_listes_string/","title":"UAA11 TP5 - Les listes et les cha\u00eenes","text":"<p>Notions abord\u00e9es :  TBD</p> <p>M\u00e9mo</p> <ul> <li> <p>Prends connaissance du cours sur les listes, les cha\u00eenes de caract\u00e8res, fais les activit\u00e9s ci-dessous puis r\u00e9ponds aux questions QCM du pdf.</p> </li> <li> <p>Tu peux tester ton code avec l'IDE du chapitre \"TBD. Bac \u00e0 sable\"</p> </li> <li> <p>Compl\u00e8te ton fichier \"memo\" que tu compl\u00e8teras avec ce que tu as appris au fur et \u00e0 mesure de ton avancement dans le cours.</p> </li> </ul>"},{"location":"uaa11_python/tp5_listes_string/tp5_listes_string/#1-tbd","title":"1. TBD","text":""},{"location":"uaa11_python/tp6_struct_complexes/tp6_struct_complexes/","title":"UAA11 TP6 - Les structures comples: listes, cha\u00eenes, tupples et dictionnaires","text":"<p>Notions abord\u00e9es :  TBD</p> <p>M\u00e9mo</p> <ul> <li> <p>Prends connaissance du cours sur les tuples, les dictionnaires, fais les activit\u00e9s ci-dessous puis r\u00e9ponds aux questions QCM du pdf.</p> </li> <li> <p>Tu peux tester ton code avec l'IDE du chapitre \"TBD. Bac \u00e0 sable\"</p> </li> <li> <p>Compl\u00e8te ton fichier \"memo\" que tu compl\u00e8teras avec ce que tu as appris au fur et \u00e0 mesure de ton avancement dans le cours.</p> </li> </ul>"},{"location":"uaa11_python/tp6_struct_complexes/tp6_struct_complexes/#1-tbd","title":"1. TBD","text":""},{"location":"uaa11_python/tp7_listes_imbriquees/tp1_algo_boucles_imbriquees/","title":"UAA11 TP7-1 Algorea - les boucles imbriqu\u00e9es (rappels de 4\u00e8me)","text":"<p>Notions abord\u00e9es :  TBD</p> Consigne <p>Vas sur le site d'auto-apprentissage en ligne Algorea et suis la s\u00e9lection d'exercices suivante.</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp1_algo_boucles_imbriquees/#test1-algo-3-repeter-une-sequence","title":"Test1 - Algo-3 R\u00e9p\u00e9ter une s\u00e9quence","text":"Consigne <p>Vas sur le chapitre Donner plusieurs fois la m\u00eame s\u00e9quence d\u2019ordre au robot \u2013 1 Planter des fleurs</p> <p> </p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp1_algo_boucles_imbriquees/#test2-algo-8-fonctions","title":"Test2 - Algo-8 Fonctions","text":"Consigne <p>Vas sur le chapitre Cr\u00e9er ses propres blocs : Introduction aux fonctions \u2013 1 Construire une machine</p> <p> </p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp1_algo_boucles_imbriquees/#test3-algo-4-boucles-imbriquees","title":"Test3 - Algo-4 Boucles imbriqu\u00e9es","text":"Consigne <p>Vas sur le chapitre Concevoir des programmes compacts : Boucles imbriqu\u00e9es \u2013 4 Peindre le motif</p> <p> </p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp1_algo_boucles_imbriquees/#test4-idle-synthese","title":"Test4 - Idle : synth\u00e8se","text":"Consigne <ol> <li> <p>T\u00e9l\u00e9charge le fichier compress\u00e9 d\u00e9compresse les fichiers et d\u00e9place-les dans ton dossier de travail.</p> </li> <li> <p>Ouvre le fichier test.py avec idle et ex\u00e9cute-le. L\u2019appel des test1, 2, 3 se fait en modifiant l\u2019instruction en fin de code test1() par test2() ou test3()</p> </li> <li> <p>D\u00e9place le point bleu jusqu\u2019au point rouge en passant par toutes les cases jaunes.</p> <p>Tu dois utiliser un minimum d\u2019instructions, le d\u00e9placement se fait gr\u00e2ce \u00e0 : est(), ouest(), nord(), sud()</p> </li> <li> <p>D\u00e9marche :</p> <ul> <li> <p>Pense \u00e0 bien rep\u00e9rer sur la figure le bout de dessin qui se r\u00e9p\u00e8te.</p> </li> <li> <p>Ecris tout d\u2019abord le code pour parcourir ce bout de dessin.</p> </li> <li> <p>Compl\u00e8te-le pour parcourir toute la figure.</p> </li> </ul> </li> </ol> <p> </p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp2-3_fc_listes_imbriquees/","title":"UAA11 TP7-2 Future coder: pr\u00e9sentation des listes imbriqu\u00e9es","text":"<p>Ces exercices ont \u00e9t\u00e9 \u00e9cris \u00e0 partir du site futurecoder</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp2-3_fc_listes_imbriquees/#test12-liste-de-chaines","title":"Test1&amp;2 - Liste de chaines","text":"Test1 <p>Etant donn\u00e9 une liste de cha\u00eenes, \u00e9cris une fonction qui renvoie la premi\u00e8re lettre de la seconde cha\u00eene de la liste. Dans l'exemple ci-dessous, test1 renvoye d.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> <p>Info</p> <p>Tu as peut-\u00eatre r\u00e9solu le probl\u00e8me comme ceci :</p> <pre><code>chaine = chaines[1]\n\nprint(chaine[0])    \n</code></pre> <p>Il y a un moyen plus court. <code>chaines[1]</code> est une expression comme une autre et les indices comme <code>[0]</code> peuvent \u00eatre utilis\u00e9s sur n'importe quelle expression, pas seulement sur les variables. Tu peux donc sauter la variable interm\u00e9diaire et le faire en une seule ligne :</p> <pre><code>print(chaines[1][0])\n</code></pre> <p>Regarde bien cette syntaxe. Si elle te semble nouvelle et fantaisiste, elle ne l'est pas. Il s'agit simplement de la syntaxe habituelle avec des indices, appliqu\u00e9e deux fois.</p> Test2 <p>En utilisant cette syntaxe, modifie le programme pour renvoyer la derni\u00e8re lettre de l'avant-derni\u00e8re cha\u00eene dans la liste chaines. Tu devrais utiliser une expression unique. Ta solution devrait fonctionner pour toute liste non vide de cha\u00eenes. </p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp2-3_fc_listes_imbriquees/#test3-listes-imbriquees","title":"Test3 - Listes imbriqu\u00e9es","text":"<p>Info</p> <p>Appliquer l'indice deux fois peut \u00eatre encore plus puissant. Nous pouvons l'utiliser non seulement sur une liste de cha\u00eenes de caract\u00e8res, mais aussi sur une liste de listes. </p> <p>Qu'affiche le programme suivant ?</p> <pre><code>chaines = [['hello', 'there'], ['comment', 'allez', 'vous']]\nprint(chaines[1][0])\n</code></pre> <p>Comme tu peux le voir, Python nous permet d'utiliser des listes imbriqu\u00e9es : une liste dont chaque \u00e9l\u00e9ment est une autre liste (on pr\u00e9f\u00e8re les qualifier de sous-listes).</p> Test3 <p>On peut utiliser l'indexation plus de deux fois. \u00c9cris une fonction qui prend une liste imbriqu\u00e9e de chaines comme au-dessus et renvoie la premi\u00e8re lettre de la troisi\u00e8me cha\u00eene de la deuxi\u00e8me sous-liste. N'utilise qu'une expression comme dans l'exemple pr\u00e9c\u00e9dent. Pour l'exemple ci-dessus, cela devrait afficher v.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> <p>Info</p> <p>Nous pouvons toujours utiliser toutes les m\u00e9thodes et fonctions de liste que nous avons apprises auparavant. Par exemple, nous pouvons ajouter un nouveau mot \u00e0 la derni\u00e8re sous-liste de chaines avec append, pour qu'il vienne apr\u00e8s 'vous' :</p> <p>chaines[1].append(\"aujourd'hui ?\")</p> <p>Apr\u00e8s tout, la sous-liste chaines[1] est toujours une liste comme une autre !</p> <p>Au paragraphe suivant, nous allons apprendre \u00e0 boucler sur des listes imbriqu\u00e9es.</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp2-3_fc_listes_imbriquees/#test4-parcours-de-listes-imbriquees","title":"Test4 - Parcours de listes imbriqu\u00e9es","text":"Test4 <p>Dans la liste pr\u00e9c\u00e9dente:</p> <ul> <li> <p>rajoute 'are' apr\u00e8s 'there'.</p> </li> <li> <p>remplace 'comment' par 'how'</p> </li> </ul> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp2-3_fc_listes_imbriquees/#uaa11-tp7-3-future-coder-listes-a-2-dimensions","title":"UAA11 TP7-3 Future coder: listes \u00e0 2 dimensions","text":""},{"location":"uaa11_python/tp7_listes_imbriquees/tp2-3_fc_listes_imbriquees/#test5-affichage","title":"Test5 - Affichage","text":"<p>Info</p> <p>Tu peux utiliser une boucle imbriqu\u00e9e pour it\u00e9rer sur chaque \u00e9l\u00e9ment et sous-\u00e9l\u00e9ment d'une liste imbriqu\u00e9e. Par exemple, consid\u00e9re cette liste imbriqu\u00e9e.</p> <pre><code>nombres = [[1, 2, 3], [4, 5], [6], []]\n\nfor sous_liste in nombres:\n    for nombre in sous_liste:\n        print(nombre)\n    print('---')\n</code></pre> <p>Regarde attentivement le code. Note que la boucle ext\u00e9rieure cr\u00e9e une variable sous_liste et que la boucle int\u00e9rieure it\u00e8re sur cette m\u00eame variable. Il s'agit d'une situation classique. Maintenant, ex\u00e9cute le code dans l'IDE ci-dessous.</p> <p>Comme pour les listes \u00e0 une dimension, cette solution ne t'informe pas sur l'\u00e9l\u00e9ment que tu affiches et ne te permet pas de le modifier. Pour cel\u00e0, tu peux it\u00e9rer avec 2 compteurs:</p> <ul> <li> <p>la 1\u00e8re boucle <code>for</code> parcourt la liste gr\u00e0ce \u00e0 un 1er compteur <code>j</code> qui compte le nombre de sous listes ( ici 4 ),</p> </li> <li> <p>la 2\u00e8me boucle  <code>for</code> parcourt chaque sous-liste gr\u00e2ce \u00e0 un compteur <code>i</code> qui compte le nombre de chiffres.</p> </li> </ul> <pre><code>nombres = [[10, 20, 30], [40, 50, 60], [70,80,90], [91, 92, 93]]\n\njmax = len(nombres)     # 3\nimax = len(nombres[0])  # 3\n\nfor j in range(jmax):\n    for i in range(imax):\n        print(nombres[j][i])\n    print('---')\n</code></pre> Test5 <p>Copie les 2 codes ci-dessous et regarde attentivement son d\u00e9roulement en rajoutant des impressions des variables int\u00e9rieures aux boucles (sous_liste ou  j, i)</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp2-3_fc_listes_imbriquees/#test6-recherche-dune-chaine","title":"Test6 - Recherche d'une cha\u00eene","text":"Test6 <p>Supposons que nous ayons une liste imbriqu\u00e9e de cha\u00eenes de caract\u00e8res comme celle ci-dessous, et que nous voulions rechercher un mot particulier au plus profond de la liste.</p> <p>Tu peux imaginer que chaines repr\u00e9sente un livre, o\u00f9 chaque sous-liste est une page et chaque cha\u00eene de caract\u00e8res \u00e0 l'int\u00e9rieur est une ligne dans cette page. Cela pourrait aussi repr\u00e9senter une biblioth\u00e8que, o\u00f9 chaque liste est un livre et chaque cha\u00eene est une page.</p> <p>\u00c9cris un programme pour afficher chaque cha\u00eene de caract\u00e8res qui contient mot. Cela devrait fonctionner pour n'importe quel mot et n'importe quelle chaines.</p> <p>Rappele-toi qu'il existe une fa\u00e7on sp\u00e9cifique de v\u00e9rifier si une cha\u00eene de caract\u00e8res contient une autre cha\u00eene de caract\u00e8res. </p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp2-3_fc_listes_imbriquees/#test78-presence-dune-chaine","title":"Test7&amp;8 Pr\u00e9sence d'une cha\u00eene","text":"Test7 <p>Maintenant, modifions l\u00e9g\u00e8rement l'exercice. Cette fois, la sortie doit nous indiquer quelles sous-listes contiennent <code>mot</code>, plut\u00f4t que les cha\u00eenes internes. En particulier, nous voulons afficher un bool\u00e9en pour chaque sous-liste : <code>True</code> si la sous-liste contient le mot dans l'une de ses cha\u00eenes, <code>False</code> s'il n'y est pas du tout.</p> <p>Attention !</p> <p>Note que mot in sous_liste ne fonctionnera pas. Par exemple, <code>\"hello\" in [\"hello there\"</code>, <code>\"comment allez-vous\"]</code> est <code>False</code> car <code>\"hello\"</code> n'est \u00e9gale \u00e0 aucun des deux \u00e9l\u00e9ments de cette liste, m\u00eame s'il est dans l'un d'eux.</p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test8 <p>Ensuite, n'affiche qu'un seul bool\u00e9en pour indiquer si <code>mot</code> est pr\u00e9sent dans n'importe quelle cha\u00eene de la liste enti\u00e8re imbriqu\u00e9e. </p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp4_exo/","title":"UAA11 TP7-4 Exercices","text":""},{"location":"uaa11_python/tp7_listes_imbriquees/tp4_exo/#memo","title":"M\u00e9mo","text":"<p>As-tu ton m\u00e9mo de pr\u00eat avant de d\u00e9marrer les exercices ?</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp4_exo/#test1-declaration-dune-liste-de-x-de-810","title":"Test1 - D\u00e9claration d'une liste de X de 8*10","text":"Test1 <p>Une liste imbriqu\u00e9e de 8*10 contenant que des X est en fait une liste constitu\u00e9e de 8 sous-listes cotenant 10 X chacune.</p> <ul> <li> <p>Soit tu la d\u00e9finis \"manuellement\" :</p> <p>Code</p> <pre><code>&gt;&gt;&gt; liste2d = [\n    ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'], \n    ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'], \n    ['X','X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'], \n    ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'], \n    ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'], \n    ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'], \n    ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'], \n    ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X']\n]\n</code></pre> </li> <li> <p>Soit tu la d\u00e9finis avec une boucle. Pour cel\u00e0, compl\u00e8te le code</p> </li> </ul> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> <p>Remarque</p> <p>Il n\u2019y a aucune diff\u00e9rence qualitative entre :</p> <ul> <li> <p>une liste \u00e0 2 dimensions 8*10 accessibles par 2 indices (j, i), allant respectivement de de 0 \u00e0 7 et de 0 \u00e0 9</p> </li> <li> <p>et une liste \u00e0 une dimension  8*10=80  accessible par un seul indice i allant de 0 \u00e0 79.</p> </li> </ul> <p>Le choix se fera sur la facilit\u00e9 de manipulation d ela liste.</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp4_exo/#test2-affichage-de-la-liste","title":"Test2 - Affichage de la liste","text":"Test2a <p>Parcours la 1\u00e8re liste pour afficher les sous-listes \"ligne par ligne\" ###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p> Test2b <p>Parcours la liste et chaque sous-liste pour afficher chaque \u00e9l\u00e9ment s\u00e9par\u00e9ment</p> <p>Exemple</p> <pre><code>&gt;&gt;&gt; affiche()\nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X\n</code></pre> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp4_exo/#test3-affichage-des-coordonnees","title":"Test3 - Affichage des coordonn\u00e9es","text":"Test3 <p>Parcours la liste et les sous-listes liste pour afficher leurs indices sous forme de coordonn\u00e9es ( j, i )</p> <p>Attention !</p> <p>A l'inverse des math, nous parcourons d'abord les lignes (indice j qui augmente du haut vers le bas), puis X (indice i qui augmente de gauche \u00e0 droite)</p> <p>Exemple</p> <pre><code>&gt;&gt;&gt; affiche_coor()\n( 0 , 0 ) ( 0 , 1 ) ( 0 , 2 ) ( 0 , 3 ) ( 0 , 4 ) ( 0 , 5 ) ( 0 , 6 ) ( 0 , 7 ) ( 0 , 8 ) ( 0 , 9 ) \n( 1 , 0 ) ( 1 , 1 ) ( 1 , 2 ) ( 1 , 3 ) ( 1 , 4 ) ( 1 , 5 ) ( 1 , 6 ) ( 1 , 7 ) ( 1 , 8 ) ( 1 , 9 ) \n( 2 , 0 ) ( 2 , 1 ) ( 2 , 2 ) ( 2 , 3 ) ( 2 , 4 ) ( 2 , 5 ) ( 2 , 6 ) ( 2 , 7 ) ( 2 , 8 ) ( 2 , 9 ) \n( 3 , 0 ) ( 3 , 1 ) ( 3 , 2 ) ( 3 , 3 ) ( 3 , 4 ) ( 3 , 5 ) ( 3 , 6 ) ( 3 , 7 ) ( 3 , 8 ) ( 3 , 9 ) \n( 4 , 0 ) ( 4 , 1 ) ( 4 , 2 ) ( 4 , 3 ) ( 4 , 4 ) ( 4 , 5 ) ( 4 , 6 ) ( 4 , 7 ) ( 4 , 8 ) ( 4 , 9 ) \n( 5 , 0 ) ( 5 , 1 ) ( 5 , 2 ) ( 5 , 3 ) ( 5 , 4 ) ( 5 , 5 ) ( 5 , 6 ) ( 5 , 7 ) ( 5 , 8 ) ( 5 , 9 ) \n( 6 , 0 ) ( 6 , 1 ) ( 6 , 2 ) ( 6 , 3 ) ( 6 , 4 ) ( 6 , 5 ) ( 6 , 6 ) ( 6 , 7 ) ( 6 , 8 ) ( 6 , 9 ) \n( 7 , 0 ) ( 7 , 1 ) ( 7 , 2 ) ( 7 , 3 ) ( 7 , 4 ) ( 7 , 5 ) ( 7 , 6 ) ( 7 , 7 ) ( 7 , 8 ) ( 7 , 9 )\n</code></pre> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp4_exo/#test4-modification-dun-caractere","title":"Test4 - Modification d'un caract\u00e8re","text":"Test4 <p>Demande \u00e0 l\u2019utilisateur la position du caract\u00e8re qu\u2019il veut changer ainsi que le nouveau caract\u00e8re par lequel il veut le remplacer, puis affiche la nouvelle liste.</p> <p>Exemple</p> <pre><code>&gt;&gt;&gt; modif_car()\nj: 3\ni: 2\nc: U\nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X \nX X U X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X \nX X X X X X X X X X\n</code></pre> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp4_exo/#test5-recherche-de-la-position","title":"Test5 - Recherche de la position","text":"Test5 <p>Demande \u00e0 l\u2019utilisateur de rentrer un caract\u00e8re et affiche s\u2019il l\u2019a trouv\u00e9 ou pas; si c'est le cas, affiche sa position dans la liste.</p> <p>Exemple</p> <pre><code>&gt;&gt;&gt; find_pos_car()\nc: U\nU True\nU trouv\u00e9 en (3,2)\n</code></pre> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp4_exo/#test6-recherche-des-caracteres-adjacents","title":"Test6 - Recherche des caract\u00e8res adjacents","text":"Test6 <p>Demande \u00e0 l\u2019utilisateur de rentrer une position et affiche le caract\u00e8re correspondant ainsi que ceux autour de lui.</p> <p>Exemple</p> <pre><code>&gt;&gt;&gt; find_autour_car()\nj: 3\ni: 2\nU\nX X X \nX U X \nX X X\n</code></pre> <p>Attention !</p> <p>Ton test doit  fonctionner si le caract\u00e8re est choisi en extr\u00e9mit\u00e9 de la liste         </p> <p>###(D\u00e9s-)Active le code apr\u00e8s la ligne <code># Tests</code> (insensible \u00e0 la casse)(Ctrl+I) Entrer ou sortir du mode \"deux colonnes\"(Alt+: ; Ctrl pour inverser les colonnes) Entrer ou sortir du mode \"plein \u00e9cran\"(Esc) Tronquer ou non le feedback dans les terminaux (sortie standard &amp; stacktrace / relancer le code pour appliquer) Si activ\u00e9, le texte copi\u00e9 dans le terminal est joint sur une seule ligne avant d'\u00eatre copi\u00e9 dans le presse-papierEx\u00e9cuter le code(Ctrl+S)ValiderCtrl+Enter(Clic droit pour l'historique)T\u00e9l\u00e9chargerT\u00e9l\u00e9verserR\u00e9initialiser l'\u00e9diteurSauvegarder dans le navigateur\u00c9valuations restantes : 5/5</p>"},{"location":"uaa11_python/tp7_listes_imbriquees/tp5_jeu/","title":"UAA11 TP7-5 Jeu de plateau","text":"Consignes g\u00e9n\u00e9rales <ul> <li> <p>Tu as 2 s\u00e9ances maximum pour faire / refaire les tp1, 2, 3 sur les listes imbriqu\u00e9es</p> </li> <li> <p>Tu as 3 semaines de plus pour \u00e9crire ton code et le rendre pour le vendredi 3 octobre avant minuit </p> </li> <li> <p>Le jeu ne doit pas \u00eatre complet, demande \u00e0 ton professeur jusqu'o\u00f9 coder en fonction de ton choix. L'objectif est de manipuler une liste imbriqu\u00e9e \u00e0 2 dimensions simple.</p> </li> <li> <p>Tu dois absolument \u00e9crire le code pour les 2 joueurs.</p> </li> <li> <p>Tu n'as pas le droit de t\"aider ni d'internet, ni de chatgpt. Ton \u00e9valuation tiendra principalement compte du travail fourni pendant les heures de cours.</p> </li> </ul> xo <p> </p> <p>Warning</p> <p>Le code doit \u00eatre complet</p> Puissance 4 <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle le placement des jetons des 2 joueurs</p> Pente <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle placement des pionts des 2 joueurs et la prise des pionts adverses.</p> Bataille navale <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle \"tir\" des 2 joueurs et la v\u00e9rification si un bateau est touch\u00e9 ou pas, ainsi que l'affiche des cases jou\u00e9es.</p> Jeu de dame <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle d\u00e9placement des points des 2 joueurs.</p> Echecs <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle d\u00e9placement des points des 2 joueurs.</p> Echecs chinois <p> R\u00e8gles du jeu (pdf)</p> Jeu de go <p> R\u00e8gles du jeu (pdf)</p> Othello <p> R\u00e8gles du jeu (pdf)</p> Qawale <p> R\u00e8gles du jeu (pdf)</p> Quantik <p> R\u00e8gles du jeu (pdf)</p> Shogi <p> R\u00e8gles du jeu (pdf)</p> Stratego <p> R\u00e8gles du jeu (pdf)</p>"},{"location":"uaa12_web/web/","title":"UAA12 - Web dynamique","text":"<ul> <li>Introduction (pdf)</li> <li>Formulaires (pdf)</li> <li>python flask tp1 (pdf)</li> <li>python flask tp2 (pdf)</li> <li>python flask tp3 (pdf)</li> <li>sqlite python flask (pdf)</li> <li>javascript (pdf)</li> </ul>"},{"location":"uaa13-14_python/tp1_jeu/jeu/","title":"UAA13-14 TP1 Jeu de plateau","text":"Consignes g\u00e9n\u00e9rales <ul> <li> <p>Tu as 2 s\u00e9ances maximum pour faire / refaire les chapitres 1, 2, 3 sur les listes imbriqu\u00e9es (TP7 de l'UAA11)</p> </li> <li> <p>Tu as 3 semaines de plus pour \u00e9crire ton jeu et le rendre pour le vendredi 3 octobre avant minuit </p> </li> <li> <p>Le jeu ne doit pas \u00eatre complet, demande \u00e0 ton professeur jusqu'o\u00f9 coder en fonction de ton choix. L'objectif est de manipuler une liste imbriqu\u00e9e \u00e0 2 dimensions simple.</p> </li> <li> <p>Tu dois absolument \u00e9crire le code pour les 2 joueurs.</p> </li> <li> <p>Tu n'as pas le droit de t\"aider ni d'internet, ni d'une IA. Ton \u00e9valuation tiendra principalement compte du travail fourni pendant les heures de cours.</p> </li> </ul> xo <p> </p> <p>Warning</p> <p>Le code doit \u00eatre complet</p> Puissance 4 <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle le placement des jetons des 2 joueurs</p> Pente <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle placement des pionts des 2 joueurs et la prise des pionts adverses.</p> Bataille navale <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle \"tir\" des 2 joueurs et la v\u00e9rification si un bateau est touch\u00e9 ou pas, ainsi que l'affiche des cases jou\u00e9es.</p> Jeu de dame <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle d\u00e9placement des points des 2 joueurs.</p> Echecs <p> R\u00e8gles du jeu (pdf)</p> <p>Warning</p> <p>Le code doit contenir au minimumle d\u00e9placement des points des 2 joueurs.</p> Echecs chinois <p> R\u00e8gles du jeu (pdf)</p> Jeu de go <p> R\u00e8gles du jeu (pdf)</p> Othello <p> R\u00e8gles du jeu (pdf)</p> Qawale <p> R\u00e8gles du jeu (pdf)</p> Quantik <p> R\u00e8gles du jeu (pdf)</p> Shogi <p> R\u00e8gles du jeu (pdf)</p> Stratego <p> R\u00e8gles du jeu (pdf)</p>"},{"location":"uaa13-14_python/tp2_socket/socket/","title":"UAA13-14 TP2 Socket","text":"Consignes <ul> <li> <p>Lis le site de pr\u00e9sentation d'une architecture Client-Serveur au travers des sockets</p> </li> <li> <p>Lis le chapitre 19 sur les sockets du manuel \"Apprendre \u00e0 programmer en Python de G\u00e9rad Swimmen\", il commente en d\u00e9tail les fichiers serveur et client ci-dessous. </p> </li> <li> <p>R\u00e9cup\u00e8re et d\u00e9compresse les fichiers template suivants. </p> </li> </ul> <p>Lis les codes ci-dessous des 2 fichiers socket_serveur.py, socket_client.py et essaie de bien comprendre leur fonctionnement lors de leur ex\u00e9cution.</p> Code python socket_serveur.pysocket_client.py <pre><code>    import socket, sys\n\n    HOST='0.0.0.0'   # equivalent \u00e0 une cha\u00eene vide. Le socket est li\u00e9 \u00e0 toutes les interfaces locales\n    PORT=15550       # ports libres &gt; 1024\n    \"\"\"\n    C\u00f4t\u00e9 serveur:           C\u00f4t\u00e9 client:\n    1 - socket()            1 - socket()\n    2 - bind()              \n    3 - listen()\n                            2 - connect()\n    4 - accept()\n\n                            3 - send()\n    5 - recv()\n        send()\n                            recv()\n    6 - close()             4 - close()\n\n    \"\"\"\n\n    ##############################################################################\n    # 1\n    # Cr\u00e9ation d'un objet socket \n    # AF_INET: pr\u00e9cise que l'adr est du type intenrent ipv4\n    # SOCK_STREAM : pr\u00e9cise que la transmission est une connexion en continue utilisant le protocole TCP\n\n    socket_serveur=socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n    ##############################################################################\n    # 2\n    # Tentative de liaison du socket d'\u00e9coute \u00e0 une adresse pr\u00e9cise\n\n    try:\n        socket_serveur.bind((HOST,PORT))\n    except socket.error:\n        print(\"liaison du socket \u00e0 l'adr choisie a \u00e9chou\u00e9\")\n        sys.exit\n\n\n    while 1: \n    ##############################################################################\n    # 3\n    # serveur en attente d'un requ\u00eate client (2 requ\u00eate max \u00e0 accepter en //)\n    # seveur \u00e9coute sur le PORT\n        print(\"Serveur pr\u00eat, en attente de requ\u00eate ...\")\n        socket_serveur.listen(2)\n\n    ##############################################################################\n    # 4\n    # Etablissement de la connexion\n    # accept interrompt le prog juqsu'\u00e0 l'arriv\u00e9e d'une requ\u00eate client. \n    # Qd un client se connecte, le serveur accpet la connexion\n    # accept() renvoie un tuple:\n    # - conn_client: nouvel objet de classe socket = socket de communication qui permet l'\u00e9change de \n    # donn\u00e9es avec le client\n    # - adr_client: adr du client (IP, PORT)\n        conn_client, adr_client = socket_serveur.accept()\n        print(\"Client connect\u00e9, adr IP {}, port {}\".format(adr_client[0],adr_client[1]))\n\n    ##############################################################################\n    # 5\n    # Dialogue avec le client\n\n        msgClient = conn_client.recv(1024).decode(\"Utf8\")\n        print(\"C&gt;\", msgClient)\n\n        msgServeur =\"Enchant\u00e9, bienvenue sur le serveur Marcel\"\n        conn_client.send(msgServeur.encode(\"Utf8\"))   \n\n    ##############################################################################\n    # 6\n    # Fermeture de la connexion\n        conn_client.send(\"fin\".encode(\"utf8\"))\n        print(\"Connexion interrompue\")\n        conn_client.close()\n</code></pre> <pre><code>    import socket, sys\n\n    HOST=\"localhost\"\n    PORT=15550\n\n    ##############################################################################\n    # 1\n    # Cr\u00e9ation d'un objet socket \n    socket_client=socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n    ##############################################################################\n    # 2\n    # Envoi d'une requ\u00eate de connexion au serveur\n    try:\n        socket_client.connect((HOST, PORT))\n    except socket.error:\n        print(\"La connexion a \u00e9chou\u00e9.\")\n        sys.exit()\n    print(\"connexion \u00e9tablie avec le serveur\")\n\n    ##############################################################################\n    # 3) Dialogue avec le serveur :\n\n    # Envoie d'un message au client\n    msgClient = \"Bonjour serveur, je suis Brigitte\"\n    socket_client.send(msgClient.encode(\"Utf8\"))\n\n    #R\u00e9ception du message du serveur\n    msgServeur = socket_client.recv(1024).decode(\"Utf8\")\n    print(\"S&gt;\", msgServeur)\n\n    ##############################################################################\n    # 4) Fermeture de la connexion :\n    print(\"Connexion interrompue.\")\n    socket_client.close()\n</code></pre> Console idle socket_serveur.py <pre><code>```console\n    &gt;&gt;&gt; Serveur pr\u00eat, en attente de requ\u00eate ...\n        Client connect\u00e9, adr IP 127.0.0.1, port 58703\n        C&gt; Bonjour serveur, je suis Brigitte\n        Connexion interrompue\n        Serveur pr\u00eat, en attente de requ\u00eate ...\n```\n</code></pre> Console idle socket_client.py <pre><code>```console\n    &gt;&gt;&gt; Connexion \u00e9tablie avec le serveur\n        S&gt; Enchant\u00e9, bienvenue sur le serveur Marcel\n        Connexion interrompue..\n```\n</code></pre> <p>M\u00e9mo des principales m\u00e9thodes de socket</p> M\u00e9thode Description bind(addr) associe le socket \u00e0 une adresse locale connect(addr) connecte le socket \u00e0 une adresse distante listen(n) commence \u00e0 \u00e9couter les connexions entrantes accept() accepte une connexion, retourne un nouveau socket et une adresse client send(data[, flags]) envoye des donn\u00e9es recv(buflen[, flags]) recoit des donn\u00e9es close() ferme le socket Exercice 1 <ul> <li> <p>Le code est le m\u00eame que le pr\u00e9c\u00e9dent, mais \u00e9pur\u00e9 de ses commentaires; tu peux t'en servir de m\u00e9mo. Avec ton voisin, modifie les adresses IP pour pouvoir comuniquer entre vous.</p> </li> <li> <p>la lettre C&gt; ou S&gt; en d\u00e9but de ligne pr\u00e9cise si le message vient du Client ou du serveur</p> </li> </ul> Console idle socket_serveur.py exo1_serveur.py exo1_client.py &gt;&gt;&gt; Serveur pr\u00eat, en attente de requ\u00eate ... &gt;&gt;&gt; Client connect\u00e9, adr IP 127.0.0.1, port 59296 Connexion \u00e9tablie avec le serveur C&gt; Bonjour serveur, je suis Brigitte S&gt; Enchant\u00e9, bienvenue sur le serveur Marcel Connexion interrompue Connexion interrompue Exercice 2 <ul> <li>A partir du code pr\u00e9c\u00e9dent, modifie les fichiers pour obtenir le r\u00e9sultat ci-dessous.</li> </ul> Console idle socket_serveur.py exo2_serveur.py exo2_client.py &gt;&gt;&gt; Serveur pr\u00eat, en attente de requ\u00eate ... &gt;&gt;&gt; Client connect\u00e9, adr IP 127.0.0.1, port 59296 Connexion \u00e9tablie avec le serveur S&gt; Bienvenue sur le serveur Marcel, que puis-je faire pour vous ? C&gt; Bonjour serveur, je suis Brigitte Connexion interrompue Connexion interrompue Exercice 3 <p>A partir du code pr\u00e9c\u00e9dent, compl\u00e8te les fichiers pour obtenir le r\u00e9sultat ci-dessous. Attention, les messages sont entr\u00e9s par les utilisateurs au clavier.</p> Console idle socket_serveur.py exo3_serveur.py exo3_client.py &gt;&gt;&gt; Serveur pr\u00eat, en attente de requ\u00eate ... &gt;&gt;&gt; Client connect\u00e9, adr IP 127.0.0.1, port 59296 Connexion \u00e9tablie avec le serveur S&gt; Bienvenue sur le serveur Marcel, que puis-je faire pour vous ? C&gt; Bonjour Marcel, est-ce que tu me re\u00e7ois ? C&gt; Bonjour Marcel, est-ce que tu me re\u00e7ois ? S&gt; Oui, je te re\u00e7ois tr\u00e8s bien S&gt; Oui, je te re\u00e7ois tr\u00e8s bien C&gt; ... etc S&gt; ... etc Connexion interrompue Connexion interrompue Exercice 4 <p>Modifie le code pr\u00e9c\u00e9dent pour envoyer du client vers le serveur et vice-versa, les coordonn\u00e9es (j,i) entr\u00e9es au clavier. Pour cel\u00e0 tu dois d'un c\u00f4t\u00e9 les concat\u00e9ner pour les envoyer en une cha\u00eene de caract\u00e8res: <pre><code>    j = input(\"C&gt; Jr Client entre j: \")\n    i = input(\"C&gt; Jr Client entre i: \")\n    msgClient = j+i\n</code></pre> et de l'autre, acc\u00e9der \u00e0 chaque caract\u00e8re : <pre><code>    j, i = int(msgClient[1]), int(msgClient[0])\n</code></pre></p> Console idle socket_serveur.py exo4_coor_serveur.py exo4_coor_client.py &gt;&gt;&gt; Serveur pr\u00eat, en attente de requ\u00eate ... &gt;&gt;&gt; Client connect\u00e9, adr IP 127.0.0.1, port 59296 Connexion \u00e9tablie avec le serveur S&gt; Bienvenue sur le serveur Marcel, entre tes coordonn\u00e9es C&gt; Jr Client entre j: 2 C&gt; Jr Client entre i: 3 C&gt; 3 2 S&gt; Jr Serveur entre j: 1 S&gt; Jr Serveur entre i: 0 S&gt; 0 1 C&gt; ... etc S&gt; ... etc Connexion interrompue Connexion interrompue Exercice 5 <p>Modifie le code pr\u00e9c\u00e9dent pour envoyer du client vers le serveur, la position et la couleur que l'on souhaite modifier dans une liste. La liste est d\u00e9clarar\u00e9e et mise \u00e0 jour des 2 c\u00f4t\u00e9s serveur / client.</p> <p>Tu pourras c\u00f4t\u00e9 client envoyer les 2 variables dans un tuple converti en cha\u00eene de caract\u00e8res. <pre><code>    pos = int(input(\"C&gt; position: \"))\n    coul = input(\"C&gt; couleur: \")\n    msgClient = str((pos,coul))\n</code></pre> puis de l'autre, les re-convertir en tuple afin d'acc\u00e9der \u00e0 chaque variable: <pre><code>    pos, coul = eval(msgClient)\n</code></pre></p> Console idle socket_serveur.py exo4_coor_serveur.py exo4_coor_client.py &gt;&gt;&gt; Serveur pr\u00eat, en attente de requ\u00eate ... &gt;&gt;&gt; Client connect\u00e9, adr IP 127.0.0.1, port 59296 Connexion \u00e9tablie avec le serveur S&gt; Vous \u00eates connect\u00e9 au serveur Marcel. Quel est ton nom, pr\u00e9nom et classe ? C&gt; nom, pr\u00e9nom et classe: REYMONDIE Yves 6TT C&gt; nom, pr\u00e9nom et classe: REYMONDIE Yves 6TT S&gt; Bonjour REYMONDIE Yves 6TT et bienvenue ! ['rouge', 'vert', 'bleu', 'jaune', 'violet'] C&gt; position: 1 C&gt; couleur: orange C&gt; 1 orange ['rouge', 'orange', 'bleu', 'jaune', 'violet'] ['rouge', 'orange', 'bleu', 'jaune', 'violet'] C&gt; ... etc Connexion interrompue Connexion interrompue"},{"location":"uaa13-14_python/tp3_tkinter/tkinter/","title":"UAA13-14 TP3 Tkinter","text":"Consignes <p>Voici 2 cours de r\u00e9f\u00e9rence: </p> <ul> <li> <p>le chapitre 8 sur Tkinter du manuel \"Apprendre \u00e0 programmer en Python de G\u00e9rad Swimmen\". </p> </li> <li> <p>la documentation Tkinter de Pascal Ortiz. </p> </li> </ul> <p>Voici \u00e9galement un m\u00e9mo et une d\u00e9couverte de Tkinter en quelques pages pour les ,lyc\u00e9ens.</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/","title":"Tuto de Pascal Trieles \"Interfaces graphiques en Python 3 avec Tkinter\"","text":""},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#introduction","title":"Introduction","text":"<p>Cette pages est une copie du site de Pascal Trieles </p> <p>Tkinter est la bliblioth\u00e8que de composants graphiques disponible par d\u00e9faut avec Python 3. Vous pourrez trouver une traduction en fran\u00e7ais de sa documentation \u00e0 l'adresse http://tkinter.fdex.eu/.</p> <p> Recommandations importantes </p> <ul> <li> <p>Tout ce qui est d\u00e9crit ici est hors-programme de NSI\u00a0! En poursuivant la lecture, vous comprenez que le temps que vous y consacrerez sera perdu, au sens o\u00f9 il ne vous aidera pas \u00e0 avoir de meilleurs r\u00e9sultats en NSI. Par contre, cela pourra vous int\u00e9resser voire vous distraire\u00a0: ainsi, il convient que vous preniez sur votre temps libre pour r\u00e9aliser ces activit\u00e9s. En aucun cas vous ne devriez consommer du temps normalement consacr\u00e9 \u00e0 vos \u00e9tudes !</p> </li> <li> <p>Au d\u00e9but de ce document, qui vise \u00e0 vous faire d\u00e9couvrir les notions et composants de base de Tkinter, il vous sera demand\u00e9 de travailler dans une console interactive (Idle ou iPython). Par la suite, vous cr\u00e9erez des scripts.</p> </li> <li> <p>Je vous demande de faire en sorte que votre console interactive occupe une moiti\u00e9 de votre \u00e9cran, et de veiller \u00e0 ce que les \u00ab\u00a0fen\u00eatres Tkinter\u00a0\u00bb que vous fabriquerez soient toujours visibles sur l'autre partie de l'\u00e9cran (vous devrez probablement les d\u00e9placer, \u00e0 chaque fois).</p> </li> </ul> <p>En mode interactif, la construction de l'interface graphique (souvent abr\u00e9g\u00e9e en GUI (pour Graphical User Interface en anglais) est dynamique et progressive, l'observer \u00e9tape apr\u00e8s \u00e9tape est instructif.</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#premiers-pas","title":"Premiers pas","text":"<p>Chaque fois que l'on voudra exploiter la biblioth\u00e8que Tkinter, il faudra commencer par l'importer (on va faire ici un import global, bien que cela ne soit pas optimal).</p> <pre><code>&gt;&gt;&gt; from tkinter import *               # Import indispensable (mais excessif).\n&gt;&gt;&gt; f=Tk()                              # Cr\u00e9ation de la fen\u00eatre de base de l'application.\n&gt;&gt;&gt; f.title(\"D\u00e9couverte de Tkinter\")    # On lui donne un nom...\n</code></pre> <p>Normalement, une fen\u00eatre (tr\u00e8s tr\u00e8s vide) a d\u00fb appara\u00eetre (si vous ne la rep\u00e9rez pas au premier coup d'\u0153il, cherchez-l\u00e0 dans la \u00ab barre des t\u00e2ches \u00bb ou le dock).</p> <p> NE LA FERMEZ SURTOUT PAS ! </p> <p>Si par malheur vous avez d\u00e9j\u00e0 cliqu\u00e9 sur la croix qui, traditionnellement, ferme les fen\u00eatres, vous n'avez plus qu'\u00e0 saisir \u00e0 nouveau les lignes 1 et 2 pr\u00e9c\u00e9dentes...</p> <p>Remarques</p> <ul> <li> <p>Les commentaires dans le code sont \u00e0 lire avec attention ! Il est en revanche inutile de les taper ...</p> </li> <li> <p>La Programmation Orient\u00e9e Objet (POO) est le style de programmation de pr\u00e9dilection pour les interfaces graphiques (au moins en Python). Cela permet notamment d'\u00e9viter de s'encombrer (voire s'\u00e9garer  !) avec des variables globales, m\u00eame si Tkinter offre \u2014 dans les cas simples \u2014 des moyens de contourner cette difficult\u00e9). Vous aurez donc tr\u00e8s souvent \u00e0 faire appel aux notations usuelles en POO : <code>objet.methode(...)</code>.</p> </li> </ul> Pour parler (un rien) de Programmation Orient\u00e9e Objet <p>Pour faire simple, un objet est une portion de code autonome. Il est d\u00e9fini \u00e0 partir d'une classe, qui, chaque fois qu'elle est instanci\u00e9e (ex\u00e9cut\u00e9e), cr\u00e9e un nouvel objet.</p> <p>Pour tenter une analogie\u00a0: une classe est un moule \u00e0 g\u00e2teau, un objet est un g\u00e2teau, et on peut cr\u00e9er plusieurs g\u00e2teaux (qui peuvent \u00eatre un peu diff\u00e9rents) \u00e0 partir du m\u00eame moule.</p> <p>Un attribut est une caract\u00e9ristique de l'objet. C'est une variable qui n'existe que lorsque un objet est instanci\u00e9, \u00e0 laquelle on ne peut acc\u00e9der qu'\u00e0 travers l'objet, et qui est li\u00e9e \u00e0 cet objet en particulier (deux objets instanci\u00e9s \u00e0 partir de la m\u00eame classe auront chacun un m\u00eame attribut, qui portera le m\u00eame nom, mais d\u00e9signera des valeurs diff\u00e9rentes.</p> <p>Une m\u00e9thode est une fonction \u00ab\u00a0embarqu\u00e9e\u00a0\u00bb dans l'objet, qui peut agir sur lui \u00ab\u00a0de l'int\u00e9rieur\u00a0\u00bb. Elle peut par exemple modifier les valeurs des attributs. On peut appeler une m\u00e9thode \u00e0 partir d'un objet avec la syntaxe <code>objet.methode()</code></p> Sp\u00e9cificit\u00e9 d'un programme \u00ab\u00a0graphique\u00a0\u00bb <p>Dans un script, il faudra syst\u00e9matiquement d\u00e9marrer la \u00ab\u00a0boucle principale\u00a0\u00bb \u00e0 l'aide d'une instruction du type <code>f.mainloop()</code> (o\u00f9 <code>f</code> d\u00e9signe la fen\u00eatre principale du programme).</p> <p>La m\u00e9thode <code>mainloop</code> provoque le d\u00e9marrage du gestionnaire d'\u00e9v\u00e9nements associ\u00e9 \u00e0 la fen\u00eatre : il est indispensable au bon fonctionnement de votre application graphique. Concr\u00e8tement, une boucle infinie est d\u00e9marr\u00e9e, elle ne sert qu'\u00e0 \u00ab\u00a0consommer\u00a0\u00bb une quanti\u00e9 minimale des ressources de la machine, juste ce qu'il faut pour surveiller tr\u00e8s r\u00e9guli\u00e8rement (et tr\u00e8s tr\u00e8s tr\u00e8s souvent :wink! !) les clics de souris, les pressions sur les touches du clavier, etc.</p> <p>C'est un peu cette instruction qui \u00ab\u00a0met en marche\u00a0\u00bb votre application graphique, en lui permettant d'interagir avec l'utilisateur.</p> <p>On parle dans cette situation de \u00ab\u00a0programmation \u00e9v\u00e9nementielle\u00a0\u00bb, dans laquelle une boucle infinie attend sans arr\u00eat qu'on la sollicite pour r\u00e9agir, par opposition \u00e0 la \u00ab\u00a0programmation s\u00e9quentielle\u00a0\u00bb dans laquelle un programme a vocation \u00e0 se terminer \u00e0 un moment (qui, si l'on s'en donnait la peine, pourrait \u00eatre) connu d'avance.</p> Programme s\u00e9quentiel Programme \u00e9v\u00e9nementiel <p>Les images proviennent de l'excellent livre libre \u00ab\u00a0Apprendre \u00e0 programmer avec Python 3\u00a0\u00bb. Bien qu'un peu ancien, d\u00e9sormais, il constitue n\u00e9anmoins une ressource de premi\u00e8re importance !</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#un-premier-widget","title":"Un premier widget","text":"<p>Un widget est un WIndow gaDGET. Une interface graphique est compos\u00e9e de divers widgets. Nous en verrons quelques uns (et vous en d\u00e9couvrirez d'autres par vous-m\u00eames, notamment en explorant la documentation de Tkinter).</p> <p>En supposant que vous avez saisi, dans votre console Python, les instructions pr\u00e9c\u00e9dentes et que vous n'avez pas ferm\u00e9 la fen\u00eatre qui a d\u00fb appara\u00eetre, saisissez maintenant le code suivant :</p> <pre><code># Cr\u00e9ation d'un label (une zone d'affichage), d\u00e9pendant de la fen\u00eatre f\n&gt;&gt;&gt; l=Label(f, text=\"Mon premier widget\")\n# Mais pourquoi donc rien ne s'affiche ?\n</code></pre> <p>Rien ne s'affiche parce que le widget n'est pas encore positionn\u00e9 dans la fen\u00eatre. Il y a en effet plusieurs fa\u00e7ons de placer les \u00e9l\u00e9ments constitutifs de l'interface graphique au sein de la fen\u00eatre principale (qui ici est d\u00e9sign\u00e9e par la variable <code>f</code>).</p> <p>Tkinter dispose de 3 gestionnaires de positionnement : <code>pack</code>, <code>grid</code> et <code>place</code>. On utilisera surtout <code>pack</code> dans les cas simples : c'est le plus basique et le plus facile \u00e0 utiliser (il \u00ab\u00a0empile\u00a0\u00bb  les widgets l'un sous l'autre en colonne, ou l'un \u00e0 c\u00f4t\u00e9 de l'autre en ligne). Pour des interfaces graphiques plus complexes, on utilisera surtout <code>grid</code>.</p> <pre><code># Insertion pour affichage du label dans la fen\u00eatre f\n&gt;&gt;&gt; l.pack()\n# Note : la g\u00e9om\u00e9trie de la fen\u00eatre s'en trouve affect\u00e9e !\n</code></pre> <p>On peut \u00e9videmment contr\u00f4ler le \u00ab\u00a0format \u00a0\u00bb  de la fen\u00eatre : d\u00e9finir sa taille, d\u00e9cider si l'utilisateur est autoris\u00e9 \u00e0 la redimensionner (et si oui, dans quelle direction).</p> <pre><code># Alt\u00e9rer la g\u00e9om\u00e9trie d'une fen\u00eatre\n&gt;&gt;&gt; f.geometry('200x30')\n# L'approche suivante est meilleure\n&gt;&gt;&gt; f.geometry('{}x{}'.format(300, 50))\n# Interdire le redimensionnement d'une fen\u00eatre\n&gt;&gt;&gt; f.resizable(0,0)\n# Autoriser le redimensionnement d'une fen\u00eatre en largeur\n&gt;&gt;&gt; f.resizable(1,0)\n# Autoriser le redimensionnement d'une fen\u00eatre en hauteur\n&gt;&gt;&gt; f.resizable(0,1)\n# Autoriser le redimensionnement d'une fen\u00eatre dans les 2 directions\n&gt;&gt;&gt; f.resizable(1,1)\n</code></pre> <p>Vous remarquerez que le label reste \u00ab\u00a0statique\u00a0\u00bb  : il ne change pas de taille lorsque la fen\u00eatre est redimensionn\u00e9e. On peut l\u00e0 encore contr\u00f4ler comment le widget se comporte en fonction des modifications subies par la fen\u00eatre. Mais on va d'abord modifier sa couleur de fond afin de rendre ces changements plus visibles.</p> <pre><code># Configuration a posteriori du label : d\u00e9finition d'un couleur de fond\n&gt;&gt;&gt; l.configure(background=\"light blue\")\n# On veut que l'espace vide autour du widget soit \u00e9quitablement r\u00e9parti\n&gt;&gt;&gt; l.pack(expand=1)\n# On veut que notre label occupe l'espace jusqu'aux bords de la fen\u00eatre\n&gt;&gt;&gt; l.pack(fill=\"x\")\n# Essayer de redimensionner la fen\u00eatre horizontalement, puis verticalement\n&gt;&gt;&gt; l.pack(fill=\"y\")\n# R\u00e9essayer de redimensionner la fen\u00eatre\n&gt;&gt;&gt; l.pack(fill=\"both\")\n# Et maintenant ?\n</code></pre>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#detruire-ou-oublier-un-widget","title":"D\u00e9truire ou \u00ab\u00a0oublier\u00a0\u00bb un widget","text":"<p> Oublier un widget est diff\u00e9rent de le d\u00e9truire </p> <p>Lorsqu'on demande \u00e0 Tkinter d'oublier un widget, il cesse d'\u00eatre affich\u00e9, mais on peut le r\u00e9-afficher lorsqu'on le souhaite. On pourrait par exemple oublier le label <code>l</code> avec l'instruction <code>l.forget()</code>.</p> Remarque <p>Attention : ici, la m\u00e9thode <code>forget()</code> est un raccourci pour <code>.pack_forget()</code>. Il faut utiliser la m\u00e9thode <code>grid_forget()</code> lorsqu'on a recours au gestionnaire de placement <code>grid</code>. Une possibilit\u00e9 int\u00e9ressante de ce dernier gestionnaire est l'oubli temporaire : avec la m\u00e9thode <code>grid_remove()</code>, le widget est retir\u00e9 de l'affichage mais toutes ses options sont m\u00e9moris\u00e9es (y compris sa position dans la grille). Il suffit d'un nouvel appel \u00e0 sa m\u00e9thode <code>grid()</code> et il sera r\u00e9affich\u00e9 exactement de la m\u00eame mani\u00e8re qu'avant son oubli (<code>pack</code> ne poss\u00e8de pas d'\u00e9quivalent).</p> <p>Au contraire, d\u00e9truire un widget est d\u00e9finitif (il faut le recr\u00e9er *int\u00e9gralement si l'on veut le \u00ab ressusciter\u00a0\u00bb). On utilise pour cela la m\u00e9thode <code>destroy()</code>, par exemple <code>l.destroy()</code>.</p> Remarque <p>Les m\u00e9thodes <code>pack_slaves()</code> et <code>grid_slaves()</code> renvoient la liste des widget \u00ab\u00a0enfants\u00a0\u00bb  d'un widget donn\u00e9. C'est utile pour les supprimer ou les oublier...</p> Ressources compl\u00e9mentaires <ul> <li>Concernant <code>grid_forget()</code>.</li> <li>Concernant <code>pack_forget()</code>.</li> <li>Discussion sur stackoverflow : \u00ab\u00a0 In Tkinter is there any way to make a widget not visible\u00a0\u00bb.</li> </ul>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#dessiner","title":"Dessiner !","text":""},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#le-widget-canevas","title":"Le widget canevas","text":"<p>Le widget <code>Canvas</code> permet de dessiner : on peut notamment y placer des lignes, des polygones, des images, etc. Pour cr\u00e9er et afficher un canevas, dont le contenu par d\u00e9faut est \u00e9videmment vide, saisir :</p> <p> ATTENTION : dans un canevas, l'axe des ordonn\u00e9es est dirig\u00e9 VERS LE BAS ! </p> Note historique <p>Cette situation n'est pas propre \u00e0 Python / Tkinter. En fait, dans la plupart des langages de programmation :</p> <ul> <li> <p>l'origine \\(O(0\\,;0)\\) du rep\u00e8re est le coin sup\u00e9rieur gauche de l'\u00e9cran (plus exactement : de la fen\u00eatre ou du canevas) ;</p> </li> <li> <p>l'axe des abscisses \\((Ox)\\) est dirig\u00e9 comme on en a l'habitude (de la gauche vers la droite, en suivant le bord sup\u00e9rieur de la fen\u00eatre ou du canevas, comme en math\u00e9matiques) ;</p> </li> <li> <p>mais l'axe des ordonn\u00e9es \\((Oy)\\) est dirig\u00e9 vers le bas, en sens contraire du sens habituel (en suivant le bord gauche de la fen\u00eatre ou du canevas).</p> </li> </ul> <p>Les raisons \u00e0 cette situation qui pourrait vous surprendre sont purement historiques : sur les premiers afficheurs (des moniteurs analogiques, ressemblant aux anciennes t\u00e9l\u00e9visions \u00e0 tube cathodique), le faisceau d'\u00e9lectrons partait du coin sup\u00e9rieur gauche, se d\u00e9pla\u00e7ait vers la droite, puis descendait l\u00e9g\u00e8rement en revenant \u00e0 gauche. La vitesse \u00e0 laquelle les premiers \u00e9crans pouvaient dessiner les caract\u00e8res \u00e9tait assez lente, il \u00e9tait donc pr\u00e9f\u00e9rable de suivre le sens de lecture... occidental (n'oublions pas que l'ordinateur est, pour l'essentiel, une invention anglo-saxonne, m\u00eame si l'histoire de Konrad ZUSE m\u00e9rite d'\u00eatre connue).</p> <p>Cf.  cette question sur StackOverflow ainsi que  cet article de Wikipedia qui traite de l'histoire de la t\u00e9l\u00e9vision analogique.</p> <p>Voici une animation (issue de Wikipedia) montrant comment une image entrelac\u00e9e \u00e9tait affich\u00e9e sur un moniteur analogique.</p> <p></p> <pre><code>&gt;&gt;&gt; c = Canvas(f, background=\"yellow\")\n&gt;&gt;&gt; c.pack()\n# R\u00e9glages a posteriori (on peut aussi d\u00e9cider de faire ces r\u00e9glages lors de\n# la cr\u00e9ation du Canvas, c'est une question de point de vue et de lisibilit\u00e9).\n&gt;&gt;&gt; c.configure(background=\"light green\")\n# Il y a une autre fa\u00e7on de faire (\u00e0 vous de choisir) :\n&gt;&gt;&gt; c['background'] = \"light yellow\"\n&gt;&gt;&gt; c.configure(height=\"800\")\n&gt;&gt;&gt; c.[\"width\"] = 800\n# On peut aussi r\u00e9gler plusieurs param\u00e8tres en une seule instruction :\n&gt;&gt;&gt; c.configure(width=600, height=400)\n</code></pre>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#les-formes-de-base","title":"Les formes de base","text":"<p>Le <code>Canvas</code> de Tkinter conna\u00eet les \u00ab\u00a0objets graphiques\u00a0\u00bb suivants : lignes, rectangles, polygones, ovales, arcs (de cercles), images, textes et sous-fen\u00eatres. Nous allons en exp\u00e9rimenter quelques uns.</p> <pre><code># Cr\u00e9ation d'un rectangle rempli avec la couleur \"light blue\" (bleu  l\u00e9ger) :\n&gt;&gt;&gt; rr = c.create_rectangle(10, 50, 100, 200, fill=\"light blue\")\n# L'affichage du rectangle est imm\u00e9diat (l'objet \u00ab canevas \u00bb est directement\n# modifi\u00e9 \u00ab en place \u00bb) !\n# Noter que rr est un simple entier, qui rep\u00e8re l'objet du canevas.\n# Gr\u00e2ce \u00e0 ce num\u00e9ro, on peut retrouver l'objet graphique et le modifier :\n&gt;&gt;&gt; c.itemconfigure(rr, fill=\"red\")\n# (Re)Trouver le type d'un objet et la valeur d'un de ses param\u00e8tres :\n&gt;&gt;&gt; c.type(rr)\n'rectangle'\n# L'objet graphique rr est d\u00e9sormais rempli en rouge (rr pour rectangle rouge !).\n&gt;&gt;&gt; c.itemcget(rr, \"fill\") \n# Cr\u00e9ation d'autres figures, par exemple un ovale (sert aussi pour les cercles) :\n&gt;&gt;&gt; o = c.create_oval(50, 100, 250, 150, fill=\"yellow\")\n&gt;&gt;&gt; rb = c.create_rectangle(20, 60, 150, 210, fill=\"blue\")\n&gt;&gt;&gt; rv = c.create_rectangle(250, 250, 100, 100, fill=\"green\")\n&gt;&gt;&gt; rn = c.create_rectangle(0, 500, 100, 100, fill=\"black\")\n</code></pre> <p> Attention </p> <p>Il est vraiment important de comprendre la n\u00e9cessit\u00e9 de m\u00e9moriser la  valeur retourn\u00e9e par la m\u00e9thode construisant chaque \u00e9l\u00e9ment graphique d'un <code>Canvas</code>. En effet, si on ne le fait pas, il sera impossible de modifier ult\u00e9rieurement cet \u00e9l\u00e9ment graphique (par exemple pour le d\u00e9placer) !</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#gerer-la-superposition-delements-graphiques","title":"G\u00e9rer la superposition d'\u00e9l\u00e9ments graphiques","text":"<p>Mais pourquoi l'ovale n'appara\u00eet-il pas ? Parce que les formes se recouvrent. On peut donc g\u00e9rer la \u00ab\u00a0profondeur d'affichage\u00a0\u00bb, afin de provoquer ou d'\u00e9viter un chevauchement, et permettre ainsi le passage au \u00ab\u00a0plan sup\u00e9rieur\u00a0\u00bb ou au \u00ab\u00a0plan inf\u00e9rieur\u00a0\u00bb d'un \u00e9l\u00e9ment graphique.</p> <p>Cela se fait \u00e0 l'aide des m\u00e9thodes <code>tag_lower</code> et <code>tag_raise</code>. Par exemple :</p> <pre><code>&gt;&gt;&gt; c.tag_raise(o)\n&gt;&gt;&gt; c.tag_lower(rn)\n</code></pre> Remarque <p>Ces m\u00e9thodes peuvent \u00e9galement prendre en argument un tag (une cha\u00eene de caract\u00e8res identifiant un ou plusieurs \u00e9l\u00e9ments graphiques). Vous aurez un peu plus de de d\u00e9tails sur ce sujet dans la section \u00ab\u00a0Pour aller plus loin : les tags\u00a0\u00bb. Quant \u00e0 ces m\u00e9thodes en particulier, suivez ce lien pour en apprendre davantage. Sachez qu'on peut, entre autres choses, positionner un \u00e9l\u00e9ment graphique relativement \u00e0 un autre...</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#deplacements-trouver-et-alterer-les-coordonnees-dun-objet-du-canevas","title":"D\u00e9placements : trouver et alt\u00e9rer les coordonn\u00e9es d'un objet du canevas","text":"<p>Une fois un \u00e9l\u00e9ment graphique cr\u00e9\u00e9 dans le <code>Canvas</code> de Tkinter et son identifiant obligatoirement m\u00e9moris\u00e9 (d'une fa\u00e7on ou d'une autre), on peut y r\u00e9acc\u00e9der afin de le faire \u00e9voluer. On peut ainsi modifier n'importe laquelle de ses caract\u00e9ristiques : couleur, poisition, forme, etc.</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#obtenir-les-coordonnees-dun-element-graphique-du-canvas","title":"Obtenir les coordonn\u00e9es d'un \u00e9l\u00e9ment graphique du <code>Canvas</code>","text":"<p>On utilise pour cela la m\u00e9thode <code>coords()</code> du <code>Canvas</code> :</p> <pre><code># Trouver les coordonn\u00e9es d'un objet d'un canevas :\n&gt;&gt;&gt; c.coords(rr)\n[10.0, 50.0, 100.0, 200.0]      # Une LISTE est renvoy\u00e9e.\n</code></pre>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#deplacer-un-element-graphique-sur-un-canvas","title":"D\u00e9placer un \u00e9l\u00e9ment graphique sur un <code>Canvas</code>","text":"<p>Il y a deux fa\u00e7ons d'y parvenir.</p> <ul> <li> <p>La premi\u00e8re, recommand\u00e9e, est relative \u00e0 la position actuelle de l'objet graphique. Cela signifie que l'on pr\u00e9cise le d\u00e9placement \u00e0 partir de la position actuelle de cet objet. D'un point de vue math\u00e9matique, le d\u00e9placement est alors une translation, d\u00e9finie par les coordonn\u00e9es (abscisses et ordonn\u00e9es) du vecteur associ\u00e9 .</p> <pre><code># D\u00e9placement d'un objet par d\u00e9calage \u00e0 partie de sa position actuelle :\n&gt;&gt;&gt; c.move(rr, 200, 0)        # D\u00e9calage en abscisse en premier, ici 200...\n&gt;&gt;&gt; c.move(rr, 0, 100)        # ...d\u00e9calage en ordonn\u00e9e ensuite, ici 100.\n&gt;&gt;&gt; c.move(rr, -10, -10)      # On peut bien s\u00fbr translater en oblique !\n</code></pre> Remarque <p>Cette approche a l'avantage d'\u00e9viter tout risque de modifier par inadvertance les proportions de l'objet. L'alternative, pr\u00e9sent\u00e9e juste apr\u00e8s, est de changer les sp\u00e9cifications de l'objet, ce qui peut impliquer, par exemple, de modifier l'ensemble de ses coorodonn\u00e9es. Si cela est fait sur la base d'un calcul, et que ce calcul est faux, alors les proportions de l'objet seront modifi\u00e9es, ce qui n'est pas n\u00e9cessairement souhait\u00e9  !</p> </li> <li> <p>L'autre approche consiste \u00e0 modifier l'ensemble des coordonn\u00e9es d\u00e9finissant l'\u00e9l\u00e9ment graphique. On emploie pour cela la m\u00e9thode <code>coords()</code> :</p> <pre><code># Modifier les coordonn\u00e9es d'un objet d'un canevas (2 approches possibles).\n# Notez que la g\u00e9om\u00e9trie de l'objet peut changer si l'on n'y prend pas garde !\n&gt;&gt;&gt; c.coords(o, 200, 300, 250, 350)\n&gt;&gt;&gt;[]                                   # La valeur de retour est une liste vide.\n&gt;&gt;&gt; c.coords(o, (200, 50, 250, 100))    # Ici on passe un TUPLE de coordonn\u00e9es.\n&gt;&gt;&gt;[]                                   # Idem pour la valeur de retour...\n# Modification explicite du param\u00e9trage de l'\u00e9l\u00e9ment graphique rr :\n&gt;&gt;&gt; c.coords(rr, 20, 50, 100, 150)\n</code></pre> Remarques <ul> <li> <p>Vous aurez not\u00e9 que la deuxi\u00e8me modification (avec le tuple) a chang\u00e9 l'aspect de l'objet d\u00e9sign\u00e9 par <code>o</code> (d'ovale, initialement, il est devenu circulaire). C'est l'illustration de ce qui \u00e9tait indiqu\u00e9 juste avant cette section...</p> </li> <li> <p>La m\u00e9thode <code>coords()</code> du <code>Canvas</code>, qui peut prendre en param\u00e8tres soit une succession de coordonn\u00e9es soit des coordonn\u00e9es explicitement group\u00e9es dans un <code>tuple</code> renvoie, lorsqu'elle n'est appel\u00e9e qu'avec le num\u00e9ro identifiant un \u00e9l\u00e9ment graphique, une liste des coordonn\u00e9es de cet \u00e9l\u00e9ment :</p> <pre><code>&gt;&gt;&gt; c.coords(rr)\n[20.0, 50.0, 100.0, 150.0]\n</code></pre> <p>Notez \u00e9galement que les coordonn\u00e9es ont beau \u00eatre donn\u00e9es enti\u00e8res, Tkinter les transtype en <code>&lt;float&gt;</code>.</p> <p>Il y a donc certaines incoh\u00e9rences ici, dans la logique de Tkinter...</p> </li> </ul> </li> </ul>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#detecter-des-chevauchements","title":"D\u00e9tecter des chevauchements","text":"<p>Cette fonction est tr\u00e8s utile, par exemple pour d\u00e9tecter les collisions dans un jeu. Elle est li\u00e9e \u00e0 la notion de \u00ab\u00a0 bounding box\u00a0\u00bb.</p> <p><code>find_overlapping</code> signifie litt\u00e9ralement \u00ab\u00a0trouve ce qui recouvre\u00a0\u00bb. On donne en argument \u00e0 cette m\u00e9thode les coordonn\u00e9es d'un rectangle qui correspond \u00e0 la r\u00e9gion \u00e9tudi\u00e9e. Elle renvoie un tuple.</p> <ul> <li> <p>Si le tuple est vide, alors la zone observ\u00e9e est vide : aucun \u00e9l\u00e9ment graphique n'y est pr\u00e9sent.</p> </li> <li> <p>Si un seul \u00e9l\u00e9ment est retourn\u00e9 dans le tuple, c'est qu'il n'y a pas de chevauchement (un seul \u00e9l\u00e9ment graphique figure dans la zone).</p> </li> <li> <p>Si le tuple compte 2 \u00e9l\u00e9ments ou plus, il y a bel et bien un chevauchement (mais uniquement pour ce qui concerne les bounding boxes, cf. remarque plus bas) : deux \u00e9l\u00e9ments graphiques (ou plus) sont situ\u00e9s dans la m\u00eame zone rectangulaire.</p> </li> </ul> <p>Voyez ce que donnent les instructions suivantes !</p> <pre><code>&gt;&gt;&gt; c.find_overlapping(0,0,100,100)\n&gt;&gt;&gt; c.find_overlapping(0,0,200,100)\n&gt;&gt;&gt; c.find_overlapping(200,200,250,250)\n&gt;&gt;&gt; c.find_overlapping(300,300,350,350)\n</code></pre> Remarque <p>Attention : la zone concern\u00e9e est rectangulaire, ainsi deux cercles pourront \u00eatre consid\u00e9r\u00e9s comme se chevauchant car le carr\u00e9 dans lequel ils sont inscrit se recouvrent. Pourtant, \u00e0 l'\u00e9cran, les cercles ne se toucheront en aucun cas !</p> <p></p> <p>Bienvenue dans le monde merveilleux de la d\u00e9tection des collisions...</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#pour-aller-plus-loin-les-tags","title":"Pour aller plus loin : les tags","text":"<p>Un tag est une \u00e9tiquette. \u00c9tiqueter les \u00e9l\u00e9ments graphiques d'un <code>Canvas</code> sert \u00e0 les regrouper sous une m\u00eame \u00e9tiquette. Par exemple, dans le contexte d'un jeu, on pourra utiliser plusieurs \u00e9l\u00e9ments graphiques pour d\u00e9finir un objet du d\u00e9cor. Si, durant le d\u00e9roulement du jeu, il est n\u00e9cessaire de modifier cet objet, utiliser le tag correspondant simplifiera grandement les choses : il sera alors facile de modifier l'ensemble des \u00e9l\u00e9ments associ\u00e9s (exemple : modifier la couleur d'un objet du d\u00e9cor, car on a chang\u00e9 d'univers et, m\u00eame si les \u00e9l\u00e9ments du d\u00e9cor sont identiques, l'ambiance graphique est diff\u00e9rente).</p> <p>Un tag est une simple cha\u00eene de caract\u00e8res) : un \u00e9l\u00e9ment graphique du <code>Canvas</code> peut avoir plusieurs tags diff\u00e9rents, et un m\u00eame tag peut \u00eatre associ\u00e9 \u00e0 plusieurs \u00e9l\u00e9ments graphiques diff\u00e9rents.</p> <p>Pour en savoir plus sur ce sujet, vous pourrez \u00e9tudier la m\u00e9thode <code>tag_bind()</code>.</p> <p>Notez que trouver un \u00e9l\u00e9ment graphique \u00e0 partir d'un tag est tr\u00e8s simple : partout o\u00f9 un identifiant d'\u00e9l\u00e9ment est admis comme param\u00e8tre d'une m\u00e9thode, vous pouvez le remplacer par un tag !</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#divers","title":"Divers","text":"<p>Voici quelques m\u00e9thodes du <code>Canvas</code> qu'il peut \u00eatre utile de conna\u00eetre :</p> <pre><code>  # Liste de tous les objets graphiques du canevas :\n  &gt;&gt;&gt; c.find_all()\n  # D\u00e9truire un objet graphique :\n  &gt;&gt;&gt; c.delete(3)\n  # Forcer la r\u00e9actualisation du canevas. Peut \u00eatre utile pour des questions de\n  # performances, et donc de fluidit\u00e9 d'affichage (vous pourrez lire \u00e0 ce sujet\n  # http://effbot.org/tkinterbook/canvas.htm#performance-issues)\n  &gt;&gt;&gt; c.update()\n</code></pre>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#des-exemples-concrets","title":"Des exemples concrets","text":""},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#realiser-une-animation-avec-la-methode-after","title":"R\u00e9aliser une animation avec la m\u00e9thode <code>after</code>","text":"<p>On va ici r\u00e9aliser une animation, dans laquelle un \u00e9l\u00e9ment graphique rebondira ind\u00e9finiment sur les bords du canevas. \u00c7a n'est pas tr\u00e8s utile, mais c'est rigolo  ! Et puis cela va nous amener \u00e0 rencontrer la m\u00e9thode <code>after</code> des fen\u00eatres Tkinter, qui pourra ensuite permettre de cr\u00e9er des petits jeux \u00a0!</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#premiere-approche-non-optimale","title":"Premi\u00e8re approche non-optimale","text":"<p>Toujours dans la console Python interactive que vous utilisez depuis le d\u00e9but de ce document, saisissez le code ci-dessous.</p> <pre><code>&gt;&gt;&gt; from random import randrange as rnd # Pr\u00e9f\u00e9rer randrange \u00e0 randint !\n&gt;&gt;&gt; from time import sleep              # Voir plus loin l'utilit\u00e9 !\n&gt;&gt;&gt; Dx, Dy = rnd(1, 21), rnd(1, 21)     # Vecteur d\u00e9placement al\u00e9atoire.\n&gt;&gt;&gt; while True:                         # On d\u00e9marre une boucle infinie...\n      c.move(o, Dx, Dy)\n      if c.coords(o)[0] &lt;= 0 or c.coords(o)[2] &gt;= c.winfo_width():\n          Dx *= -1\n      if c.coords(o)[1] &lt;= 0 or c.coords(o)[3] &gt;= c.winfo_height():\n          Dy *= -1\n      c.update()    # N\u00e9cessaire (la boucle principale de la GUI n'est pas lanc\u00e9e)\n      sleep(0.05)   # Utile si votre ordinateur est tr\u00e8s performant !\n</code></pre> <p>Voici ce que vous devriez observer : </p> <p>Vous devriez pouvoir interrompre la boucle infinie en pressant simultan\u00e9ment les touches Ctrl+C.</p> Explications d\u00e9taill\u00e9es du code pr\u00e9c\u00e9dent <ul> <li> <p>On commence par g\u00e9n\u00e9rer au hasard les coordonn\u00e9es du vecteur selon lequel l'\u00e9l\u00e9ment graphique <code>o</code> du <code>Canvas</code> se d\u00e9placera.</p> </li> <li> <p>On lance une boucle infinie.</p> <ul> <li> <p>Dans cette boucle, l'\u00e9l\u00e9ment graphique <code>o</code> est d\u00e9plac\u00e9 (de fa\u00e7on relative). Puis ses (nouvelles) coordonn\u00e9es sont \u00e9tudi\u00e9es, afin de faire en sorte que le rebond advienne lorsqu'il vient \u00e0 toucher les bords du canevas.</p> </li> <li> <p>Si l'abscisse de la \u00ab\u00a0limite gauche\u00a0\u00bb de <code>o</code> devient n\u00e9gative, ou que l'abscisse de la \u00ab\u00a0limite droite\u00a0\u00bb de <code>o</code> devient sup\u00e9rieure \u00e0 la largeur du canevas, le d\u00e9placement selon l'axe des abscisses change de signe (cela revient \u00e0 changer l'abscisse du vecteur d\u00e9placement en son oppos\u00e9).</p> </li> <li> <p>De m\u00eame, si l'ordonn\u00e9e de la \u00ab\u00a0limite sup\u00e9rieure visuelle\u00a0\u00bb de <code>o</code> devient n\u00e9gative, ou que l'ordonn\u00e9e de la \u00ab\u00a0limite inf\u00e9rieure visuelle\u00a0\u00bb de <code>o</code> devient sup\u00e9rieure \u00e0 la hauteur du canevas, le d\u00e9placement selon l'axe des ordonn\u00e9es change de signe (cela revient \u00e0 changer l'ordonn\u00e9e du vecteur d\u00e9placement en son oppos\u00e9). Remarque : la phrase pr\u00e9c\u00e9dente peut para\u00eetre surprenante si l'on a d\u00e9j\u00e0 oubli\u00e9 que l'axe des ordonn\u00e9es, en programmation, est souvent dirig\u00e9 vers le bas !</p> </li> </ul> </li> </ul> Remarques <ul> <li> <p>Sans l'instruction <code>sleep()</code>, le r\u00e9sultat serait ex\u00e9crable ! Le d\u00e9placement s'effectuerait aussi vite que possible, et l'affichage serait alors cahotique et saccad\u00e9...</p> </li> <li> <p>Lire  cette question sur stackoverflow pour une discussion concernant <code>c.winfo_width()</code> versus <code>c['width']</code>, dans l'objectif d'obtenir la taille d'un widget.</p> </li> <li> <p>Lire  cette autre question sur stackoverflow pour en apprendre plus sur les questions li\u00e9es au redimensionnement du canevas, pour s'adapter au redimensionnement de la fen\u00eatre parente.</p> </li> </ul>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#animer-mieux-avec-la-methode-after","title":"Animer mieux avec la m\u00e9thode <code>after()</code>","text":"<p>Une fa\u00e7on bien plus adapt\u00e9e de r\u00e9p\u00e9ter le d\u00e9placement de fa\u00e7on r\u00e9guli\u00e8re et pas trop fr\u00e9quente est d'utiliser une fonctionnalit\u00e9 native de Tkinter : la m\u00e9thode <code>after()</code> de la fen\u00eatre principale.</p> <p>On lui passe en param\u00e8tre un d\u00e9lai, exprim\u00e9 en millisecondes, ainsi qu'une fonction, qui sera automatiquement ex\u00e9cut\u00e9e pass\u00e9 ce d\u00e9lai. Pour que l'op\u00e9ration se r\u00e9p\u00e8te, la fonction concern\u00e9e doit absolument d\u00e9clencher \u00e0 nouveau un appel \u00e0 la m\u00e9thode <code>after()</code>.</p> <p>Voici un exemple concret (l'animation durera quelques secondes). Notez \u00e9galement la m\u00e9thode <code>after_cancel()</code> qui permet d'interrompre le flux des appels \u00e0 la fonction <code>bouge</code>, entretenus par la m\u00e9thode <code>after()</code>.</p> <pre><code>&gt;&gt;&gt; mvt = 0\n&gt;&gt;&gt; i = 0\n&gt;&gt;&gt; def bouge():\n      global i, mvt, Dx, Dy     # Essayez sans cette ligne, pour voir...\n      c.move(o, Dx, Dy)\n      if c.coords(o)[0] &lt;= 0 or c.coords(o)[2] &gt;= c.winfo_width():\n          Dx *= -1\n      if c.coords(o)[1] &lt;= 0 or c.coords(o)[3] &gt;= c.winfo_height():\n          Dy *= -1\n      c.update()                # Toujours n\u00e9cessaire...\n      mvt = f.after(20, bouge)  # Un d\u00e9lai de 20 ms implique 50 animations / s\n      i += 1\n      if i &gt;= 200:\n          f.after_cancel(mvt)\n\n&gt;&gt;&gt; bouge()\n&gt;&gt;&gt; print(mvt, i)\n</code></pre> D\u00e9tails sur la m\u00e9thode <code>after_cancel()</code> <p>L'arr\u00eat de l'animation est provoqu\u00e9 par l'appel de la m\u00e9thode <code>after_cancel()</code>, \u00e0 laquelle on passe en param\u00e8tre le num\u00e9ro du dernier \u00ab\u00a0job\u00a0\u00bb  d'animation (ici via la variable <code>mvt</code>). Il est donc essentiel de conserver cette information, constitu\u00e9e d'une cha\u00eene de la forme <code>\"after#1234\"</code>. Elle est obtenue lors de l'appel de la m\u00e9thode <code>after()</code>.</p> Note importante : les variables globales, C'EST LE MAL ! <p>Vous avez constat\u00e9 la pr\u00e9sence du mot-clef <code>global</code>, au tout d\u00e9but du code de la fonction <code>bouge()</code>. Il est suivi du nom des variables <code>i</code>, <code>mvt</code>, <code>Dx</code> et <code>Dy</code>. En effet, ces variables sont modifi\u00e9es par la fonction. Mais celle-ci \u00e9tant automatiquement r\u00e9-ex\u00e9cut\u00e9e par la fen\u00eatre <code>f</code> apr\u00e8s 20 millisecondes d'attente, il faut trouver un moyen de garder une trace des modifications des valeurs de ces variables.</p> <p>Sans indication sp\u00e9cifique, une variable cr\u00e9\u00e9e ou modifi\u00e9e au sein d'une fonction est locale. Cela signifie qu'elle n'a d'existence que tant que la fonction est en cours d'ex\u00e9cution. Sa valeurs sera perdue lorsque l'ex\u00e9cution de la fonction prendra fin (\u00e0 moins qu'elle ne soit renvoy\u00e9e par la fonction, par l'instruction <code>return</code>).</p> <p>Le fait de d\u00e9clarer les variables globales permet que les modifications r\u00e9alis\u00e9es au sein de la fonction <code>bouge</code> soient r\u00e9percut\u00e9es \u00e0 l'ext\u00e9rieur de son espace de noms (la zone de m\u00e9moire r\u00e9serv\u00e9e \u00e0 la fonction, que Python lui octroie au moment de son ex\u00e9cution).</p> <p>Le recours aux variables globales est consid\u00e9r\u00e9e comme peu optimal car source d'erreurs (difficile, parfois, de savoir quelle fonction modifie quelle variable). Il faut donc absolument \u00e9viter d'avoir recours aux variables globales ! Une bonne strat\u00e9gie de contournement repose sur l'utilisation d'un dictionnaire Python, qui garde la trace des valeurs importantes. Cette structure sophistiqu\u00e9e peut, en tant qu'objet Python, \u00eatre naturellement modifi\u00e9e par une fonction.</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#un-exemple-dans-les-regles-de-lart","title":"Un exemple \u00ab\u00a0dans les r\u00e8gles de l'art\u00a0\u00bb","text":"<p>Il est temps de vous proposer un script complet, avec la bonne fa\u00e7on de g\u00e9rer les variables sans les d\u00e9clarer <code>global</code> ! Enregistrez le code ci-dessous dans un fichier nomm\u00e9 <code>animation.py</code>.</p> <pre><code># coding: utf8\nfrom tkinter import *\nfrom random import randrange as rnd\n\n# Dictionnaire rassemblant les param\u00e8tres essentiels du \u00ab jeu \u00bb. Il peut\n# naturellement \u00eatre modifi\u00e9 depuis l'int\u00e9rieur de la fonction 'bouge'\n# d\u00e9finie un peu plus bas...\nconfig = {\"Dx\": rnd(1, 21), \"Dy\": rnd(1, 21), \"animation\": \"\"}\n\ndef bouge():\n    \"\"\"Fonction g\u00e9rant les animations\"\"\"\n    Dx = config[\"Dx\"]\n    Dy = config[\"Dy\"]\n    c.move(o, Dx, Dy)\n    if c.coords(o)[0] &lt;= 0 or c.coords(o)[2] &gt;= c.winfo_width():\n        config[\"Dx\"] = -Dx\n    if c.coords(o)[1] &lt;= 0 or c.coords(o)[3] &gt;= c.winfo_height():\n        config[\"Dy\"] = -Dy\n    animation = f.after(20, bouge)              # D\u00e9lai de 20 ms, soit 50 FPS...\n    c.itemconfigure(t, text=\"Animation : {}\".format(animation))\n    no_animation = int(animation.split(\"#\")[1]) # Extrait l'entier de 'after#123'.\n    config[\"animation\"] = animation\n    if no_animation &gt;= 400:\n        f.after_cancel(animation)               # Arr\u00eat de l'animation\n\n# Construction de l'interface graphique (minimaliste).\nf = Tk()\nf.title(\"Animations avec le canevas de Tkinter\")\n# Le canevas\nc = Canvas(f, background=\"light yellow\", width=800, height=600)\nc.pack()\n# Les \u00e9l\u00e9ments graphiques du canevas. Nouveaut\u00e9 : un texte !\no = c.create_oval(200, 50, 250, 100, fill=\"yellow\")\nt = c.create_text(10, 10, text=\"Animation : stopp\u00e9e\", anchor='nw')\n\nbouge()         # On doit appeler la fonction 'bouge()' pour initier l'animation !\nf.mainloop()    # D\u00e9marrage de la boucle principale de la fen\u00eatre.\n</code></pre> Remarques <ul> <li> <p>Notez ligne 21 le d\u00e9coupage de la cha\u00eene <code>after#xxx...</code> sur le caract\u00e8re <code>#</code> \u00e0 l'aide de la m\u00e9thode <code>split()</code> des cha\u00eenes de caract\u00e8res, afin de r\u00e9cup\u00e9rer la partie <code>xxx...</code> qui le suit, puis la conversion de la cha\u00eene ainsi obtenue en entier avec l'instructin de transtypage <code>int()</code>.</p> </li> <li> <p>Notez, lignes 16, 18 et 22 la modification du dictionnaire <code>config</code> depuis le corps de la fonction <code>bouge()</code>, car c'est un objet Python. La syntaxe <code>config[clef] = valeur</code> fait en r\u00e9alit\u00e9 appel \u00e0 une m\u00e9thode de l'objet <code>config</code>, qui re\u00e7oit <code>valeur</code> en argument, et qui modifie sans difficult\u00e9 <code>config</code> car c'est en quelque sorte l'objet lui-m\u00eame qui se modifie.</p> </li> <li> <p>Notez l'inutilit\u00e9 de forcer syst\u00e9matiquement la mise \u00e0 jour du canevas avec l'instruction <code>c.update()</code>. Tkinter s'occupe du rafra\u00eechissement de l'affichage au travers de la boucle principale <code>f.mainloop()</code>.</p> </li> </ul>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#un-point-important-a-propos-de-after","title":"Un point important \u00e0 propos de <code>after()</code>","text":"<p>Il est fondamental de comprendre que la m\u00e9thode <code>after()</code> permet \u00e0 Tkinter d'appeler automatiquement (ici toutes les 20 ms, soit 50 fois par seconde), une fonction qu'on lui donne en argument.</p> <p>Attention : on passe \u00e0 la m\u00e9thode <code>after()</code> le nom de la fonction !</p> <p>Il faut bien distinguer <code>fonction</code>, qui est un objet Python de type <code>&lt;function&gt;</code>, et <code>fonction()</code> (avec des parenth\u00e8ses et \u00e9ventuellement des param\u00e8tres entre ces parenth\u00e8ses), qui d\u00e9clenche l'ex\u00e9cution de ladite fonction, et qui d\u00e9signe donc la valeur de retour ainsi produite. Cette valeur de retour peut \u00eatre n'importe quel objet Python, \u00ab\u00a0rien\u00a0\u00bb y compris (c'est-\u00e0-dire <code>None</code>)...</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#attacher-un-evenement-a-un-widget-pour-lancer-lanimation","title":"Attacher un \u00e9v\u00e8nement \u00e0 un widget pour lancer l'animation","text":"<p>On va maintenant voir comment cr\u00e9er un bouton qui, lorsqu'on cliquera dessus, d\u00e9clenchera le mouvement de l'\u00e9l\u00e9ment graphique. On dira qu'on attache une fonction \u00e0 un \u00e9v\u00e8nement.</p> <p>Vous allez devoir modifier le script <code>animation.py</code> de sorte \u00e0 ce qu'il corresponde au code ci-dessous.</p> <pre><code># coding: utf8\nfrom tkinter import *\nfrom random import randrange as rnd\n\n# Dictionnaire rassemblant les param\u00e8tres essentiels du \u00ab jeu \u00bb.\nconfig = {\"Dx\": rnd(1, 21), \"Dy\": rnd(1, 21), \"animation\": \"\"}\n\ndef bouge(event=None):\n    \"\"\"Fonction g\u00e9rant les animations\"\"\"\n    Dx = config[\"Dx\"]\n    Dy = config[\"Dy\"]\n    c.move(o, Dx, Dy)\n    if c.coords(o)[0] &lt;= 0 or c.coords(o)[2] &gt;= Xmax:\n        config[\"Dx\"] = -Dx\n    if c.coords(o)[1] &lt;= 0 or c.coords(o)[3] &gt;= Ymax:\n        config[\"Dy\"] = -Dy\n    animation = f.after(20, bouge)              # D\u00e9lai de 20 ms, soit 50 FPS...\n    c.itemconfigure(t, text=\"Animation : {}\".format(animation))\n    no_animation = int(animation.split(\"#\")[1]) # Extrait l'entier de 'after#123'.\n    config[\"animation\"] = animation\n\n# Construction de l'interface graphique (minimaliste).\nf = Tk()\nf.title(\"Animations avec le canevas de Tkinter\")\n# Le canevas\nc = Canvas(f, background=\"light yellow\", width=800, height=600)\nc.configure(borderwidth=5, relief=RIDGE, highlightthickness=2)\nc.pack(padx=10, pady=10)\n# Les \u00e9l\u00e9ments graphiques du canevas. Nouveaut\u00e9 : un texte !\no = c.create_oval(200, 50, 250, 100, fill=\"yellow\")\nt = c.create_text(10, 10, text=\"Animation : stopp\u00e9e\", anchor='nw')\n# Un bouton\nb = Button(f, text='Bouge de l\u00e0 !')\nb.pack()\nb.bind('&lt;Button-1&gt;', bouge)     # '&lt;Button-1&gt;' est le bouton gauche de la souris\n\nc.update() # Indispensable, sinon Xmax et Ymax (ci-dessous) vaudront 1 chacun !\nXmax, Ymax = c.winfo_width(), c.winfo_height()\n\nf.mainloop()    # D\u00e9marrage de la boucle principale de la fen\u00eatre.\n</code></pre> Remarques <p>Notez le param\u00e8tre <code>event</code> qu'attend la fonction <code>bouge</code>, et qui re\u00e7oit la valeur <code>None</code> si aucun \u00e9v\u00e8nement n'est pass\u00e9 \u00e0 la fonction par l'objet graphique auquel elle est attach\u00e9e. Ici, un tel \u00e9v\u00e8nement n'est pas g\u00e9n\u00e9r\u00e9 par l'objet <code>Button</code>, on pourrait donc simplifer la d\u00e9finition de la fonction en \u00e9liminant le param\u00e8tre. Mais certains objets Tkinter, auxquels on a attach\u00e9 une fonction, g\u00e9n\u00e8rent et passent des objets \u00e9v\u00e8nements \u00e0 leur fonction associ\u00e9e (voir le paragraphe suivant). Et il peut aussi arriver qu'on souhaite associer la m\u00eame fonction \u00e0 deux objets Tkinter, l'un g\u00e9n\u00e9rant un \u00e9v\u00e8nement et l'autre non. Prendre l'habitude de d\u00e9finir une fonction qui doit \u00eatre associ\u00e9e \u00e0 un objet Tkinter en lui donnant syst\u00e9matiquement comme param\u00e8tre <code>event=None</code> est donc une bonne habitude (il faut ensuite tester dans le code de la fonction la valeur de <code>event</code>, pour savoir si elle vaut <code>None</code> ou pas).</p> Probl\u00e8me ! <p>Cliquez \u00e0 nouveau sur le bouton \u00ab\u00a0Bouge de l\u00e0 !\u00a0\u00bb : vous observerez que le mouvement s'acc\u00e9l\u00e8re. Cliquez encore : il acc\u00e9l\u00e8re davantage. Et ainsi de suite.</p> <p>Pourquoi ?</p> <p>Parce que vous d\u00e9clenchez un nouvel appel \u00e0 la fonction <code>bouge</code> : au lieu d'\u00eatre appel\u00e9e une fois toutes les 20 ms, elle sera alors appel\u00e9e deux fois, et ces appels seront \u00e9galement r\u00e9p\u00e9t\u00e9s toutes les 20\u00a0ms. Et ainsi de suite : plus vous cliquez, plus vous lancez de \u00ab\u00a0cycles\u00a0\u00bb d'appels \u00e0 la fonction <code>bouge</code>, d'o\u00f9 l'acc\u00e9l\u00e9ration observ\u00e9e, puisque la balle bouge, non pas plus vite, mais plus souvent... ce qui au final revient au m\u00eame\u00a0!</p> Exercices <ol> <li> <p>Modifier le code pr\u00e9c\u00e9dent pour ajouter \u00e0 l'interface un second bouton permettant de stopper le mouvement. Rappel : il faut recourir \u00e0 la m\u00e9thode <code>after_cancel()</code>.</p> </li> <li> <p>Modifier le code d'origine (pas celui cr\u00e9\u00e9 \u00e0 l'exercice pr\u00e9c\u00e9dent) de sorte \u00e0 ce qu'une touche, par exemple la touche Enter ou la barre d'espace, d\u00e9clenche ou stoppe le mouvement (selon la situation avant l'appui). Vous consulterez avec profit la documentation de Tkinter consacr\u00e9e aux \u00e9v\u00e8nements.</p> </li> <li> <p>Comment d\u00e9clencher ou arr\u00eater le mouvement aussi bien \u00e0 la souris qu'au clavier ?</p> </li> <li> <p>Comment affecter une action aux autres bouton de la souris ?</p> </li> </ol>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#dessiner-a-la-souris","title":"Dessiner \u00e0 la souris","text":"<p>Maintenez enfonc\u00e9 le bouton gauche de la souris, et d\u00e9placez-l\u00e0 pour dessiner !</p> <p></p> <pre><code># coding: utf8\nfrom tkinter import *\n\nlargeur_canevas = 500\nhauteur_canevas = 150\n\ndef dessine(event):\n   rouge_orange = \"#ff6042\"\n   x1, y1 = event.x - 1, event.y - 1\n   x2, y2 = event.x + 1, event.y + 1\n   c.create_oval(x1, y1, x2, y2, fill=rouge_orange, outline=rouge_orange)\n\nf = Tk()\nf.title(\"Dessinons en pointill\u00e9\")\nc = Canvas(f, width=largeur_canevas, height=hauteur_canevas)\nc.pack(expand=YES, fill=BOTH)\nc.bind('&lt;B1-Motion&gt;', dessine) # Autre possibilit\u00e9 : f.bind(...)\n\nmessage = Label(f, text=\"Cliquer et d\u00e9placer la souris pour dessiner\")\nmessage.pack(side=BOTTOM)\n\nf.mainloop()\n</code></pre> Explications <p>On observe deux nouveaut\u00e9s ici :</p> <ul> <li> <p>on attache la fonction <code>dessine()</code> \u00e0 l'\u00e9v\u00e8nement <code>&lt;B1-Motion&gt;</code>, qui correspond au fait de cliquer sur le bouton gauche de la souris, de le laisser enfonc\u00e9, et de d\u00e9placer la souris ;</p> </li> <li> <p>le fait d'associer une fonction \u00e0 un bouton de la souris g\u00e9n\u00e8re automatiquement un \u00e9v\u00e8nement, pass\u00e9 en argument \u00e0 la fonction <code>dessine()</code>. Cet \u00e9v\u00e8nement comporte en lui quantit\u00e9 d'informations utiles, \u00e0 commencer par les coordonn\u00e9es du point en lequel se trouvait l'extr\u00e9mit\u00e9 du pointeur de la souris au moment du clic : <code>event.x</code> et <code>event.y</code>.</p> </li> </ul> <p>Une fois ces informations obtenues, rien de plus simple que de cr\u00e9er un cercle de petite taille et de le faire appara\u00eetre sur le canevas ! Notez qu'ici, on ne m\u00e9morise pas l'\u00e9l\u00e9ment graphique ainsi cr\u00e9\u00e9 : il sera donc impossible de le faire \u00e9voluer (il serait pertinent de le faire si l'on voulait pouvoir annuler tout ou partie du trac\u00e9).</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#une-calculatrice-simplette","title":"Une calculatrice simple(tte)","text":"<p>Il s'agit d'un petit programme tout simple. Les fonctions math\u00e9matiques usuelles sont disponibles, la syntaxe est celle du module math.</p> <p></p> <pre><code># coding: utf8\nfrom tkinter import *\nfrom math import *\n\ndef evaluer(event):\n    resultat.configure(text=\"R\u00e9sultat : {}\".format(eval(saisie.get())))\n\nf = Tk()\nf.title(\"Calculette\")\nsaisie = Entry(f)\nsaisie.bind(\"&lt;Return&gt;\", evaluer)\nresultat = Label(f)\nsaisie.pack()\nresultat.pack()\n\nf.mainloop()\n</code></pre> Explications <p>Vous d\u00e9couvrez ici le widget <code>Entry</code>, qui correspond \u00e0 une zone de saisie. On r\u00e9cup\u00e8re les informations entr\u00e9es au clavier dans ce widget \u00e0 l'aide de sa m\u00e9thode <code>get()</code>, dont le r\u00e9sultat est une cha\u00eene de caract\u00e8res.</p>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#les-variables-tkinter","title":"Les variables Tkinter","text":"<p>Le code pr\u00e9c\u00e9dent peut \u00eatre \u00e9crit autrement en utilisant une \u00ab\u00a0variable Tkinter\u00a0\u00bb. Tkinter en poss\u00e8de de 4 types : <code>BooleanVar</code>, <code>DoubleVar</code>, <code>IntVar</code> et <code>StringVar</code> (plus de d\u00e9tails ici). C'est assez limit\u00e9, et globalement insuffisant aux besoins d'une application un peu cons\u00e9quente, et on est souvent amen\u00e9 \u00e0 exploiter des structures plus souples et riches, telles que les dictionnaires Python.</p> <p>L'int\u00e9r\u00eat d'une telle variable est qu'il s'agit d'un objet, dot\u00e9 de m\u00e9thodes lui permettant de se modifier lui-m\u00eame. Il est de ce fait inutile de devoir le d\u00e9clarer comme \u00e9tant de type <code>global</code> dans chaque fonction qui y fait appel.</p> <p>L'autre int\u00e9r\u00eat, absolument majeur, est qu'un widget dont le contenu provient d'une variable Tkinter se met \u00e0 jour dynamiquement, \u00e0 chaque \u00e9volution du contenu de la variable : inutile de devoir le reconfigurer \u00e0 chaque changement de valeur de la variable ! Ainsi, des \u00ab\u00a0variable Tkinter\u00a0\u00bb rattach\u00e9e \u00e0 des widgets tels que <code>Button</code>, <code>Label</code>, <code>Entry</code> etc., mettront automatiquement et dynamiquement \u00e0 jour le widget auquel elles sont assign\u00e9es \u00e0 chaque changement de leur \u00ab contenu \u00bb.</p> <ul> <li> <p>Supposons que <code>s_tk = StringVar()</code>. \u00c9crire une valeur se fait au moyen de la m\u00e9thode <code>set()</code> : <code>s_tk.set(\"toto\")</code>. Lire une valeur se fait au moyen de la m\u00e9thode <code>get()</code> : <code>s_tk.get()</code> renverra la cha\u00eene <code>'toto'</code>. Cela fonctionne exactement pareil avec les trois autres types de \u00ab\u00a0variables Tkinter\u00a0\u00bb.</p> </li> <li> <p>Si <code>s_tk = StringVar()</code>, la valeur par d\u00e9faut de <code>s_tk</code> est la cha\u00eene vide <code>''</code>.</p> </li> <li> <p>Si <code>i_tk = IntVar()</code>, la valeur par d\u00e9faut de <code>i_tk</code> est <code>0</code>.</p> </li> <li> <p>Si <code>d_tk = DoubleVar()</code>, la valeur par d\u00e9faut de <code>d_tk</code> est <code>0.0</code>.</p> </li> <li> <p>Si <code>b_tk = BooleanVar()</code>, la valeur par d\u00e9faut de <code>b_tk</code> est <code>False</code>.</p> </li> <li> <p>On peut d\u00e9clarer une variable Tkinter et sa valeur initiale simultan\u00e9ment\u00a0: <code>s_tk = StringVar(value=\"toto\")</code>, ou <code>i_tk = IntVar(value=-2)</code>, ou <code>d_tk = DoubleVar(value=3.14)</code>, ou encore <code>b_tk = BooleanVar(value=True)</code>.</p> </li> <li> <p>Un type de variable sp\u00e9cifique peut-\u00eatre associ\u00e9 \u00e0 certains widgets :</p> <ul> <li><code>Button</code> poss\u00e8de une option <code>textvariable</code> qui attend une <code>StringVar</code> ;</li> <li><code>Checkbutton</code> a une option <code>variable</code> qui attend plut\u00f4t une <code>IntVar</code> (mais \u00e7a n'est pas obligatoire) ;</li> <li><code>Entry</code>, <code>Label</code> et <code>Menubutton</code> ont une option <code>textvariable</code> attendant une <code>StringVar</code> ;</li> <li>etc. vous trouverez plus de d\u00e9tails ici.</li> </ul> </li> <li> <p>Tkinter fait du transtypage silencieux (ce qui est mal) : si l'on fait <code>s_tk.set(None)</code>, alors <code>s_tk.get()</code> renverra... <code>'None'</code> (une cha\u00eene de caract\u00e8res !).</p> </li> <li> <p>Tkinter est m\u00eame vraiment \u00ab\u00a0sale\u00a0\u00bb, parfois : <code>i_tk.set(\"toto\")</code> ne pose aucun probl\u00e8me (alors qu'on a d\u00e9clar\u00e9 que <code>i_tk</code> est une <code>IntVar</code>, donc a priori apte \u00e0 n'accueillir que des nombres entiers !). Par contre <code>i_tk.get()</code> provoque une erreur <code>_tkinter.TclError: expected floating-point number but got \"toto\"</code> !</p> </li> </ul> Remarque : de l'int\u00e9r\u00eat des dictionnaires <p>Les dictionnaires ont de nombreuses vertus ! En plus de ce que vous savez d\u00e9j\u00e0 d'eux, sachez qu'il est possible (et m\u00eame facile) de les s\u00e9rialiser afin, par exemple, de sauvegarder leurs contenus sur le disque dur ou d'envoyer toute la structure de donn\u00e9es \u00e0 travers le r\u00e9seau... Vous lirez avec profit ce document (il est d'ailleurs aussi de moi !).</p> <p>Voici un exemple, basique et sans r\u00e9el int\u00e9r\u00eat, de s\u00e9rialisation dans une variable Tkinter <code>StringVar</code>. On utilise le module <code>pickle</code> pour s\u00e9rialiser un dictionnaire Python : la s\u00e9rialisation d'un objet informatique est sa conversion en un flux d'octets (et donc de bits) qui pourra ensuite soit \u00eatre enregistr\u00e9 sur un support de stockage (disque dur, clef USB, etc.) soit envoy\u00e9 \u00e0 un autre ordinateur \u00e0 travers une connexion r\u00e9seau.</p> <pre><code># coding: utf8\nimport pickle      # Un excellent module pour s\u00e9rialiser des donn\u00e9es\nd = {1:2, 'a':'b'} # Cr\u00e9ation d'un dictionnaire bidon\n# Cr\u00e9ation d'une variable StringVar initialis\u00e9e avec la conversion en cha\u00eene\n# de caract\u00e8res de l'objet de type bytes g\u00e9n\u00e9r\u00e9 par pickle.dumps\ns = StringVar(pickle.dumps(d))\n# \u00c0 ce stade, un appel \u00e0 s.get() renverrait \"b'\nx80\nx03}q\nx00(K\nx01K\n# \nx02X\nx01\nx00\nx00\nx00aq\nx01X\nx01\nx00\nx00\nx00bq\nx02u.'\"\n# Pour recr\u00e9er un dictionnaire \u00e0 partir de cette cha\u00eene, il faudra faire :\nD = pickle.loads(eval(s.get())) # D == d renvoie alors True !\n</code></pre> <p>Voici le programme \u00ab calculatrice \u00bb pr\u00e9c\u00e9dent modifi\u00e9 pour exploiter une variable Tkinter <code>StringVar</code>. </p> <pre><code># coding: utf8\nfrom tkinter import *\nfrom math import *\n\ndef evaluer(event):\n    r.set(str(eval(saisie.get())))\n\nf = Tk()\n# Il faut absolument cr\u00e9er une fen\u00eatre principale AVANT de cr\u00e9er une variable\n# Tkinter ! Sinon vous obtiendrez une erreur : \u00ab RuntimeError: Too early to\ncreate variable: no default root window \u00bb\nr = StringVar()\nsaisie = Entry(f)\nsaisie.bind(\"&lt;Return&gt;\", evaluer)\nsaisie.pack()\nLabel(f, text=\"R\u00e9sultat :\").pack() # Pas besoin de se souvenir de ce widget !\nresultat = Label(f, textvariable=r)\nresultat.pack()\n\nf.mainloop()\n</code></pre>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#une-application-presque-complete-la-todo-list","title":"Une application (presque) compl\u00e8te : la \u00ab todo list \u00bb","text":"<p>Il s'agit l\u00e0 d'un programme sensiblement plus long, permettant de cr\u00e9er et g\u00e9rer une liste de t\u00e2ches.</p> <p>Les fonctionnalit\u00e9s introduites ici sont :</p> <ul> <li>barre de menus ;</li> <li>fen\u00eatre pop-up ;</li> <li>gestionnaire de fichier (pour enregistrer ou charger un fichier) ;</li> <li>enregistrement dans un fichier (version simple : il serait mieux d'utiliser le module <code>pickle</code>) ;</li> <li>association d'\u00e9v\u00e8nements \u00e0 une touche du clavier ;</li> <li>widget \u00ab\u00a0bo\u00eete de listes\u00a0\u00bb ;</li> <li>glisser-d\u00e9poser ;</li> <li>int\u00e9gration d'une image (t\u00e9l\u00e9chargez-l\u00e0 ici).</li> </ul> <p>\u00c0 vous de d\u00e9cortiquer le fonctionnement de ce script ! Des liens \u00e9maillent les commentaires pour vous y aider.</p> <p></p> <pre><code># coding: utf8\nfrom tkinter import *\nimport os\nimport tkinter.messagebox\nfrom tkinter import filedialog\n\nf = Tk()\nf.title(\"Liste de t\u00e2ches\")\nlabel1 = Label(f, text=\"Nouvelle t\u00e2che :\")\n# Ajout d'une image pour \u00e9gayer l'ensemble. Le fichier image doit \u00eatre\n# pr\u00e9sent dans le r\u00e9pertoire courant de l'application (dans cet exemple).\n# Pour g\u00e9rer du JPEG cf. https://www.nemoquiz.com/python/images-in-tkinter/\n# Avantage du PNG : pas de perte (format non destructeur) et gestion\n# de la transparence.\n# Inconv\u00e9nient du PNG : fichiers plus volumineux que du JPEG.\nicone = PhotoImage(file=\"notes.png\")\nlabel2 = Label(f, image=icone)\n# Une bo\u00eete de saisie, cf. http://tkinter.fdex.eu/doc/entw.html#Entry\n# (on validera une saisie en appuyant sur Entr\u00e9e du clavier, cf. plus bas).\n# Attention : cette touche N'est PAS celle du pav\u00e9 num\u00e9rique !\nsaisie_tache = Entry(f)\n# Une liste simple, cf. http://tkinter.fdex.eu/doc/lbw.html#Listbox.\nliste_taches = Listbox(f, height=6)\nb = Button(f, text=\"Effacer la liste de t\u00e2ches\")\nlabel1.grid(row=0, column=0, pady=3)\nsaisie_tache.grid(row=0, column=1)\nlabel2.grid(row=1, column=0, pady=3)\nliste_taches.grid(row=1, column=1)\nb.grid(row=2, column=0, columnspan=2, pady=3)\n\ndef ajouter_tache(event=None): # d\u00e9finition du gestionnaire\n    tache = saisie_tache.get()\n    liste_taches.insert(\"end\", tache)\n    saisie_tache.delete(0, \"end\")\n\nsaisie_tache.bind(\"&lt;Return&gt;\", ajouter_tache) # liaison\n\n# Vider la liste des taches\n# Fonction lambda : fonction d\u00e9pourvue de nom, comprenant une seule et unique\n# instruction, retournant une \u00ab valeur \u00bb.\nb[\"command\"] = lambda : liste_taches.delete(0, \"end\")\n# Supprimer une t\u00e2che, en appuyant sur la doute \"Suppr.\" (\u00e0 droite de la\n# touche Entr\u00e9e).\nliste_taches.bind(\"&lt;Delete&gt;\", lambda event=None: liste_taches.delete(liste_taches.curselection()))\n\n# Cette variable Tkinter sert \u00e0 conna\u00eetre l'index de la t\u00e2che s\u00e9lectionn\u00e9e.\n# On pourrait aussi utiliser une variable normale et la d\u00e9clarer \u00ab globale \u00bb\n# dans chaque fonction o\u00f9 on a besoin de la modifier...\nindex = IntVar()\n\ndef clic_sur_item(event): # Ce qu'on fait lorsqu'on clique sur un item\n    # On stocke dans la variable enti\u00e8re \"index\" le num\u00e9ro de la t\u00e2che\n    # la plus proche de l'emplacement o\u00f9 l'on a cliqu\u00e9 (on se base sur\n    # l'ordonn\u00e9e du point cliqu\u00e9 pour le d\u00e9terminer).\n    index.set(liste_taches.nearest(event.y))\n\ndef relacher_sur_item(event): # Ce qu'on fait lorsqu'on relache le clic sur un\n    # autre item. On r\u00e9cup\u00e8re l'item sur lequel on a initi\u00e9 le clic, puis\n    # l'index et l'item sur lequel on a relach\u00e9 le clic et on \u00e9change si\n    # n\u00e9cessaire les items.\n    item1 = liste_taches.get(index.get())\n    # index2 est une variable \u00ab standard \u00bb !\n    index2 = liste_taches.nearest(event.y)\n    if index2 != index.get():\n        item2 = liste_taches.get(index2)\n        liste_taches.delete(index.get()) # On supprime le premier item ...\n        liste_taches.insert(index.get(), item2) # ...qu'on remplace par le second\n        liste_taches.delete(index2) # Et vice versa !\n        liste_taches.insert(index2, item1)\n\n# Cf. https://docs.python.org/3/library/tkinter.html#bindings-and-events pour\n# comprendre le add=\"+\". Cet article donne une illustration de l'int\u00e9r\u00eat\n# du add='+' : https://www.pythontutorial.net/tkinter/tkinter-event-binding/\nliste_taches.bind(\"&lt;Button-1&gt;\", clic_sur_item, add=\"+\")\nliste_taches.bind(\"&lt;ButtonRelease-1&gt;\", relacher_sur_item)\n\ndef charger():\n    # Exercice : \u00e0 vous de coder le contenu de cette fonction !\n    tkinter.messagebox.showinfo(\"Oups !\", \"Vous devrez coder cette fonction !\")\n\ndef enregistrer():\n    # Cf. http://tkinter.unpythonic.net/wiki/tkFileDialog\n    # Il peut \u00eatre utile de conna\u00eetre le r\u00e9pertoire courant (option initialdir).\n    # Pour cela, mettre import os en t\u00eate de fichier, puis utiliser os.getcwd().\n    fichier =  filedialog.asksaveasfilename(initialdir = os.getcwd(),\n        title = \"Choisir un fichier\",\n        filetypes = ((\"Fichier de t\u00e2ches (texte)\",\"*.todo\"),))\n    if fichier:\n        with open(fichier, \"w\") as f:\n            for ligne in liste_taches.get(0,END):\n                f.write(ligne+\"\\n\") # +\"\\n\" pour ajouter un saut de ligne \u00e0 chaque entr\u00e9e\n\ndef a_propos():\n    tkinter.messagebox.showinfo(\"\u00c0 propos de ce logiciel\",\n\"\"\"Ce logiciel est disponible sous la licence GNU/GPL\n(cf. https://www.gnu.org/licenses/gpl-3.0.fr.html).\n\nSaisir une t\u00e2che dans la zone\nde saisie et valider la saisie\nen pressant la touche Entr\u00e9e\n(pas celle du pav\u00e9 num\u00e9rique).\n\nLes t\u00e2ches peuvent \u00eatre \nr\u00e9organis\u00e9es par simple\nglisser-d\u00e9poser.\n\nPour supprimer une t\u00e2che,\nla s\u00e9lectionner puis presser\nla touche Suppr.\n\"\"\")\n\n# Cr\u00e9er une barre de menu principale\nbarre_de_menus = Menu(f)\n# Cr\u00e9er une barre de menu secondaire\nmenu_actions = Menu(barre_de_menus, tearoff=1) # tearoff=0 permet d'avoir un menu \u00ab non d\u00e9tachable \u00bb\nmenu_actions.add_command(label=\"Charger\", command=charger)\nmenu_actions.add_command(label=\"Enregistrer\", command=enregistrer)\nmenu_actions.add_separator()\nmenu_actions.add_command(label=\"Quitter\", command=f.quit)\n# Ajouter la barre de menu secondaire \u00e0 la barre de menu principale\nbarre_de_menus.add_cascade(label=\"Actions\", menu=menu_actions)\n# Ajouter une commande \u00e0 la barre de menu principale\nbarre_de_menus.add_command(label=\"\u00c0 propos\", command=a_propos)\n\n# Ajouter la barre de menu principale \u00e0 la fen\u00eatre\nf.config(menu=barre_de_menus)\n\nf.mainloop()\n</code></pre>"},{"location":"uaa13-14_python/tp3_tkinter/tkinter_trieles/tkinter/#ressources-complementaires","title":"Ressources compl\u00e9mentaires","text":"<p>Les essentiels</p> <ul> <li> <p>Excellente introduction \u00e0 l'utilisation de Tkinter, riche d'exemples (d'autres widget y sont d\u00e9crits, par exemple <code>Frame</code>, <code>Spinbox</code>, <code>Scale</code>, <code>FileDialog</code>, les menus... et il y a aussi un exemple de glisser-d\u00e9poser (drag and drop en anglais) dans un contexte graphique : http://f.sincere.free.fr/isn/python/cours_python_tkinter.php.</p> </li> <li> <p>Documentation assez compl\u00e8te sur Tkinter (en fran\u00e7ais) : http://tkinter.fdex.eu/.</p> </li> <li> <p>Autre introduction \u00e0 Tkinter, assez exhaustive (y sont abord\u00e9s entre autres choses le placement pr\u00e9cis d'une nouvelle fen\u00eatre, les widget <code>Checkbutton</code>, <code>Radiobutton</code>, <code>Text</code>, des d\u00e9tails sur les formes dessinables dans un <code>Canvas</code> (jonctions douces ou dures des lignes, gestion des images, etc.) ainsi que des widget plus complexes tels que <code>OptionMenu</code>, <code>PanedWindow</code>, <code>ListBox</code>, <code>ScrollBar</code>, les diff\u00e9rents styles de curseurs de souris, les bo\u00eetes de saisie (textes, fichiers, couleurs, etc.) : http://www.jchr.be/python/tkinter.htm.</p> </li> <li> <p>Didacticiel (y compris Python 2.x vs Python 3.x, synth\u00e9tise les options par cat\u00e9gorie pour plus de lisibilit\u00e9 et propose des illustrations bienvenues sur diff\u00e9rentes options de relief des widget) : http://apprendre-python.com/page-tkinter-interface-graphique-python-tutoriel.</p> </li> </ul> <p>Autres ressources (un peu en vrac)</p> <ul> <li> <p>L'incontournable livre de G\u00e9rard SWINNEN (pages 191 \u00e0 278, pour ce qui concerne Tkinter).</p> </li> <li> <p>Un autre tutoriel sur Tkinter.</p> </li> <li> <p>Pas en rapport avec Tkinter, un peu ancien (con\u00e7u en 2014 dans le contexte de l'ISN), mais certainement toujours utile (ce sont des fiches m\u00e9thodes) : http://fiches-isn.readthedocs.org/fr/latest/index.html</p> </li> <li> <p> Drawing in Tkinter.</p> </li> <li> Introduction to GUI programming with Tkinter (orient\u00e9 POO \u2015 si vous ne savez pas ce que c'est, oubliez : vous l'apprendrez ult\u00e9rieurement  !).</li> </ul>"},{"location":"uaa13-14_python/tp4_recursivite/recursivite/","title":"UAA13-14 TP4 R\u00e9cursivit\u00e9","text":"<p>Notions abord\u00e9es : </p> <p>TBD</p> <p>Consignes</p> <ul> <li> <p>Prends connaissance du cours sur la r\u00e9cursivit\u00e9 puis fais les activit\u00e9s ci-dessous.</p> </li> <li> <p>Le site de Franck Chambon sert de r\u00e9f\u00e9rence. </p> </li> </ul>"},{"location":"uaa13-14_python/tp4_recursivite/recursivite/#presentation","title":"Pr\u00e9sentation","text":"Question <p>Suis la pr\u00e9sentation de la pr\u00e9sentation de Franck Chambon:</p> <ol> <li> <p>Culture et r\u00e9cursivit\u00e9</p> </li> <li> <p>D\u00e9finition des fonctions r\u00e9cursives</p> </li> <li> <p>Activit\u00e9s d\u00e9branch\u00e9es en classe</p> </li> </ol>"},{"location":"uaa13-14_python/tp4_recursivite/recursivite/#notion-de-fonction","title":"Notion de fonction","text":"Question <p>T\u00e9l\u00e9charge ce fichier et ouvre-le avec visual studio code et suis les consignes de l'activit\u00e9.</p>"},{"location":"uaa13-14_python/tp4_recursivite/recursivite/#exemples","title":"Exemples","text":"Question <p>Suis les exemples de la pr\u00e9sentation de Franck Chambon:    </p> <ol> <li> <p>Ecrire une punition</p> </li> <li> <p>V\u00e9rifier un mot de passe <code>MAISON</code></p> </li> <li> <p>Somme des premiers entiers \u00e0 partir du site</p> </li> <li> <p>Nombres cons\u00e9cutifs dans un intervalle</p> </li> <li> <p>Retournement d\u2019une cha\u00eene</p> </li> </ol> 9. D\u00e9couverte avec le robot <p>Dans l'UAA 11 - \"TP7 Listes imbriqu\u00e9es\", reprends le \"Test4 Idle : synth\u00e8se\"  et remplace les boucles par des fonctions r\u00e9cursives.  </p>"},{"location":"uaa13-14_python/tp4_recursivite/recursivite/#notion-de-recursivite","title":"Notion de r\u00e9cursivit\u00e9","text":"Question <p>T\u00e9l\u00e9charge ce fichier et ouvre-le avec visual studio code et compl\u00e8te les codes propos\u00e9s.</p>"},{"location":"uaa13-14_python/tp4_recursivite/recursivite/#petits-exercices-sur-la-recursivite","title":"Petits exercices sur la r\u00e9cursivit\u00e9","text":"Question <p>Apr\u00e8s avoir lu le r\u00e9sum\u00e9 du cours, fais les exercices de la section Algo pratique de Franck Chambon</p> <ol> <li> <p>R\u00e9sum\u00e9 du cours </p> </li> <li> <p>Nombre d'occurrences </p> </li> <li> <p>Maximum d'une liste non vide </p> </li> <li> <p>Test de palindrome <code>MAISON</code></p> </li> <li> <p>Socle de statues <code>MAISON</code></p> </li> <li> <p>Triangle en ASCII </p> </li> <li> <p>Nombre encadr\u00e9</p> </li> <li> <p>Losange creux <code>MAISON</code></p> </li> <li> <p>La t\u00eate \u00e0 Toto </p> </li> <li> <p>Suppression de doublons cons\u00e9cutifs <code>MAISON</code></p> </li> <li> <p>Fonction 91 de McCarthy <code>MAISON</code></p> </li> <li> <p>Le triangle de Pascal <code>MAISON</code></p> </li> <li> <p>Triangle de Sierpi\u0144ski <code>MAISON</code></p> </li> <li> <p>Factorielle</p> </li> <li> <p>Puissance</p> </li> </ol>"},{"location":"uaa13-14_python/tp4_recursivite/recursivite/#autres-exercices","title":"Autres exercices","text":"Question <p>T\u00e9l\u00e9charge ce fichier et ouvre-le avec visual studio code et fais les exercices propos\u00e9s.</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/","title":"Tuto de Pascal Trieles \"Interfaces graphiques en Python 3 avec Tkinter\"","text":""},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#introduction","title":"Introduction","text":"<p>Cette pages est une copie du site de Pascal Trieles </p> <p>Tkinter est la bliblioth\u00e8que de composants graphiques disponible par d\u00e9faut avec Python 3. Vous pourrez trouver une traduction en fran\u00e7ais de sa documentation \u00e0 l'adresse http://tkinter.fdex.eu/.</p> <p> Recommandations importantes </p> <ul> <li> <p>Tout ce qui est d\u00e9crit ici est hors-programme de NSI\u00a0! En poursuivant la lecture, vous comprenez que le temps que vous y consacrerez sera perdu, au sens o\u00f9 il ne vous aidera pas \u00e0 avoir de meilleurs r\u00e9sultats en NSI. Par contre, cela pourra vous int\u00e9resser voire vous distraire\u00a0: ainsi, il convient que vous preniez sur votre temps libre pour r\u00e9aliser ces activit\u00e9s. En aucun cas vous ne devriez consommer du temps normalement consacr\u00e9 \u00e0 vos \u00e9tudes !</p> </li> <li> <p>Au d\u00e9but de ce document, qui vise \u00e0 vous faire d\u00e9couvrir les notions et composants de base de Tkinter, il vous sera demand\u00e9 de travailler dans une console interactive (Idle ou iPython). Par la suite, vous cr\u00e9erez des scripts.</p> </li> <li> <p>Je vous demande de faire en sorte que votre console interactive occupe une moiti\u00e9 de votre \u00e9cran, et de veiller \u00e0 ce que les \u00ab\u00a0fen\u00eatres Tkinter\u00a0\u00bb que vous fabriquerez soient toujours visibles sur l'autre partie de l'\u00e9cran (vous devrez probablement les d\u00e9placer, \u00e0 chaque fois).</p> </li> </ul> <p>En mode interactif, la construction de l'interface graphique (souvent abr\u00e9g\u00e9e en GUI (pour Graphical User Interface en anglais) est dynamique et progressive, l'observer \u00e9tape apr\u00e8s \u00e9tape est instructif.</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#premiers-pas","title":"Premiers pas","text":"<p>Chaque fois que l'on voudra exploiter la biblioth\u00e8que Tkinter, il faudra commencer par l'importer (on va faire ici un import global, bien que cela ne soit pas optimal).</p> <pre><code>&gt;&gt;&gt; from tkinter import *               # Import indispensable (mais excessif).\n&gt;&gt;&gt; f=Tk()                              # Cr\u00e9ation de la fen\u00eatre de base de l'application.\n&gt;&gt;&gt; f.title(\"D\u00e9couverte de Tkinter\")    # On lui donne un nom...\n</code></pre> <p>Normalement, une fen\u00eatre (tr\u00e8s tr\u00e8s vide) a d\u00fb appara\u00eetre (si vous ne la rep\u00e9rez pas au premier coup d'\u0153il, cherchez-l\u00e0 dans la \u00ab barre des t\u00e2ches \u00bb ou le dock).</p> <p> NE LA FERMEZ SURTOUT PAS ! </p> <p>Si par malheur vous avez d\u00e9j\u00e0 cliqu\u00e9 sur la croix qui, traditionnellement, ferme les fen\u00eatres, vous n'avez plus qu'\u00e0 saisir \u00e0 nouveau les lignes 1 et 2 pr\u00e9c\u00e9dentes...</p> <p>Remarques</p> <ul> <li> <p>Les commentaires dans le code sont \u00e0 lire avec attention ! Il est en revanche inutile de les taper ...</p> </li> <li> <p>La Programmation Orient\u00e9e Objet (POO) est le style de programmation de pr\u00e9dilection pour les interfaces graphiques (au moins en Python). Cela permet notamment d'\u00e9viter de s'encombrer (voire s'\u00e9garer  !) avec des variables globales, m\u00eame si Tkinter offre \u2014 dans les cas simples \u2014 des moyens de contourner cette difficult\u00e9). Vous aurez donc tr\u00e8s souvent \u00e0 faire appel aux notations usuelles en POO : <code>objet.methode(...)</code>.</p> </li> </ul> Pour parler (un rien) de Programmation Orient\u00e9e Objet <p>Pour faire simple, un objet est une portion de code autonome. Il est d\u00e9fini \u00e0 partir d'une classe, qui, chaque fois qu'elle est instanci\u00e9e (ex\u00e9cut\u00e9e), cr\u00e9e un nouvel objet.</p> <p>Pour tenter une analogie\u00a0: une classe est un moule \u00e0 g\u00e2teau, un objet est un g\u00e2teau, et on peut cr\u00e9er plusieurs g\u00e2teaux (qui peuvent \u00eatre un peu diff\u00e9rents) \u00e0 partir du m\u00eame moule.</p> <p>Un attribut est une caract\u00e9ristique de l'objet. C'est une variable qui n'existe que lorsque un objet est instanci\u00e9, \u00e0 laquelle on ne peut acc\u00e9der qu'\u00e0 travers l'objet, et qui est li\u00e9e \u00e0 cet objet en particulier (deux objets instanci\u00e9s \u00e0 partir de la m\u00eame classe auront chacun un m\u00eame attribut, qui portera le m\u00eame nom, mais d\u00e9signera des valeurs diff\u00e9rentes.</p> <p>Une m\u00e9thode est une fonction \u00ab\u00a0embarqu\u00e9e\u00a0\u00bb dans l'objet, qui peut agir sur lui \u00ab\u00a0de l'int\u00e9rieur\u00a0\u00bb. Elle peut par exemple modifier les valeurs des attributs. On peut appeler une m\u00e9thode \u00e0 partir d'un objet avec la syntaxe <code>objet.methode()</code></p> Sp\u00e9cificit\u00e9 d'un programme \u00ab\u00a0graphique\u00a0\u00bb <p>Dans un script, il faudra syst\u00e9matiquement d\u00e9marrer la \u00ab\u00a0boucle principale\u00a0\u00bb \u00e0 l'aide d'une instruction du type <code>f.mainloop()</code> (o\u00f9 <code>f</code> d\u00e9signe la fen\u00eatre principale du programme).</p> <p>La m\u00e9thode <code>mainloop</code> provoque le d\u00e9marrage du gestionnaire d'\u00e9v\u00e9nements associ\u00e9 \u00e0 la fen\u00eatre : il est indispensable au bon fonctionnement de votre application graphique. Concr\u00e8tement, une boucle infinie est d\u00e9marr\u00e9e, elle ne sert qu'\u00e0 \u00ab\u00a0consommer\u00a0\u00bb une quanti\u00e9 minimale des ressources de la machine, juste ce qu'il faut pour surveiller tr\u00e8s r\u00e9guli\u00e8rement (et tr\u00e8s tr\u00e8s tr\u00e8s souvent :wink! !) les clics de souris, les pressions sur les touches du clavier, etc.</p> <p>C'est un peu cette instruction qui \u00ab\u00a0met en marche\u00a0\u00bb votre application graphique, en lui permettant d'interagir avec l'utilisateur.</p> <p>On parle dans cette situation de \u00ab\u00a0programmation \u00e9v\u00e9nementielle\u00a0\u00bb, dans laquelle une boucle infinie attend sans arr\u00eat qu'on la sollicite pour r\u00e9agir, par opposition \u00e0 la \u00ab\u00a0programmation s\u00e9quentielle\u00a0\u00bb dans laquelle un programme a vocation \u00e0 se terminer \u00e0 un moment (qui, si l'on s'en donnait la peine, pourrait \u00eatre) connu d'avance.</p> Programme s\u00e9quentiel Programme \u00e9v\u00e9nementiel <p>Les images proviennent de l'excellent livre libre \u00ab\u00a0Apprendre \u00e0 programmer avec Python 3\u00a0\u00bb. Bien qu'un peu ancien, d\u00e9sormais, il constitue n\u00e9anmoins une ressource de premi\u00e8re importance !</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#un-premier-widget","title":"Un premier widget","text":"<p>Un widget est un WIndow gaDGET. Une interface graphique est compos\u00e9e de divers widgets. Nous en verrons quelques uns (et vous en d\u00e9couvrirez d'autres par vous-m\u00eames, notamment en explorant la documentation de Tkinter).</p> <p>En supposant que vous avez saisi, dans votre console Python, les instructions pr\u00e9c\u00e9dentes et que vous n'avez pas ferm\u00e9 la fen\u00eatre qui a d\u00fb appara\u00eetre, saisissez maintenant le code suivant :</p> <pre><code># Cr\u00e9ation d'un label (une zone d'affichage), d\u00e9pendant de la fen\u00eatre f\n&gt;&gt;&gt; l=Label(f, text=\"Mon premier widget\")\n# Mais pourquoi donc rien ne s'affiche ?\n</code></pre> <p>Rien ne s'affiche parce que le widget n'est pas encore positionn\u00e9 dans la fen\u00eatre. Il y a en effet plusieurs fa\u00e7ons de placer les \u00e9l\u00e9ments constitutifs de l'interface graphique au sein de la fen\u00eatre principale (qui ici est d\u00e9sign\u00e9e par la variable <code>f</code>).</p> <p>Tkinter dispose de 3 gestionnaires de positionnement : <code>pack</code>, <code>grid</code> et <code>place</code>. On utilisera surtout <code>pack</code> dans les cas simples : c'est le plus basique et le plus facile \u00e0 utiliser (il \u00ab\u00a0empile\u00a0\u00bb  les widgets l'un sous l'autre en colonne, ou l'un \u00e0 c\u00f4t\u00e9 de l'autre en ligne). Pour des interfaces graphiques plus complexes, on utilisera surtout <code>grid</code>.</p> <pre><code># Insertion pour affichage du label dans la fen\u00eatre f\n&gt;&gt;&gt; l.pack()\n# Note : la g\u00e9om\u00e9trie de la fen\u00eatre s'en trouve affect\u00e9e !\n</code></pre> <p>On peut \u00e9videmment contr\u00f4ler le \u00ab\u00a0format \u00a0\u00bb  de la fen\u00eatre : d\u00e9finir sa taille, d\u00e9cider si l'utilisateur est autoris\u00e9 \u00e0 la redimensionner (et si oui, dans quelle direction).</p> <pre><code># Alt\u00e9rer la g\u00e9om\u00e9trie d'une fen\u00eatre\n&gt;&gt;&gt; f.geometry('200x30')\n# L'approche suivante est meilleure\n&gt;&gt;&gt; f.geometry('{}x{}'.format(300, 50))\n# Interdire le redimensionnement d'une fen\u00eatre\n&gt;&gt;&gt; f.resizable(0,0)\n# Autoriser le redimensionnement d'une fen\u00eatre en largeur\n&gt;&gt;&gt; f.resizable(1,0)\n# Autoriser le redimensionnement d'une fen\u00eatre en hauteur\n&gt;&gt;&gt; f.resizable(0,1)\n# Autoriser le redimensionnement d'une fen\u00eatre dans les 2 directions\n&gt;&gt;&gt; f.resizable(1,1)\n</code></pre> <p>Vous remarquerez que le label reste \u00ab\u00a0statique\u00a0\u00bb  : il ne change pas de taille lorsque la fen\u00eatre est redimensionn\u00e9e. On peut l\u00e0 encore contr\u00f4ler comment le widget se comporte en fonction des modifications subies par la fen\u00eatre. Mais on va d'abord modifier sa couleur de fond afin de rendre ces changements plus visibles.</p> <pre><code># Configuration a posteriori du label : d\u00e9finition d'un couleur de fond\n&gt;&gt;&gt; l.configure(background=\"light blue\")\n# On veut que l'espace vide autour du widget soit \u00e9quitablement r\u00e9parti\n&gt;&gt;&gt; l.pack(expand=1)\n# On veut que notre label occupe l'espace jusqu'aux bords de la fen\u00eatre\n&gt;&gt;&gt; l.pack(fill=\"x\")\n# Essayer de redimensionner la fen\u00eatre horizontalement, puis verticalement\n&gt;&gt;&gt; l.pack(fill=\"y\")\n# R\u00e9essayer de redimensionner la fen\u00eatre\n&gt;&gt;&gt; l.pack(fill=\"both\")\n# Et maintenant ?\n</code></pre>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#detruire-ou-oublier-un-widget","title":"D\u00e9truire ou \u00ab\u00a0oublier\u00a0\u00bb un widget","text":"<p> Oublier un widget est diff\u00e9rent de le d\u00e9truire </p> <p>Lorsqu'on demande \u00e0 Tkinter d'oublier un widget, il cesse d'\u00eatre affich\u00e9, mais on peut le r\u00e9-afficher lorsqu'on le souhaite. On pourrait par exemple oublier le label <code>l</code> avec l'instruction <code>l.forget()</code>.</p> Remarque <p>Attention : ici, la m\u00e9thode <code>forget()</code> est un raccourci pour <code>.pack_forget()</code>. Il faut utiliser la m\u00e9thode <code>grid_forget()</code> lorsqu'on a recours au gestionnaire de placement <code>grid</code>. Une possibilit\u00e9 int\u00e9ressante de ce dernier gestionnaire est l'oubli temporaire : avec la m\u00e9thode <code>grid_remove()</code>, le widget est retir\u00e9 de l'affichage mais toutes ses options sont m\u00e9moris\u00e9es (y compris sa position dans la grille). Il suffit d'un nouvel appel \u00e0 sa m\u00e9thode <code>grid()</code> et il sera r\u00e9affich\u00e9 exactement de la m\u00eame mani\u00e8re qu'avant son oubli (<code>pack</code> ne poss\u00e8de pas d'\u00e9quivalent).</p> <p>Au contraire, d\u00e9truire un widget est d\u00e9finitif (il faut le recr\u00e9er *int\u00e9gralement si l'on veut le \u00ab ressusciter\u00a0\u00bb). On utilise pour cela la m\u00e9thode <code>destroy()</code>, par exemple <code>l.destroy()</code>.</p> Remarque <p>Les m\u00e9thodes <code>pack_slaves()</code> et <code>grid_slaves()</code> renvoient la liste des widget \u00ab\u00a0enfants\u00a0\u00bb  d'un widget donn\u00e9. C'est utile pour les supprimer ou les oublier...</p> Ressources compl\u00e9mentaires <ul> <li>Concernant <code>grid_forget()</code>.</li> <li>Concernant <code>pack_forget()</code>.</li> <li>Discussion sur stackoverflow : \u00ab\u00a0 In Tkinter is there any way to make a widget not visible\u00a0\u00bb.</li> </ul>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#dessiner","title":"Dessiner !","text":""},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#le-widget-canevas","title":"Le widget canevas","text":"<p>Le widget <code>Canvas</code> permet de dessiner : on peut notamment y placer des lignes, des polygones, des images, etc. Pour cr\u00e9er et afficher un canevas, dont le contenu par d\u00e9faut est \u00e9videmment vide, saisir :</p> <p> ATTENTION : dans un canevas, l'axe des ordonn\u00e9es est dirig\u00e9 VERS LE BAS ! </p> Note historique <p>Cette situation n'est pas propre \u00e0 Python / Tkinter. En fait, dans la plupart des langages de programmation :</p> <ul> <li> <p>l'origine \\(O(0\\,;0)\\) du rep\u00e8re est le coin sup\u00e9rieur gauche de l'\u00e9cran (plus exactement : de la fen\u00eatre ou du canevas) ;</p> </li> <li> <p>l'axe des abscisses \\((Ox)\\) est dirig\u00e9 comme on en a l'habitude (de la gauche vers la droite, en suivant le bord sup\u00e9rieur de la fen\u00eatre ou du canevas, comme en math\u00e9matiques) ;</p> </li> <li> <p>mais l'axe des ordonn\u00e9es \\((Oy)\\) est dirig\u00e9 vers le bas, en sens contraire du sens habituel (en suivant le bord gauche de la fen\u00eatre ou du canevas).</p> </li> </ul> <p>Les raisons \u00e0 cette situation qui pourrait vous surprendre sont purement historiques : sur les premiers afficheurs (des moniteurs analogiques, ressemblant aux anciennes t\u00e9l\u00e9visions \u00e0 tube cathodique), le faisceau d'\u00e9lectrons partait du coin sup\u00e9rieur gauche, se d\u00e9pla\u00e7ait vers la droite, puis descendait l\u00e9g\u00e8rement en revenant \u00e0 gauche. La vitesse \u00e0 laquelle les premiers \u00e9crans pouvaient dessiner les caract\u00e8res \u00e9tait assez lente, il \u00e9tait donc pr\u00e9f\u00e9rable de suivre le sens de lecture... occidental (n'oublions pas que l'ordinateur est, pour l'essentiel, une invention anglo-saxonne, m\u00eame si l'histoire de Konrad ZUSE m\u00e9rite d'\u00eatre connue).</p> <p>Cf.  cette question sur StackOverflow ainsi que  cet article de Wikipedia qui traite de l'histoire de la t\u00e9l\u00e9vision analogique.</p> <p>Voici une animation (issue de Wikipedia) montrant comment une image entrelac\u00e9e \u00e9tait affich\u00e9e sur un moniteur analogique.</p> <p></p> <pre><code>&gt;&gt;&gt; c = Canvas(f, background=\"yellow\")\n&gt;&gt;&gt; c.pack()\n# R\u00e9glages a posteriori (on peut aussi d\u00e9cider de faire ces r\u00e9glages lors de\n# la cr\u00e9ation du Canvas, c'est une question de point de vue et de lisibilit\u00e9).\n&gt;&gt;&gt; c.configure(background=\"light green\")\n# Il y a une autre fa\u00e7on de faire (\u00e0 vous de choisir) :\n&gt;&gt;&gt; c['background'] = \"light yellow\"\n&gt;&gt;&gt; c.configure(height=\"800\")\n&gt;&gt;&gt; c.[\"width\"] = 800\n# On peut aussi r\u00e9gler plusieurs param\u00e8tres en une seule instruction :\n&gt;&gt;&gt; c.configure(width=600, height=400)\n</code></pre>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#les-formes-de-base","title":"Les formes de base","text":"<p>Le <code>Canvas</code> de Tkinter conna\u00eet les \u00ab\u00a0objets graphiques\u00a0\u00bb suivants : lignes, rectangles, polygones, ovales, arcs (de cercles), images, textes et sous-fen\u00eatres. Nous allons en exp\u00e9rimenter quelques uns.</p> <pre><code># Cr\u00e9ation d'un rectangle rempli avec la couleur \"light blue\" (bleu  l\u00e9ger) :\n&gt;&gt;&gt; rr = c.create_rectangle(10, 50, 100, 200, fill=\"light blue\")\n# L'affichage du rectangle est imm\u00e9diat (l'objet \u00ab canevas \u00bb est directement\n# modifi\u00e9 \u00ab en place \u00bb) !\n# Noter que rr est un simple entier, qui rep\u00e8re l'objet du canevas.\n# Gr\u00e2ce \u00e0 ce num\u00e9ro, on peut retrouver l'objet graphique et le modifier :\n&gt;&gt;&gt; c.itemconfigure(rr, fill=\"red\")\n# (Re)Trouver le type d'un objet et la valeur d'un de ses param\u00e8tres :\n&gt;&gt;&gt; c.type(rr)\n'rectangle'\n# L'objet graphique rr est d\u00e9sormais rempli en rouge (rr pour rectangle rouge !).\n&gt;&gt;&gt; c.itemcget(rr, \"fill\") \n# Cr\u00e9ation d'autres figures, par exemple un ovale (sert aussi pour les cercles) :\n&gt;&gt;&gt; o = c.create_oval(50, 100, 250, 150, fill=\"yellow\")\n&gt;&gt;&gt; rb = c.create_rectangle(20, 60, 150, 210, fill=\"blue\")\n&gt;&gt;&gt; rv = c.create_rectangle(250, 250, 100, 100, fill=\"green\")\n&gt;&gt;&gt; rn = c.create_rectangle(0, 500, 100, 100, fill=\"black\")\n</code></pre> <p> Attention </p> <p>Il est vraiment important de comprendre la n\u00e9cessit\u00e9 de m\u00e9moriser la  valeur retourn\u00e9e par la m\u00e9thode construisant chaque \u00e9l\u00e9ment graphique d'un <code>Canvas</code>. En effet, si on ne le fait pas, il sera impossible de modifier ult\u00e9rieurement cet \u00e9l\u00e9ment graphique (par exemple pour le d\u00e9placer) !</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#gerer-la-superposition-delements-graphiques","title":"G\u00e9rer la superposition d'\u00e9l\u00e9ments graphiques","text":"<p>Mais pourquoi l'ovale n'appara\u00eet-il pas ? Parce que les formes se recouvrent. On peut donc g\u00e9rer la \u00ab\u00a0profondeur d'affichage\u00a0\u00bb, afin de provoquer ou d'\u00e9viter un chevauchement, et permettre ainsi le passage au \u00ab\u00a0plan sup\u00e9rieur\u00a0\u00bb ou au \u00ab\u00a0plan inf\u00e9rieur\u00a0\u00bb d'un \u00e9l\u00e9ment graphique.</p> <p>Cela se fait \u00e0 l'aide des m\u00e9thodes <code>tag_lower</code> et <code>tag_raise</code>. Par exemple :</p> <pre><code>&gt;&gt;&gt; c.tag_raise(o)\n&gt;&gt;&gt; c.tag_lower(rn)\n</code></pre> Remarque <p>Ces m\u00e9thodes peuvent \u00e9galement prendre en argument un tag (une cha\u00eene de caract\u00e8res identifiant un ou plusieurs \u00e9l\u00e9ments graphiques). Vous aurez un peu plus de de d\u00e9tails sur ce sujet dans la section \u00ab\u00a0Pour aller plus loin : les tags\u00a0\u00bb. Quant \u00e0 ces m\u00e9thodes en particulier, suivez ce lien pour en apprendre davantage. Sachez qu'on peut, entre autres choses, positionner un \u00e9l\u00e9ment graphique relativement \u00e0 un autre...</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#deplacements-trouver-et-alterer-les-coordonnees-dun-objet-du-canevas","title":"D\u00e9placements : trouver et alt\u00e9rer les coordonn\u00e9es d'un objet du canevas","text":"<p>Une fois un \u00e9l\u00e9ment graphique cr\u00e9\u00e9 dans le <code>Canvas</code> de Tkinter et son identifiant obligatoirement m\u00e9moris\u00e9 (d'une fa\u00e7on ou d'une autre), on peut y r\u00e9acc\u00e9der afin de le faire \u00e9voluer. On peut ainsi modifier n'importe laquelle de ses caract\u00e9ristiques : couleur, poisition, forme, etc.</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#obtenir-les-coordonnees-dun-element-graphique-du-canvas","title":"Obtenir les coordonn\u00e9es d'un \u00e9l\u00e9ment graphique du <code>Canvas</code>","text":"<p>On utilise pour cela la m\u00e9thode <code>coords()</code> du <code>Canvas</code> :</p> <pre><code># Trouver les coordonn\u00e9es d'un objet d'un canevas :\n&gt;&gt;&gt; c.coords(rr)\n[10.0, 50.0, 100.0, 200.0]      # Une LISTE est renvoy\u00e9e.\n</code></pre>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#deplacer-un-element-graphique-sur-un-canvas","title":"D\u00e9placer un \u00e9l\u00e9ment graphique sur un <code>Canvas</code>","text":"<p>Il y a deux fa\u00e7ons d'y parvenir.</p> <ul> <li> <p>La premi\u00e8re, recommand\u00e9e, est relative \u00e0 la position actuelle de l'objet graphique. Cela signifie que l'on pr\u00e9cise le d\u00e9placement \u00e0 partir de la position actuelle de cet objet. D'un point de vue math\u00e9matique, le d\u00e9placement est alors une translation, d\u00e9finie par les coordonn\u00e9es (abscisses et ordonn\u00e9es) du vecteur associ\u00e9 .</p> <pre><code># D\u00e9placement d'un objet par d\u00e9calage \u00e0 partie de sa position actuelle :\n&gt;&gt;&gt; c.move(rr, 200, 0)        # D\u00e9calage en abscisse en premier, ici 200...\n&gt;&gt;&gt; c.move(rr, 0, 100)        # ...d\u00e9calage en ordonn\u00e9e ensuite, ici 100.\n&gt;&gt;&gt; c.move(rr, -10, -10)      # On peut bien s\u00fbr translater en oblique !\n</code></pre> Remarque <p>Cette approche a l'avantage d'\u00e9viter tout risque de modifier par inadvertance les proportions de l'objet. L'alternative, pr\u00e9sent\u00e9e juste apr\u00e8s, est de changer les sp\u00e9cifications de l'objet, ce qui peut impliquer, par exemple, de modifier l'ensemble de ses coorodonn\u00e9es. Si cela est fait sur la base d'un calcul, et que ce calcul est faux, alors les proportions de l'objet seront modifi\u00e9es, ce qui n'est pas n\u00e9cessairement souhait\u00e9  !</p> </li> <li> <p>L'autre approche consiste \u00e0 modifier l'ensemble des coordonn\u00e9es d\u00e9finissant l'\u00e9l\u00e9ment graphique. On emploie pour cela la m\u00e9thode <code>coords()</code> :</p> <pre><code># Modifier les coordonn\u00e9es d'un objet d'un canevas (2 approches possibles).\n# Notez que la g\u00e9om\u00e9trie de l'objet peut changer si l'on n'y prend pas garde !\n&gt;&gt;&gt; c.coords(o, 200, 300, 250, 350)\n&gt;&gt;&gt;[]                                   # La valeur de retour est une liste vide.\n&gt;&gt;&gt; c.coords(o, (200, 50, 250, 100))    # Ici on passe un TUPLE de coordonn\u00e9es.\n&gt;&gt;&gt;[]                                   # Idem pour la valeur de retour...\n# Modification explicite du param\u00e9trage de l'\u00e9l\u00e9ment graphique rr :\n&gt;&gt;&gt; c.coords(rr, 20, 50, 100, 150)\n</code></pre> Remarques <ul> <li> <p>Vous aurez not\u00e9 que la deuxi\u00e8me modification (avec le tuple) a chang\u00e9 l'aspect de l'objet d\u00e9sign\u00e9 par <code>o</code> (d'ovale, initialement, il est devenu circulaire). C'est l'illustration de ce qui \u00e9tait indiqu\u00e9 juste avant cette section...</p> </li> <li> <p>La m\u00e9thode <code>coords()</code> du <code>Canvas</code>, qui peut prendre en param\u00e8tres soit une succession de coordonn\u00e9es soit des coordonn\u00e9es explicitement group\u00e9es dans un <code>tuple</code> renvoie, lorsqu'elle n'est appel\u00e9e qu'avec le num\u00e9ro identifiant un \u00e9l\u00e9ment graphique, une liste des coordonn\u00e9es de cet \u00e9l\u00e9ment :</p> <pre><code>&gt;&gt;&gt; c.coords(rr)\n[20.0, 50.0, 100.0, 150.0]\n</code></pre> <p>Notez \u00e9galement que les coordonn\u00e9es ont beau \u00eatre donn\u00e9es enti\u00e8res, Tkinter les transtype en <code>&lt;float&gt;</code>.</p> <p>Il y a donc certaines incoh\u00e9rences ici, dans la logique de Tkinter...</p> </li> </ul> </li> </ul>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#detecter-des-chevauchements","title":"D\u00e9tecter des chevauchements","text":"<p>Cette fonction est tr\u00e8s utile, par exemple pour d\u00e9tecter les collisions dans un jeu. Elle est li\u00e9e \u00e0 la notion de \u00ab\u00a0 bounding box\u00a0\u00bb.</p> <p><code>find_overlapping</code> signifie litt\u00e9ralement \u00ab\u00a0trouve ce qui recouvre\u00a0\u00bb. On donne en argument \u00e0 cette m\u00e9thode les coordonn\u00e9es d'un rectangle qui correspond \u00e0 la r\u00e9gion \u00e9tudi\u00e9e. Elle renvoie un tuple.</p> <ul> <li> <p>Si le tuple est vide, alors la zone observ\u00e9e est vide : aucun \u00e9l\u00e9ment graphique n'y est pr\u00e9sent.</p> </li> <li> <p>Si un seul \u00e9l\u00e9ment est retourn\u00e9 dans le tuple, c'est qu'il n'y a pas de chevauchement (un seul \u00e9l\u00e9ment graphique figure dans la zone).</p> </li> <li> <p>Si le tuple compte 2 \u00e9l\u00e9ments ou plus, il y a bel et bien un chevauchement (mais uniquement pour ce qui concerne les bounding boxes, cf. remarque plus bas) : deux \u00e9l\u00e9ments graphiques (ou plus) sont situ\u00e9s dans la m\u00eame zone rectangulaire.</p> </li> </ul> <p>Voyez ce que donnent les instructions suivantes !</p> <pre><code>&gt;&gt;&gt; c.find_overlapping(0,0,100,100)\n&gt;&gt;&gt; c.find_overlapping(0,0,200,100)\n&gt;&gt;&gt; c.find_overlapping(200,200,250,250)\n&gt;&gt;&gt; c.find_overlapping(300,300,350,350)\n</code></pre> Remarque <p>Attention : la zone concern\u00e9e est rectangulaire, ainsi deux cercles pourront \u00eatre consid\u00e9r\u00e9s comme se chevauchant car le carr\u00e9 dans lequel ils sont inscrit se recouvrent. Pourtant, \u00e0 l'\u00e9cran, les cercles ne se toucheront en aucun cas !</p> <p></p> <p>Bienvenue dans le monde merveilleux de la d\u00e9tection des collisions...</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#pour-aller-plus-loin-les-tags","title":"Pour aller plus loin : les tags","text":"<p>Un tag est une \u00e9tiquette. \u00c9tiqueter les \u00e9l\u00e9ments graphiques d'un <code>Canvas</code> sert \u00e0 les regrouper sous une m\u00eame \u00e9tiquette. Par exemple, dans le contexte d'un jeu, on pourra utiliser plusieurs \u00e9l\u00e9ments graphiques pour d\u00e9finir un objet du d\u00e9cor. Si, durant le d\u00e9roulement du jeu, il est n\u00e9cessaire de modifier cet objet, utiliser le tag correspondant simplifiera grandement les choses : il sera alors facile de modifier l'ensemble des \u00e9l\u00e9ments associ\u00e9s (exemple : modifier la couleur d'un objet du d\u00e9cor, car on a chang\u00e9 d'univers et, m\u00eame si les \u00e9l\u00e9ments du d\u00e9cor sont identiques, l'ambiance graphique est diff\u00e9rente).</p> <p>Un tag est une simple cha\u00eene de caract\u00e8res) : un \u00e9l\u00e9ment graphique du <code>Canvas</code> peut avoir plusieurs tags diff\u00e9rents, et un m\u00eame tag peut \u00eatre associ\u00e9 \u00e0 plusieurs \u00e9l\u00e9ments graphiques diff\u00e9rents.</p> <p>Pour en savoir plus sur ce sujet, vous pourrez \u00e9tudier la m\u00e9thode <code>tag_bind()</code>.</p> <p>Notez que trouver un \u00e9l\u00e9ment graphique \u00e0 partir d'un tag est tr\u00e8s simple : partout o\u00f9 un identifiant d'\u00e9l\u00e9ment est admis comme param\u00e8tre d'une m\u00e9thode, vous pouvez le remplacer par un tag !</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#divers","title":"Divers","text":"<p>Voici quelques m\u00e9thodes du <code>Canvas</code> qu'il peut \u00eatre utile de conna\u00eetre :</p> <pre><code>  # Liste de tous les objets graphiques du canevas :\n  &gt;&gt;&gt; c.find_all()\n  # D\u00e9truire un objet graphique :\n  &gt;&gt;&gt; c.delete(3)\n  # Forcer la r\u00e9actualisation du canevas. Peut \u00eatre utile pour des questions de\n  # performances, et donc de fluidit\u00e9 d'affichage (vous pourrez lire \u00e0 ce sujet\n  # http://effbot.org/tkinterbook/canvas.htm#performance-issues)\n  &gt;&gt;&gt; c.update()\n</code></pre>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#des-exemples-concrets","title":"Des exemples concrets","text":""},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#realiser-une-animation-avec-la-methode-after","title":"R\u00e9aliser une animation avec la m\u00e9thode <code>after</code>","text":"<p>On va ici r\u00e9aliser une animation, dans laquelle un \u00e9l\u00e9ment graphique rebondira ind\u00e9finiment sur les bords du canevas. \u00c7a n'est pas tr\u00e8s utile, mais c'est rigolo  ! Et puis cela va nous amener \u00e0 rencontrer la m\u00e9thode <code>after</code> des fen\u00eatres Tkinter, qui pourra ensuite permettre de cr\u00e9er des petits jeux \u00a0!</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#premiere-approche-non-optimale","title":"Premi\u00e8re approche non-optimale","text":"<p>Toujours dans la console Python interactive que vous utilisez depuis le d\u00e9but de ce document, saisissez le code ci-dessous.</p> <pre><code>&gt;&gt;&gt; from random import randrange as rnd # Pr\u00e9f\u00e9rer randrange \u00e0 randint !\n&gt;&gt;&gt; from time import sleep              # Voir plus loin l'utilit\u00e9 !\n&gt;&gt;&gt; Dx, Dy = rnd(1, 21), rnd(1, 21)     # Vecteur d\u00e9placement al\u00e9atoire.\n&gt;&gt;&gt; while True:                         # On d\u00e9marre une boucle infinie...\n      c.move(o, Dx, Dy)\n      if c.coords(o)[0] &lt;= 0 or c.coords(o)[2] &gt;= c.winfo_width():\n          Dx *= -1\n      if c.coords(o)[1] &lt;= 0 or c.coords(o)[3] &gt;= c.winfo_height():\n          Dy *= -1\n      c.update()    # N\u00e9cessaire (la boucle principale de la GUI n'est pas lanc\u00e9e)\n      sleep(0.05)   # Utile si votre ordinateur est tr\u00e8s performant !\n</code></pre> <p>Voici ce que vous devriez observer : </p> <p>Vous devriez pouvoir interrompre la boucle infinie en pressant simultan\u00e9ment les touches Ctrl+C.</p> Explications d\u00e9taill\u00e9es du code pr\u00e9c\u00e9dent <ul> <li> <p>On commence par g\u00e9n\u00e9rer au hasard les coordonn\u00e9es du vecteur selon lequel l'\u00e9l\u00e9ment graphique <code>o</code> du <code>Canvas</code> se d\u00e9placera.</p> </li> <li> <p>On lance une boucle infinie.</p> <ul> <li> <p>Dans cette boucle, l'\u00e9l\u00e9ment graphique <code>o</code> est d\u00e9plac\u00e9 (de fa\u00e7on relative). Puis ses (nouvelles) coordonn\u00e9es sont \u00e9tudi\u00e9es, afin de faire en sorte que le rebond advienne lorsqu'il vient \u00e0 toucher les bords du canevas.</p> </li> <li> <p>Si l'abscisse de la \u00ab\u00a0limite gauche\u00a0\u00bb de <code>o</code> devient n\u00e9gative, ou que l'abscisse de la \u00ab\u00a0limite droite\u00a0\u00bb de <code>o</code> devient sup\u00e9rieure \u00e0 la largeur du canevas, le d\u00e9placement selon l'axe des abscisses change de signe (cela revient \u00e0 changer l'abscisse du vecteur d\u00e9placement en son oppos\u00e9).</p> </li> <li> <p>De m\u00eame, si l'ordonn\u00e9e de la \u00ab\u00a0limite sup\u00e9rieure visuelle\u00a0\u00bb de <code>o</code> devient n\u00e9gative, ou que l'ordonn\u00e9e de la \u00ab\u00a0limite inf\u00e9rieure visuelle\u00a0\u00bb de <code>o</code> devient sup\u00e9rieure \u00e0 la hauteur du canevas, le d\u00e9placement selon l'axe des ordonn\u00e9es change de signe (cela revient \u00e0 changer l'ordonn\u00e9e du vecteur d\u00e9placement en son oppos\u00e9). Remarque : la phrase pr\u00e9c\u00e9dente peut para\u00eetre surprenante si l'on a d\u00e9j\u00e0 oubli\u00e9 que l'axe des ordonn\u00e9es, en programmation, est souvent dirig\u00e9 vers le bas !</p> </li> </ul> </li> </ul> Remarques <ul> <li> <p>Sans l'instruction <code>sleep()</code>, le r\u00e9sultat serait ex\u00e9crable ! Le d\u00e9placement s'effectuerait aussi vite que possible, et l'affichage serait alors cahotique et saccad\u00e9...</p> </li> <li> <p>Lire  cette question sur stackoverflow pour une discussion concernant <code>c.winfo_width()</code> versus <code>c['width']</code>, dans l'objectif d'obtenir la taille d'un widget.</p> </li> <li> <p>Lire  cette autre question sur stackoverflow pour en apprendre plus sur les questions li\u00e9es au redimensionnement du canevas, pour s'adapter au redimensionnement de la fen\u00eatre parente.</p> </li> </ul>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#animer-mieux-avec-la-methode-after","title":"Animer mieux avec la m\u00e9thode <code>after()</code>","text":"<p>Une fa\u00e7on bien plus adapt\u00e9e de r\u00e9p\u00e9ter le d\u00e9placement de fa\u00e7on r\u00e9guli\u00e8re et pas trop fr\u00e9quente est d'utiliser une fonctionnalit\u00e9 native de Tkinter : la m\u00e9thode <code>after()</code> de la fen\u00eatre principale.</p> <p>On lui passe en param\u00e8tre un d\u00e9lai, exprim\u00e9 en millisecondes, ainsi qu'une fonction, qui sera automatiquement ex\u00e9cut\u00e9e pass\u00e9 ce d\u00e9lai. Pour que l'op\u00e9ration se r\u00e9p\u00e8te, la fonction concern\u00e9e doit absolument d\u00e9clencher \u00e0 nouveau un appel \u00e0 la m\u00e9thode <code>after()</code>.</p> <p>Voici un exemple concret (l'animation durera quelques secondes). Notez \u00e9galement la m\u00e9thode <code>after_cancel()</code> qui permet d'interrompre le flux des appels \u00e0 la fonction <code>bouge</code>, entretenus par la m\u00e9thode <code>after()</code>.</p> <pre><code>&gt;&gt;&gt; mvt = 0\n&gt;&gt;&gt; i = 0\n&gt;&gt;&gt; def bouge():\n      global i, mvt, Dx, Dy     # Essayez sans cette ligne, pour voir...\n      c.move(o, Dx, Dy)\n      if c.coords(o)[0] &lt;= 0 or c.coords(o)[2] &gt;= c.winfo_width():\n          Dx *= -1\n      if c.coords(o)[1] &lt;= 0 or c.coords(o)[3] &gt;= c.winfo_height():\n          Dy *= -1\n      c.update()                # Toujours n\u00e9cessaire...\n      mvt = f.after(20, bouge)  # Un d\u00e9lai de 20 ms implique 50 animations / s\n      i += 1\n      if i &gt;= 200:\n          f.after_cancel(mvt)\n\n&gt;&gt;&gt; bouge()\n&gt;&gt;&gt; print(mvt, i)\n</code></pre> D\u00e9tails sur la m\u00e9thode <code>after_cancel()</code> <p>L'arr\u00eat de l'animation est provoqu\u00e9 par l'appel de la m\u00e9thode <code>after_cancel()</code>, \u00e0 laquelle on passe en param\u00e8tre le num\u00e9ro du dernier \u00ab\u00a0job\u00a0\u00bb  d'animation (ici via la variable <code>mvt</code>). Il est donc essentiel de conserver cette information, constitu\u00e9e d'une cha\u00eene de la forme <code>\"after#1234\"</code>. Elle est obtenue lors de l'appel de la m\u00e9thode <code>after()</code>.</p> Note importante : les variables globales, C'EST LE MAL ! <p>Vous avez constat\u00e9 la pr\u00e9sence du mot-clef <code>global</code>, au tout d\u00e9but du code de la fonction <code>bouge()</code>. Il est suivi du nom des variables <code>i</code>, <code>mvt</code>, <code>Dx</code> et <code>Dy</code>. En effet, ces variables sont modifi\u00e9es par la fonction. Mais celle-ci \u00e9tant automatiquement r\u00e9-ex\u00e9cut\u00e9e par la fen\u00eatre <code>f</code> apr\u00e8s 20 millisecondes d'attente, il faut trouver un moyen de garder une trace des modifications des valeurs de ces variables.</p> <p>Sans indication sp\u00e9cifique, une variable cr\u00e9\u00e9e ou modifi\u00e9e au sein d'une fonction est locale. Cela signifie qu'elle n'a d'existence que tant que la fonction est en cours d'ex\u00e9cution. Sa valeurs sera perdue lorsque l'ex\u00e9cution de la fonction prendra fin (\u00e0 moins qu'elle ne soit renvoy\u00e9e par la fonction, par l'instruction <code>return</code>).</p> <p>Le fait de d\u00e9clarer les variables globales permet que les modifications r\u00e9alis\u00e9es au sein de la fonction <code>bouge</code> soient r\u00e9percut\u00e9es \u00e0 l'ext\u00e9rieur de son espace de noms (la zone de m\u00e9moire r\u00e9serv\u00e9e \u00e0 la fonction, que Python lui octroie au moment de son ex\u00e9cution).</p> <p>Le recours aux variables globales est consid\u00e9r\u00e9e comme peu optimal car source d'erreurs (difficile, parfois, de savoir quelle fonction modifie quelle variable). Il faut donc absolument \u00e9viter d'avoir recours aux variables globales ! Une bonne strat\u00e9gie de contournement repose sur l'utilisation d'un dictionnaire Python, qui garde la trace des valeurs importantes. Cette structure sophistiqu\u00e9e peut, en tant qu'objet Python, \u00eatre naturellement modifi\u00e9e par une fonction.</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#un-exemple-dans-les-regles-de-lart","title":"Un exemple \u00ab\u00a0dans les r\u00e8gles de l'art\u00a0\u00bb","text":"<p>Il est temps de vous proposer un script complet, avec la bonne fa\u00e7on de g\u00e9rer les variables sans les d\u00e9clarer <code>global</code> ! Enregistrez le code ci-dessous dans un fichier nomm\u00e9 <code>animation.py</code>.</p> <pre><code># coding: utf8\nfrom tkinter import *\nfrom random import randrange as rnd\n\n# Dictionnaire rassemblant les param\u00e8tres essentiels du \u00ab jeu \u00bb. Il peut\n# naturellement \u00eatre modifi\u00e9 depuis l'int\u00e9rieur de la fonction 'bouge'\n# d\u00e9finie un peu plus bas...\nconfig = {\"Dx\": rnd(1, 21), \"Dy\": rnd(1, 21), \"animation\": \"\"}\n\ndef bouge():\n    \"\"\"Fonction g\u00e9rant les animations\"\"\"\n    Dx = config[\"Dx\"]\n    Dy = config[\"Dy\"]\n    c.move(o, Dx, Dy)\n    if c.coords(o)[0] &lt;= 0 or c.coords(o)[2] &gt;= c.winfo_width():\n        config[\"Dx\"] = -Dx\n    if c.coords(o)[1] &lt;= 0 or c.coords(o)[3] &gt;= c.winfo_height():\n        config[\"Dy\"] = -Dy\n    animation = f.after(20, bouge)              # D\u00e9lai de 20 ms, soit 50 FPS...\n    c.itemconfigure(t, text=\"Animation : {}\".format(animation))\n    no_animation = int(animation.split(\"#\")[1]) # Extrait l'entier de 'after#123'.\n    config[\"animation\"] = animation\n    if no_animation &gt;= 400:\n        f.after_cancel(animation)               # Arr\u00eat de l'animation\n\n# Construction de l'interface graphique (minimaliste).\nf = Tk()\nf.title(\"Animations avec le canevas de Tkinter\")\n# Le canevas\nc = Canvas(f, background=\"light yellow\", width=800, height=600)\nc.pack()\n# Les \u00e9l\u00e9ments graphiques du canevas. Nouveaut\u00e9 : un texte !\no = c.create_oval(200, 50, 250, 100, fill=\"yellow\")\nt = c.create_text(10, 10, text=\"Animation : stopp\u00e9e\", anchor='nw')\n\nbouge()         # On doit appeler la fonction 'bouge()' pour initier l'animation !\nf.mainloop()    # D\u00e9marrage de la boucle principale de la fen\u00eatre.\n</code></pre> Remarques <ul> <li> <p>Notez ligne 21 le d\u00e9coupage de la cha\u00eene <code>after#xxx...</code> sur le caract\u00e8re <code>#</code> \u00e0 l'aide de la m\u00e9thode <code>split()</code> des cha\u00eenes de caract\u00e8res, afin de r\u00e9cup\u00e9rer la partie <code>xxx...</code> qui le suit, puis la conversion de la cha\u00eene ainsi obtenue en entier avec l'instructin de transtypage <code>int()</code>.</p> </li> <li> <p>Notez, lignes 16, 18 et 22 la modification du dictionnaire <code>config</code> depuis le corps de la fonction <code>bouge()</code>, car c'est un objet Python. La syntaxe <code>config[clef] = valeur</code> fait en r\u00e9alit\u00e9 appel \u00e0 une m\u00e9thode de l'objet <code>config</code>, qui re\u00e7oit <code>valeur</code> en argument, et qui modifie sans difficult\u00e9 <code>config</code> car c'est en quelque sorte l'objet lui-m\u00eame qui se modifie.</p> </li> <li> <p>Notez l'inutilit\u00e9 de forcer syst\u00e9matiquement la mise \u00e0 jour du canevas avec l'instruction <code>c.update()</code>. Tkinter s'occupe du rafra\u00eechissement de l'affichage au travers de la boucle principale <code>f.mainloop()</code>.</p> </li> </ul>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#un-point-important-a-propos-de-after","title":"Un point important \u00e0 propos de <code>after()</code>","text":"<p>Il est fondamental de comprendre que la m\u00e9thode <code>after()</code> permet \u00e0 Tkinter d'appeler automatiquement (ici toutes les 20 ms, soit 50 fois par seconde), une fonction qu'on lui donne en argument.</p> <p>Attention : on passe \u00e0 la m\u00e9thode <code>after()</code> le nom de la fonction !</p> <p>Il faut bien distinguer <code>fonction</code>, qui est un objet Python de type <code>&lt;function&gt;</code>, et <code>fonction()</code> (avec des parenth\u00e8ses et \u00e9ventuellement des param\u00e8tres entre ces parenth\u00e8ses), qui d\u00e9clenche l'ex\u00e9cution de ladite fonction, et qui d\u00e9signe donc la valeur de retour ainsi produite. Cette valeur de retour peut \u00eatre n'importe quel objet Python, \u00ab\u00a0rien\u00a0\u00bb y compris (c'est-\u00e0-dire <code>None</code>)...</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#attacher-un-evenement-a-un-widget-pour-lancer-lanimation","title":"Attacher un \u00e9v\u00e8nement \u00e0 un widget pour lancer l'animation","text":"<p>On va maintenant voir comment cr\u00e9er un bouton qui, lorsqu'on cliquera dessus, d\u00e9clenchera le mouvement de l'\u00e9l\u00e9ment graphique. On dira qu'on attache une fonction \u00e0 un \u00e9v\u00e8nement.</p> <p>Vous allez devoir modifier le script <code>animation.py</code> de sorte \u00e0 ce qu'il corresponde au code ci-dessous.</p> <pre><code># coding: utf8\nfrom tkinter import *\nfrom random import randrange as rnd\n\n# Dictionnaire rassemblant les param\u00e8tres essentiels du \u00ab jeu \u00bb.\nconfig = {\"Dx\": rnd(1, 21), \"Dy\": rnd(1, 21), \"animation\": \"\"}\n\ndef bouge(event=None):\n    \"\"\"Fonction g\u00e9rant les animations\"\"\"\n    Dx = config[\"Dx\"]\n    Dy = config[\"Dy\"]\n    c.move(o, Dx, Dy)\n    if c.coords(o)[0] &lt;= 0 or c.coords(o)[2] &gt;= Xmax:\n        config[\"Dx\"] = -Dx\n    if c.coords(o)[1] &lt;= 0 or c.coords(o)[3] &gt;= Ymax:\n        config[\"Dy\"] = -Dy\n    animation = f.after(20, bouge)              # D\u00e9lai de 20 ms, soit 50 FPS...\n    c.itemconfigure(t, text=\"Animation : {}\".format(animation))\n    no_animation = int(animation.split(\"#\")[1]) # Extrait l'entier de 'after#123'.\n    config[\"animation\"] = animation\n\n# Construction de l'interface graphique (minimaliste).\nf = Tk()\nf.title(\"Animations avec le canevas de Tkinter\")\n# Le canevas\nc = Canvas(f, background=\"light yellow\", width=800, height=600)\nc.configure(borderwidth=5, relief=RIDGE, highlightthickness=2)\nc.pack(padx=10, pady=10)\n# Les \u00e9l\u00e9ments graphiques du canevas. Nouveaut\u00e9 : un texte !\no = c.create_oval(200, 50, 250, 100, fill=\"yellow\")\nt = c.create_text(10, 10, text=\"Animation : stopp\u00e9e\", anchor='nw')\n# Un bouton\nb = Button(f, text='Bouge de l\u00e0 !')\nb.pack()\nb.bind('&lt;Button-1&gt;', bouge)     # '&lt;Button-1&gt;' est le bouton gauche de la souris\n\nc.update() # Indispensable, sinon Xmax et Ymax (ci-dessous) vaudront 1 chacun !\nXmax, Ymax = c.winfo_width(), c.winfo_height()\n\nf.mainloop()    # D\u00e9marrage de la boucle principale de la fen\u00eatre.\n</code></pre> Remarques <p>Notez le param\u00e8tre <code>event</code> qu'attend la fonction <code>bouge</code>, et qui re\u00e7oit la valeur <code>None</code> si aucun \u00e9v\u00e8nement n'est pass\u00e9 \u00e0 la fonction par l'objet graphique auquel elle est attach\u00e9e. Ici, un tel \u00e9v\u00e8nement n'est pas g\u00e9n\u00e9r\u00e9 par l'objet <code>Button</code>, on pourrait donc simplifer la d\u00e9finition de la fonction en \u00e9liminant le param\u00e8tre. Mais certains objets Tkinter, auxquels on a attach\u00e9 une fonction, g\u00e9n\u00e8rent et passent des objets \u00e9v\u00e8nements \u00e0 leur fonction associ\u00e9e (voir le paragraphe suivant). Et il peut aussi arriver qu'on souhaite associer la m\u00eame fonction \u00e0 deux objets Tkinter, l'un g\u00e9n\u00e9rant un \u00e9v\u00e8nement et l'autre non. Prendre l'habitude de d\u00e9finir une fonction qui doit \u00eatre associ\u00e9e \u00e0 un objet Tkinter en lui donnant syst\u00e9matiquement comme param\u00e8tre <code>event=None</code> est donc une bonne habitude (il faut ensuite tester dans le code de la fonction la valeur de <code>event</code>, pour savoir si elle vaut <code>None</code> ou pas).</p> Probl\u00e8me ! <p>Cliquez \u00e0 nouveau sur le bouton \u00ab\u00a0Bouge de l\u00e0 !\u00a0\u00bb : vous observerez que le mouvement s'acc\u00e9l\u00e8re. Cliquez encore : il acc\u00e9l\u00e8re davantage. Et ainsi de suite.</p> <p>Pourquoi ?</p> <p>Parce que vous d\u00e9clenchez un nouvel appel \u00e0 la fonction <code>bouge</code> : au lieu d'\u00eatre appel\u00e9e une fois toutes les 20 ms, elle sera alors appel\u00e9e deux fois, et ces appels seront \u00e9galement r\u00e9p\u00e9t\u00e9s toutes les 20\u00a0ms. Et ainsi de suite : plus vous cliquez, plus vous lancez de \u00ab\u00a0cycles\u00a0\u00bb d'appels \u00e0 la fonction <code>bouge</code>, d'o\u00f9 l'acc\u00e9l\u00e9ration observ\u00e9e, puisque la balle bouge, non pas plus vite, mais plus souvent... ce qui au final revient au m\u00eame\u00a0!</p> Exercices <ol> <li> <p>Modifier le code pr\u00e9c\u00e9dent pour ajouter \u00e0 l'interface un second bouton permettant de stopper le mouvement. Rappel : il faut recourir \u00e0 la m\u00e9thode <code>after_cancel()</code>.</p> </li> <li> <p>Modifier le code d'origine (pas celui cr\u00e9\u00e9 \u00e0 l'exercice pr\u00e9c\u00e9dent) de sorte \u00e0 ce qu'une touche, par exemple la touche Enter ou la barre d'espace, d\u00e9clenche ou stoppe le mouvement (selon la situation avant l'appui). Vous consulterez avec profit la documentation de Tkinter consacr\u00e9e aux \u00e9v\u00e8nements.</p> </li> <li> <p>Comment d\u00e9clencher ou arr\u00eater le mouvement aussi bien \u00e0 la souris qu'au clavier ?</p> </li> <li> <p>Comment affecter une action aux autres bouton de la souris ?</p> </li> </ol>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#dessiner-a-la-souris","title":"Dessiner \u00e0 la souris","text":"<p>Maintenez enfonc\u00e9 le bouton gauche de la souris, et d\u00e9placez-l\u00e0 pour dessiner !</p> <p></p> <pre><code># coding: utf8\nfrom tkinter import *\n\nlargeur_canevas = 500\nhauteur_canevas = 150\n\ndef dessine(event):\n   rouge_orange = \"#ff6042\"\n   x1, y1 = event.x - 1, event.y - 1\n   x2, y2 = event.x + 1, event.y + 1\n   c.create_oval(x1, y1, x2, y2, fill=rouge_orange, outline=rouge_orange)\n\nf = Tk()\nf.title(\"Dessinons en pointill\u00e9\")\nc = Canvas(f, width=largeur_canevas, height=hauteur_canevas)\nc.pack(expand=YES, fill=BOTH)\nc.bind('&lt;B1-Motion&gt;', dessine) # Autre possibilit\u00e9 : f.bind(...)\n\nmessage = Label(f, text=\"Cliquer et d\u00e9placer la souris pour dessiner\")\nmessage.pack(side=BOTTOM)\n\nf.mainloop()\n</code></pre> Explications <p>On observe deux nouveaut\u00e9s ici :</p> <ul> <li> <p>on attache la fonction <code>dessine()</code> \u00e0 l'\u00e9v\u00e8nement <code>&lt;B1-Motion&gt;</code>, qui correspond au fait de cliquer sur le bouton gauche de la souris, de le laisser enfonc\u00e9, et de d\u00e9placer la souris ;</p> </li> <li> <p>le fait d'associer une fonction \u00e0 un bouton de la souris g\u00e9n\u00e8re automatiquement un \u00e9v\u00e8nement, pass\u00e9 en argument \u00e0 la fonction <code>dessine()</code>. Cet \u00e9v\u00e8nement comporte en lui quantit\u00e9 d'informations utiles, \u00e0 commencer par les coordonn\u00e9es du point en lequel se trouvait l'extr\u00e9mit\u00e9 du pointeur de la souris au moment du clic : <code>event.x</code> et <code>event.y</code>.</p> </li> </ul> <p>Une fois ces informations obtenues, rien de plus simple que de cr\u00e9er un cercle de petite taille et de le faire appara\u00eetre sur le canevas ! Notez qu'ici, on ne m\u00e9morise pas l'\u00e9l\u00e9ment graphique ainsi cr\u00e9\u00e9 : il sera donc impossible de le faire \u00e9voluer (il serait pertinent de le faire si l'on voulait pouvoir annuler tout ou partie du trac\u00e9).</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#une-calculatrice-simplette","title":"Une calculatrice simple(tte)","text":"<p>Il s'agit d'un petit programme tout simple. Les fonctions math\u00e9matiques usuelles sont disponibles, la syntaxe est celle du module math.</p> <p></p> <pre><code># coding: utf8\nfrom tkinter import *\nfrom math import *\n\ndef evaluer(event):\n    resultat.configure(text=\"R\u00e9sultat : {}\".format(eval(saisie.get())))\n\nf = Tk()\nf.title(\"Calculette\")\nsaisie = Entry(f)\nsaisie.bind(\"&lt;Return&gt;\", evaluer)\nresultat = Label(f)\nsaisie.pack()\nresultat.pack()\n\nf.mainloop()\n</code></pre> Explications <p>Vous d\u00e9couvrez ici le widget <code>Entry</code>, qui correspond \u00e0 une zone de saisie. On r\u00e9cup\u00e8re les informations entr\u00e9es au clavier dans ce widget \u00e0 l'aide de sa m\u00e9thode <code>get()</code>, dont le r\u00e9sultat est une cha\u00eene de caract\u00e8res.</p>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#les-variables-tkinter","title":"Les variables Tkinter","text":"<p>Le code pr\u00e9c\u00e9dent peut \u00eatre \u00e9crit autrement en utilisant une \u00ab\u00a0variable Tkinter\u00a0\u00bb. Tkinter en poss\u00e8de de 4 types : <code>BooleanVar</code>, <code>DoubleVar</code>, <code>IntVar</code> et <code>StringVar</code> (plus de d\u00e9tails ici). C'est assez limit\u00e9, et globalement insuffisant aux besoins d'une application un peu cons\u00e9quente, et on est souvent amen\u00e9 \u00e0 exploiter des structures plus souples et riches, telles que les dictionnaires Python.</p> <p>L'int\u00e9r\u00eat d'une telle variable est qu'il s'agit d'un objet, dot\u00e9 de m\u00e9thodes lui permettant de se modifier lui-m\u00eame. Il est de ce fait inutile de devoir le d\u00e9clarer comme \u00e9tant de type <code>global</code> dans chaque fonction qui y fait appel.</p> <p>L'autre int\u00e9r\u00eat, absolument majeur, est qu'un widget dont le contenu provient d'une variable Tkinter se met \u00e0 jour dynamiquement, \u00e0 chaque \u00e9volution du contenu de la variable : inutile de devoir le reconfigurer \u00e0 chaque changement de valeur de la variable ! Ainsi, des \u00ab\u00a0variable Tkinter\u00a0\u00bb rattach\u00e9e \u00e0 des widgets tels que <code>Button</code>, <code>Label</code>, <code>Entry</code> etc., mettront automatiquement et dynamiquement \u00e0 jour le widget auquel elles sont assign\u00e9es \u00e0 chaque changement de leur \u00ab contenu \u00bb.</p> <ul> <li> <p>Supposons que <code>s_tk = StringVar()</code>. \u00c9crire une valeur se fait au moyen de la m\u00e9thode <code>set()</code> : <code>s_tk.set(\"toto\")</code>. Lire une valeur se fait au moyen de la m\u00e9thode <code>get()</code> : <code>s_tk.get()</code> renverra la cha\u00eene <code>'toto'</code>. Cela fonctionne exactement pareil avec les trois autres types de \u00ab\u00a0variables Tkinter\u00a0\u00bb.</p> </li> <li> <p>Si <code>s_tk = StringVar()</code>, la valeur par d\u00e9faut de <code>s_tk</code> est la cha\u00eene vide <code>''</code>.</p> </li> <li> <p>Si <code>i_tk = IntVar()</code>, la valeur par d\u00e9faut de <code>i_tk</code> est <code>0</code>.</p> </li> <li> <p>Si <code>d_tk = DoubleVar()</code>, la valeur par d\u00e9faut de <code>d_tk</code> est <code>0.0</code>.</p> </li> <li> <p>Si <code>b_tk = BooleanVar()</code>, la valeur par d\u00e9faut de <code>b_tk</code> est <code>False</code>.</p> </li> <li> <p>On peut d\u00e9clarer une variable Tkinter et sa valeur initiale simultan\u00e9ment\u00a0: <code>s_tk = StringVar(value=\"toto\")</code>, ou <code>i_tk = IntVar(value=-2)</code>, ou <code>d_tk = DoubleVar(value=3.14)</code>, ou encore <code>b_tk = BooleanVar(value=True)</code>.</p> </li> <li> <p>Un type de variable sp\u00e9cifique peut-\u00eatre associ\u00e9 \u00e0 certains widgets :</p> <ul> <li><code>Button</code> poss\u00e8de une option <code>textvariable</code> qui attend une <code>StringVar</code> ;</li> <li><code>Checkbutton</code> a une option <code>variable</code> qui attend plut\u00f4t une <code>IntVar</code> (mais \u00e7a n'est pas obligatoire) ;</li> <li><code>Entry</code>, <code>Label</code> et <code>Menubutton</code> ont une option <code>textvariable</code> attendant une <code>StringVar</code> ;</li> <li>etc. vous trouverez plus de d\u00e9tails ici.</li> </ul> </li> <li> <p>Tkinter fait du transtypage silencieux (ce qui est mal) : si l'on fait <code>s_tk.set(None)</code>, alors <code>s_tk.get()</code> renverra... <code>'None'</code> (une cha\u00eene de caract\u00e8res !).</p> </li> <li> <p>Tkinter est m\u00eame vraiment \u00ab\u00a0sale\u00a0\u00bb, parfois : <code>i_tk.set(\"toto\")</code> ne pose aucun probl\u00e8me (alors qu'on a d\u00e9clar\u00e9 que <code>i_tk</code> est une <code>IntVar</code>, donc a priori apte \u00e0 n'accueillir que des nombres entiers !). Par contre <code>i_tk.get()</code> provoque une erreur <code>_tkinter.TclError: expected floating-point number but got \"toto\"</code> !</p> </li> </ul> Remarque : de l'int\u00e9r\u00eat des dictionnaires <p>Les dictionnaires ont de nombreuses vertus ! En plus de ce que vous savez d\u00e9j\u00e0 d'eux, sachez qu'il est possible (et m\u00eame facile) de les s\u00e9rialiser afin, par exemple, de sauvegarder leurs contenus sur le disque dur ou d'envoyer toute la structure de donn\u00e9es \u00e0 travers le r\u00e9seau... Vous lirez avec profit ce document (il est d'ailleurs aussi de moi !).</p> <p>Voici un exemple, basique et sans r\u00e9el int\u00e9r\u00eat, de s\u00e9rialisation dans une variable Tkinter <code>StringVar</code>. On utilise le module <code>pickle</code> pour s\u00e9rialiser un dictionnaire Python : la s\u00e9rialisation d'un objet informatique est sa conversion en un flux d'octets (et donc de bits) qui pourra ensuite soit \u00eatre enregistr\u00e9 sur un support de stockage (disque dur, clef USB, etc.) soit envoy\u00e9 \u00e0 un autre ordinateur \u00e0 travers une connexion r\u00e9seau.</p> <pre><code># coding: utf8\nimport pickle      # Un excellent module pour s\u00e9rialiser des donn\u00e9es\nd = {1:2, 'a':'b'} # Cr\u00e9ation d'un dictionnaire bidon\n# Cr\u00e9ation d'une variable StringVar initialis\u00e9e avec la conversion en cha\u00eene\n# de caract\u00e8res de l'objet de type bytes g\u00e9n\u00e9r\u00e9 par pickle.dumps\ns = StringVar(pickle.dumps(d))\n# \u00c0 ce stade, un appel \u00e0 s.get() renverrait \"b'\nx80\nx03}q\nx00(K\nx01K\n# \nx02X\nx01\nx00\nx00\nx00aq\nx01X\nx01\nx00\nx00\nx00bq\nx02u.'\"\n# Pour recr\u00e9er un dictionnaire \u00e0 partir de cette cha\u00eene, il faudra faire :\nD = pickle.loads(eval(s.get())) # D == d renvoie alors True !\n</code></pre> <p>Voici le programme \u00ab calculatrice \u00bb pr\u00e9c\u00e9dent modifi\u00e9 pour exploiter une variable Tkinter <code>StringVar</code>. </p> <pre><code># coding: utf8\nfrom tkinter import *\nfrom math import *\n\ndef evaluer(event):\n    r.set(str(eval(saisie.get())))\n\nf = Tk()\n# Il faut absolument cr\u00e9er une fen\u00eatre principale AVANT de cr\u00e9er une variable\n# Tkinter ! Sinon vous obtiendrez une erreur : \u00ab RuntimeError: Too early to\ncreate variable: no default root window \u00bb\nr = StringVar()\nsaisie = Entry(f)\nsaisie.bind(\"&lt;Return&gt;\", evaluer)\nsaisie.pack()\nLabel(f, text=\"R\u00e9sultat :\").pack() # Pas besoin de se souvenir de ce widget !\nresultat = Label(f, textvariable=r)\nresultat.pack()\n\nf.mainloop()\n</code></pre>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#une-application-presque-complete-la-todo-list","title":"Une application (presque) compl\u00e8te : la \u00ab todo list \u00bb","text":"<p>Il s'agit l\u00e0 d'un programme sensiblement plus long, permettant de cr\u00e9er et g\u00e9rer une liste de t\u00e2ches.</p> <p>Les fonctionnalit\u00e9s introduites ici sont :</p> <ul> <li>barre de menus ;</li> <li>fen\u00eatre pop-up ;</li> <li>gestionnaire de fichier (pour enregistrer ou charger un fichier) ;</li> <li>enregistrement dans un fichier (version simple : il serait mieux d'utiliser le module <code>pickle</code>) ;</li> <li>association d'\u00e9v\u00e8nements \u00e0 une touche du clavier ;</li> <li>widget \u00ab\u00a0bo\u00eete de listes\u00a0\u00bb ;</li> <li>glisser-d\u00e9poser ;</li> <li>int\u00e9gration d'une image (t\u00e9l\u00e9chargez-l\u00e0 ici).</li> </ul> <p>\u00c0 vous de d\u00e9cortiquer le fonctionnement de ce script ! Des liens \u00e9maillent les commentaires pour vous y aider.</p> <p></p> <pre><code># coding: utf8\nfrom tkinter import *\nimport os\nimport tkinter.messagebox\nfrom tkinter import filedialog\n\nf = Tk()\nf.title(\"Liste de t\u00e2ches\")\nlabel1 = Label(f, text=\"Nouvelle t\u00e2che :\")\n# Ajout d'une image pour \u00e9gayer l'ensemble. Le fichier image doit \u00eatre\n# pr\u00e9sent dans le r\u00e9pertoire courant de l'application (dans cet exemple).\n# Pour g\u00e9rer du JPEG cf. https://www.nemoquiz.com/python/images-in-tkinter/\n# Avantage du PNG : pas de perte (format non destructeur) et gestion\n# de la transparence.\n# Inconv\u00e9nient du PNG : fichiers plus volumineux que du JPEG.\nicone = PhotoImage(file=\"notes.png\")\nlabel2 = Label(f, image=icone)\n# Une bo\u00eete de saisie, cf. http://tkinter.fdex.eu/doc/entw.html#Entry\n# (on validera une saisie en appuyant sur Entr\u00e9e du clavier, cf. plus bas).\n# Attention : cette touche N'est PAS celle du pav\u00e9 num\u00e9rique !\nsaisie_tache = Entry(f)\n# Une liste simple, cf. http://tkinter.fdex.eu/doc/lbw.html#Listbox.\nliste_taches = Listbox(f, height=6)\nb = Button(f, text=\"Effacer la liste de t\u00e2ches\")\nlabel1.grid(row=0, column=0, pady=3)\nsaisie_tache.grid(row=0, column=1)\nlabel2.grid(row=1, column=0, pady=3)\nliste_taches.grid(row=1, column=1)\nb.grid(row=2, column=0, columnspan=2, pady=3)\n\ndef ajouter_tache(event=None): # d\u00e9finition du gestionnaire\n    tache = saisie_tache.get()\n    liste_taches.insert(\"end\", tache)\n    saisie_tache.delete(0, \"end\")\n\nsaisie_tache.bind(\"&lt;Return&gt;\", ajouter_tache) # liaison\n\n# Vider la liste des taches\n# Fonction lambda : fonction d\u00e9pourvue de nom, comprenant une seule et unique\n# instruction, retournant une \u00ab valeur \u00bb.\nb[\"command\"] = lambda : liste_taches.delete(0, \"end\")\n# Supprimer une t\u00e2che, en appuyant sur la doute \"Suppr.\" (\u00e0 droite de la\n# touche Entr\u00e9e).\nliste_taches.bind(\"&lt;Delete&gt;\", lambda event=None: liste_taches.delete(liste_taches.curselection()))\n\n# Cette variable Tkinter sert \u00e0 conna\u00eetre l'index de la t\u00e2che s\u00e9lectionn\u00e9e.\n# On pourrait aussi utiliser une variable normale et la d\u00e9clarer \u00ab globale \u00bb\n# dans chaque fonction o\u00f9 on a besoin de la modifier...\nindex = IntVar()\n\ndef clic_sur_item(event): # Ce qu'on fait lorsqu'on clique sur un item\n    # On stocke dans la variable enti\u00e8re \"index\" le num\u00e9ro de la t\u00e2che\n    # la plus proche de l'emplacement o\u00f9 l'on a cliqu\u00e9 (on se base sur\n    # l'ordonn\u00e9e du point cliqu\u00e9 pour le d\u00e9terminer).\n    index.set(liste_taches.nearest(event.y))\n\ndef relacher_sur_item(event): # Ce qu'on fait lorsqu'on relache le clic sur un\n    # autre item. On r\u00e9cup\u00e8re l'item sur lequel on a initi\u00e9 le clic, puis\n    # l'index et l'item sur lequel on a relach\u00e9 le clic et on \u00e9change si\n    # n\u00e9cessaire les items.\n    item1 = liste_taches.get(index.get())\n    # index2 est une variable \u00ab standard \u00bb !\n    index2 = liste_taches.nearest(event.y)\n    if index2 != index.get():\n        item2 = liste_taches.get(index2)\n        liste_taches.delete(index.get()) # On supprime le premier item ...\n        liste_taches.insert(index.get(), item2) # ...qu'on remplace par le second\n        liste_taches.delete(index2) # Et vice versa !\n        liste_taches.insert(index2, item1)\n\n# Cf. https://docs.python.org/3/library/tkinter.html#bindings-and-events pour\n# comprendre le add=\"+\". Cet article donne une illustration de l'int\u00e9r\u00eat\n# du add='+' : https://www.pythontutorial.net/tkinter/tkinter-event-binding/\nliste_taches.bind(\"&lt;Button-1&gt;\", clic_sur_item, add=\"+\")\nliste_taches.bind(\"&lt;ButtonRelease-1&gt;\", relacher_sur_item)\n\ndef charger():\n    # Exercice : \u00e0 vous de coder le contenu de cette fonction !\n    tkinter.messagebox.showinfo(\"Oups !\", \"Vous devrez coder cette fonction !\")\n\ndef enregistrer():\n    # Cf. http://tkinter.unpythonic.net/wiki/tkFileDialog\n    # Il peut \u00eatre utile de conna\u00eetre le r\u00e9pertoire courant (option initialdir).\n    # Pour cela, mettre import os en t\u00eate de fichier, puis utiliser os.getcwd().\n    fichier =  filedialog.asksaveasfilename(initialdir = os.getcwd(),\n        title = \"Choisir un fichier\",\n        filetypes = ((\"Fichier de t\u00e2ches (texte)\",\"*.todo\"),))\n    if fichier:\n        with open(fichier, \"w\") as f:\n            for ligne in liste_taches.get(0,END):\n                f.write(ligne+\"\\n\") # +\"\\n\" pour ajouter un saut de ligne \u00e0 chaque entr\u00e9e\n\ndef a_propos():\n    tkinter.messagebox.showinfo(\"\u00c0 propos de ce logiciel\",\n\"\"\"Ce logiciel est disponible sous la licence GNU/GPL\n(cf. https://www.gnu.org/licenses/gpl-3.0.fr.html).\n\nSaisir une t\u00e2che dans la zone\nde saisie et valider la saisie\nen pressant la touche Entr\u00e9e\n(pas celle du pav\u00e9 num\u00e9rique).\n\nLes t\u00e2ches peuvent \u00eatre \nr\u00e9organis\u00e9es par simple\nglisser-d\u00e9poser.\n\nPour supprimer une t\u00e2che,\nla s\u00e9lectionner puis presser\nla touche Suppr.\n\"\"\")\n\n# Cr\u00e9er une barre de menu principale\nbarre_de_menus = Menu(f)\n# Cr\u00e9er une barre de menu secondaire\nmenu_actions = Menu(barre_de_menus, tearoff=1) # tearoff=0 permet d'avoir un menu \u00ab non d\u00e9tachable \u00bb\nmenu_actions.add_command(label=\"Charger\", command=charger)\nmenu_actions.add_command(label=\"Enregistrer\", command=enregistrer)\nmenu_actions.add_separator()\nmenu_actions.add_command(label=\"Quitter\", command=f.quit)\n# Ajouter la barre de menu secondaire \u00e0 la barre de menu principale\nbarre_de_menus.add_cascade(label=\"Actions\", menu=menu_actions)\n# Ajouter une commande \u00e0 la barre de menu principale\nbarre_de_menus.add_command(label=\"\u00c0 propos\", command=a_propos)\n\n# Ajouter la barre de menu principale \u00e0 la fen\u00eatre\nf.config(menu=barre_de_menus)\n\nf.mainloop()\n</code></pre>"},{"location":"uaa13-14_python/tp4_tkinter_trieles/tkinter/#ressources-complementaires","title":"Ressources compl\u00e9mentaires","text":"<p>Les essentiels</p> <ul> <li> <p>Excellente introduction \u00e0 l'utilisation de Tkinter, riche d'exemples (d'autres widget y sont d\u00e9crits, par exemple <code>Frame</code>, <code>Spinbox</code>, <code>Scale</code>, <code>FileDialog</code>, les menus... et il y a aussi un exemple de glisser-d\u00e9poser (drag and drop en anglais) dans un contexte graphique : http://f.sincere.free.fr/isn/python/cours_python_tkinter.php.</p> </li> <li> <p>Documentation assez compl\u00e8te sur Tkinter (en fran\u00e7ais) : http://tkinter.fdex.eu/.</p> </li> <li> <p>Autre introduction \u00e0 Tkinter, assez exhaustive (y sont abord\u00e9s entre autres choses le placement pr\u00e9cis d'une nouvelle fen\u00eatre, les widget <code>Checkbutton</code>, <code>Radiobutton</code>, <code>Text</code>, des d\u00e9tails sur les formes dessinables dans un <code>Canvas</code> (jonctions douces ou dures des lignes, gestion des images, etc.) ainsi que des widget plus complexes tels que <code>OptionMenu</code>, <code>PanedWindow</code>, <code>ListBox</code>, <code>ScrollBar</code>, les diff\u00e9rents styles de curseurs de souris, les bo\u00eetes de saisie (textes, fichiers, couleurs, etc.) : http://www.jchr.be/python/tkinter.htm.</p> </li> <li> <p>Didacticiel (y compris Python 2.x vs Python 3.x, synth\u00e9tise les options par cat\u00e9gorie pour plus de lisibilit\u00e9 et propose des illustrations bienvenues sur diff\u00e9rentes options de relief des widget) : http://apprendre-python.com/page-tkinter-interface-graphique-python-tutoriel.</p> </li> </ul> <p>Autres ressources (un peu en vrac)</p> <ul> <li> <p>L'incontournable livre de G\u00e9rard SWINNEN (pages 191 \u00e0 278, pour ce qui concerne Tkinter).</p> </li> <li> <p>Un autre tutoriel sur Tkinter.</p> </li> <li> <p>Pas en rapport avec Tkinter, un peu ancien (con\u00e7u en 2014 dans le contexte de l'ISN), mais certainement toujours utile (ce sont des fiches m\u00e9thodes) : http://fiches-isn.readthedocs.org/fr/latest/index.html</p> </li> <li> <p> Drawing in Tkinter.</p> </li> <li> Introduction to GUI programming with Tkinter (orient\u00e9 POO \u2015 si vous ne savez pas ce que c'est, oubliez : vous l'apprendrez ult\u00e9rieurement  !).</li> </ul>"},{"location":"uaa7_sql/bd/","title":"UAA7 - Bases de donn\u00e9es en SQLite","text":"<p>Ces pdf ont \u00e9t\u00e9 r\u00e9dig\u00e9s \u00e0 partir du site de Didier M\u00fcller</p> <ul> <li>Cours (pdf)</li> <li>Exercices (pdf)</li> <li>Travaux pratiques (pdf)</li> <li>M\u00e9mo (pdf)</li> </ul>"},{"location":"uaa8_secu_linux5TT/linux/","title":"UAA8 - Operating System (OS) : Le gestionnaire de fichier sous linux","text":"<ul> <li>Cours et Travaux pratiques (pdf)</li> <li>M\u00e9mo commandes linux (a-l) (pdf)</li> <li>M\u00e9mo commandes linux (m-z) (pdf)</li> </ul>"}]}